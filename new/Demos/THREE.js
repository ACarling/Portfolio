/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ !function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";let t="300 es";class i{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});let i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;let i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;let i=this._listeners,r=i[e];if(void 0!==r){let n=r.indexOf(t);-1!==n&&r.splice(n,1)}}dispatchEvent(e){if(void 0===this._listeners)return;let t=this._listeners,i=t[e.type];if(void 0!==i){e.target=this;let r=i.slice(0);for(let n=0,a=r.length;n<a;n++)r[n].call(this,e);e.target=null}}}let r=[];for(let n=0;n<256;n++)r[n]=(n<16?"0":"")+n.toString(16);let a=1234567,s=Math.PI/180,o=180/Math.PI;function l(){let e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,a=r[255&e]+r[e>>8&255]+r[e>>16&255]+r[e>>24&255]+"-"+r[255&t]+r[t>>8&255]+"-"+r[t>>16&15|64]+r[t>>24&255]+"-"+r[63&i|128]+r[i>>8&255]+"-"+r[i>>16&255]+r[i>>24&255]+r[255&n]+r[n>>8&255]+r[n>>16&255]+r[n>>24&255];return a.toUpperCase()}function h(e,t,i){return Math.max(t,Math.min(i,e))}function u(e,t){return(e%t+t)%t}function c(e,t,i){return(1-i)*e+i*t}function d(e){return e*s}function p(e){return e*o}function m(e){return(e&e-1)==0&&0!==e}function f(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function g(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var $=Object.freeze({__proto__:null,DEG2RAD:s,RAD2DEG:o,generateUUID:l,clamp:h,euclideanModulo:u,mapLinear:function e(t,i,r,n,a){return n+(t-i)*(a-n)/(r-i)},inverseLerp:function e(t,i,r){return t!==i?(r-t)/(i-t):0},lerp:c,damp:function e(t,i,r,n){return c(t,i,1-Math.exp(-r*n))},pingpong:function e(t,i=1){return i-Math.abs(u(t,2*i)-i)},smoothstep:function e(t,i,r){return t<=i?0:t>=r?1:(t=(t-i)/(r-i))*t*(3-2*t)},smootherstep:function e(t,i,r){return t<=i?0:t>=r?1:(t=(t-i)/(r-i))*t*t*(t*(6*t-15)+10)},randInt:function e(t,i){return t+Math.floor(Math.random()*(i-t+1))},randFloat:function e(t,i){return t+Math.random()*(i-t)},randFloatSpread:function e(t){return t*(.5-Math.random())},seededRandom:function e(t){return void 0!==t&&(a=t%2147483647),((a=16807*a%2147483647)-1)/2147483646},degToRad:d,radToDeg:p,isPowerOfTwo:m,ceilPowerOfTwo:f,floorPowerOfTwo:g,setQuaternionFromProperEuler:function e(t,i,r,n,a){let s=Math.cos,o=Math.sin,l=s(r/2),h=o(r/2),u=s((i+n)/2),c=o((i+n)/2),d=s((i-n)/2),p=o((i-n)/2),m=s((n-i)/2),f=o((n-i)/2);switch(a){case"XYX":t.set(l*c,h*d,h*p,l*u);break;case"YZY":t.set(h*p,l*c,h*d,l*u);break;case"ZXZ":t.set(h*d,h*p,l*c,l*u);break;case"XZX":t.set(l*c,h*f,h*m,l*u);break;case"YXY":t.set(h*m,l*c,h*f,l*u);break;case"ZYZ":t.set(h*f,h*m,l*c,l*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+a)}}});class x{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){let t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){let e=Math.atan2(-this.y,-this.x)+Math.PI;return e}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){let i=Math.cos(t),r=Math.sin(t),n=this.x-e.x,a=this.y-e.y;return this.x=n*i-a*r+e.x,this.y=n*r+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}x.prototype.isVector2=!0;class v{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,s,o,l){let h=this.elements;return h[0]=e,h[1]=r,h[2]=s,h[3]=t,h[4]=n,h[5]=o,h[6]=i,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){let t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,r=t.elements,n=this.elements,a=i[0],s=i[3],o=i[6],l=i[1],h=i[4],u=i[7],c=i[2],d=i[5],p=i[8],m=r[0],f=r[3],g=r[6],$=r[1],x=r[4],v=r[7],y=r[2],b=r[5],w=r[8];return n[0]=a*m+s*$+o*y,n[3]=a*f+s*x+o*b,n[6]=a*g+s*v+o*w,n[1]=l*m+h*$+u*y,n[4]=l*f+h*x+u*b,n[7]=l*g+h*v+u*w,n[2]=c*m+d*$+p*y,n[5]=c*f+d*x+p*b,n[8]=c*g+d*v+p*w,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8];return t*a*h-t*s*l-i*n*h+i*s*o+r*n*l-r*a*o}invert(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=h*a-s*l,c=s*o-h*n,d=l*n-a*o,p=t*u+i*c+r*d;if(0===p)return this.set(0,0,0,0,0,0,0,0,0);let m=1/p;return e[0]=u*m,e[1]=(r*l-h*i)*m,e[2]=(s*i-r*a)*m,e[3]=c*m,e[4]=(h*t-r*o)*m,e[5]=(r*n-s*t)*m,e[6]=d*m,e[7]=(i*o-l*t)*m,e[8]=(a*t-i*n)*m,this}transpose(){let e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){let t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,n,a,s){let o=Math.cos(n),l=Math.sin(n);return this.set(i*o,i*l,-i*(o*a+l*s)+a+e,-r*l,r*o,-r*(-l*a+o*s)+s+t,0,0,1),this}scale(e,t){let i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){let t=Math.cos(e),i=Math.sin(e),r=this.elements,n=r[0],a=r[3],s=r[6],o=r[1],l=r[4],h=r[7];return r[0]=t*n+i*o,r[3]=t*a+i*l,r[6]=t*s+i*h,r[1]=-i*n+t*o,r[4]=-i*a+t*l,r[7]=-i*s+t*h,this}translate(e,t){let i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){let t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function y(e){if(0===e.length)return-1/0;let t=e[0];for(let i=1,r=e.length;i<r;++i)e[i]>t&&(t=e[i]);return t}v.prototype.isMatrix3=!0;let b={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function w(e,t){return new b[e](t)}function _(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}let E;class T{static getDataURL(e){if(/^data:/i.test(e.src)||"undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===E&&(E=_("canvas")),E.width=e.width,E.height=e.height;let i=E.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=E}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let S=0;class M extends i{constructor(e=M.DEFAULT_IMAGE,t=M.DEFAULT_MAPPING,i=1001,r=1001,n=1006,a=1008,s=1023,o=1009,h=1,u=3e3){super(),Object.defineProperty(this,"id",{value:S++}),this.uuid=l(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=a,this.anisotropy=h,this.format=s,this.internalFormat=null,this.type=o,this.offset=new x(0,0),this.repeat=new x(1,1),this.center=new x(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new v,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this}toJSON(e){let t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){let r=this.image;if(void 0===r.uuid&&(r.uuid=l()),!t&&void 0===e.images[r.uuid]){let n;if(Array.isArray(r)){n=[];for(let a=0,s=r.length;a<s;a++)r[a].isDataTexture?n.push(A(r[a].image)):n.push(A(r[a]))}else n=A(r);e.images[r.uuid]={uuid:r.uuid,url:n}}i.image=r.uuid}return"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function A(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?T.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}M.DEFAULT_IMAGE=void 0,M.DEFAULT_MAPPING=300,M.prototype.isTexture=!0;class R{constructor(e=0,t=0,i=0,r=1){this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){let t=this.x,i=this.y,r=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*i+a[8]*r+a[12]*n,this.y=a[1]*t+a[5]*i+a[9]*r+a[13]*n,this.z=a[2]*t+a[6]*i+a[10]*r+a[14]*n,this.w=a[3]*t+a[7]*i+a[11]*r+a[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);let t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,n,a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],u=a[5],c=a[9],d=a[2],p=a[6],m=a[10];if(.01>Math.abs(o-h)&&.01>Math.abs(l-d)&&.01>Math.abs(c-p)){if(.1>Math.abs(o+h)&&.1>Math.abs(l+d)&&.1>Math.abs(c+p)&&.1>Math.abs(s+u+m-3))return this.set(1,0,0,0),this;t=Math.PI;let f=(s+1)/2,g=(u+1)/2,$=(m+1)/2,x=(o+h)/4,v=(l+d)/4,y=(c+p)/4;return f>g&&f>$?f<.01?(i=0,r=.707106781,n=.707106781):(r=x/(i=Math.sqrt(f)),n=v/i):g>$?g<.01?(i=.707106781,r=0,n=.707106781):(i=x/(r=Math.sqrt(g)),n=y/r):$<.01?(i=.707106781,r=.707106781,n=0):(i=v/(n=Math.sqrt($)),r=y/n),this.set(i,r,n,t),this}let b=Math.sqrt((p-c)*(p-c)+(l-d)*(l-d)+(h-o)*(h-o));return .001>Math.abs(b)&&(b=1),this.x=(p-c)/b,this.y=(l-d)/b,this.z=(h-o)/b,this.w=Math.acos((s+u+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}R.prototype.isVector4=!0;class L extends i{constructor(e,t,i={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new R(0,0,e,t),this.scissorTest=!1,this.viewport=new R(0,0,e,t),this.texture=new M(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:e,height:t,depth:1},this.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,this.texture.internalFormat=void 0!==i.internalFormat?i.internalFormat:null,this.texture.minFilter=void 0!==i.minFilter?i.minFilter:1006,this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0!==i.stencilBuffer&&i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image={...this.texture.image},this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}L.prototype.isWebGLRenderTarget=!0;class C extends L{constructor(e,t,i){super(e,t);let r=this.texture;this.texture=[];for(let n=0;n<i;n++)this.texture[n]=r.clone()}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let r=0,n=this.texture.length;r<n;r++)this.texture[r].image.width=e,this.texture[r].image.height=t,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,i=e.texture.length;t<i;t++)this.texture[t]=e.texture[t].clone();return this}}C.prototype.isWebGLMultipleRenderTargets=!0;class P extends L{constructor(e,t,i={}){super(e,t,i),this.samples=4,this.ignoreDepthForMultisampleCopy=void 0===i.ignoreDepth||i.ignoreDepth,this.useRenderToTexture=void 0!==i.useRenderToTexture&&i.useRenderToTexture,this.useRenderbuffer=!1===this.useRenderToTexture}copy(e){return super.copy.call(this,e),this.samples=e.samples,this.useRenderToTexture=e.useRenderToTexture,this.useRenderbuffer=e.useRenderbuffer,this}}P.prototype.isWebGLMultisampleRenderTarget=!0;class D{constructor(e=0,t=0,i=0,r=1){this._x=e,this._y=t,this._z=i,this._w=r}static slerp(e,t,i,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),i.slerpQuaternions(e,t,r)}static slerpFlat(e,t,i,r,n,a,s){let o=i[r+0],l=i[r+1],h=i[r+2],u=i[r+3],c=n[a+0],d=n[a+1],p=n[a+2],m=n[a+3];if(0===s){e[t+0]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(1===s){e[t+0]=c,e[t+1]=d,e[t+2]=p,e[t+3]=m;return}if(u!==m||o!==c||l!==d||h!==p){let f=1-s,g=o*c+l*d+h*p+u*m,$=g>=0?1:-1,x=1-g*g;if(x>Number.EPSILON){let v=Math.sqrt(x),y=Math.atan2(v,g*$);f=Math.sin(f*y)/v,s=Math.sin(s*y)/v}let b=s*$;if(o=o*f+c*b,l=l*f+d*b,h=h*f+p*b,u=u*f+m*b,f===1-s){let w=1/Math.sqrt(o*o+l*l+h*h+u*u);o*=w,l*=w,h*=w,u*=w}}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,i,r,n,a){let s=i[r],o=i[r+1],l=i[r+2],h=i[r+3],u=n[a],c=n[a+1],d=n[a+2],p=n[a+3];return e[t]=s*p+h*u+o*d-l*c,e[t+1]=o*p+h*c+l*u-s*d,e[t+2]=l*p+h*d+s*c-o*u,e[t+3]=h*p-s*u-o*c-l*d,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");let i=e._x,r=e._y,n=e._z,a=e._order,s=Math.cos,o=Math.sin,l=s(i/2),h=s(r/2),u=s(n/2),c=o(i/2),d=o(r/2),p=o(n/2);switch(a){case"XYZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"YXZ":this._x=c*h*u+l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"ZXY":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u-c*d*p;break;case"ZYX":this._x=c*h*u-l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u+c*d*p;break;case"YZX":this._x=c*h*u+l*d*p,this._y=l*d*u+c*h*p,this._z=l*h*p-c*d*u,this._w=l*h*u-c*d*p;break;case"XZY":this._x=c*h*u-l*d*p,this._y=l*d*u-c*h*p,this._z=l*h*p+c*d*u,this._w=l*h*u+c*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){let i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){let t=e.elements,i=t[0],r=t[4],n=t[8],a=t[1],s=t[5],o=t[9],l=t[2],h=t[6],u=t[10],c=i+s+u;if(c>0){let d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(h-o)*d,this._y=(n-l)*d,this._z=(a-r)*d}else if(i>s&&i>u){let p=2*Math.sqrt(1+i-s-u);this._w=(h-o)/p,this._x=.25*p,this._y=(r+a)/p,this._z=(n+l)/p}else if(s>u){let m=2*Math.sqrt(1+s-i-u);this._w=(n-l)/m,this._x=(r+a)/m,this._y=.25*m,this._z=(o+h)/m}else{let f=2*Math.sqrt(1+u-i-s);this._w=(a-r)/f,this._x=(n+l)/f,this._y=(o+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(h(this.dot(e),-1,1)))}rotateTowards(e,t){let i=this.angleTo(e);return 0===i||this.slerp(e,Math.min(1,t/i)),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){let i=e._x,r=e._y,n=e._z,a=e._w,s=t._x,o=t._y,l=t._z,h=t._w;return this._x=i*h+a*s+r*l-n*o,this._y=r*h+a*o+n*s-i*l,this._z=n*h+a*l+i*o-r*s,this._w=a*h-i*s-r*o-n*l,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);let i=this._x,r=this._y,n=this._z,a=this._w,s=a*e._w+i*e._x+r*e._y+n*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=i,this._y=r,this._z=n,this;let o=1-s*s;if(o<=Number.EPSILON){let l=1-t;return this._w=l*a+t*this._w,this._x=l*i+t*this._x,this._y=l*r+t*this._y,this._z=l*n+t*this._z,this.normalize(),this._onChangeCallback(),this}let h=Math.sqrt(o),u=Math.atan2(h,s),c=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=a*c+this._w*d,this._x=i*c+this._x*d,this._y=r*c+this._y*d,this._z=n*c+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){this.copy(e).slerp(t,i)}random(){let e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(n),i*Math.cos(n),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}D.prototype.isQuaternion=!0;class I{constructor(e=0,t=0,i=0){this.x=e,this.y=t,this.z=i}set(e,t,i){return void 0===i&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(N.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(N.setFromAxisAngle(e,t))}applyMatrix3(e){let t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6]*r,this.y=n[1]*t+n[4]*i+n[7]*r,this.z=n[2]*t+n[5]*i+n[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){let t=this.x,i=this.y,r=this.z,n=e.elements,a=1/(n[3]*t+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*t+n[4]*i+n[8]*r+n[12])*a,this.y=(n[1]*t+n[5]*i+n[9]*r+n[13])*a,this.z=(n[2]*t+n[6]*i+n[10]*r+n[14])*a,this}applyQuaternion(e){let t=this.x,i=this.y,r=this.z,n=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*i,h=o*i+s*t-n*r,u=o*r+n*i-a*t,c=-n*t-a*i-s*r;return this.x=l*o+-(c*n)+-(h*s)- -(u*a),this.y=h*o+-(c*a)+-(u*n)- -(l*s),this.z=u*o+-(c*s)+-(l*a)- -(h*n),this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){let t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r,this.y=n[1]*t+n[5]*i+n[9]*r,this.z=n[2]*t+n[6]*i+n[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){let i=e.x,r=e.y,n=e.z,a=t.x,s=t.y,o=t.z;return this.x=r*o-n*s,this.y=n*a-i*o,this.z=i*s-r*a,this}projectOnVector(e){let t=e.lengthSq();if(0===t)return this.set(0,0,0);let i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return F.copy(this).projectOnVector(e),this.sub(F)}reflect(e){return this.sub(F.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){let t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;let i=this.dot(e)/t;return Math.acos(h(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){let t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){let r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){let t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){let t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,i){return void 0!==i&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}I.prototype.isVector3=!0;let F=new I,N=new D;class U{constructor(e=new I(Infinity,Infinity,Infinity),t=new I(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=Infinity,i=Infinity,r=Infinity,n=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.length;o<l;o+=3){let h=e[o],u=e[o+1],c=e[o+2];h<t&&(t=h),u<i&&(i=u),c<r&&(r=c),h>n&&(n=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,i,r),this.max.set(n,a,s),this}setFromBufferAttribute(e){let t=Infinity,i=Infinity,r=Infinity,n=-1/0,a=-1/0,s=-1/0;for(let o=0,l=e.count;o<l;o++){let h=e.getX(o),u=e.getY(o),c=e.getZ(o);h<t&&(t=h),u<i&&(i=u),c<r&&(r=c),h>n&&(n=h),u>a&&(a=u),c>s&&(s=c)}return this.min.set(t,i,r),this.max.set(n,a,s),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=O.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);let t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),z.copy(t.boundingBox),z.applyMatrix4(e.matrixWorld),this.union(z));let i=e.children;for(let r=0,n=i.length;r<n;r++)this.expandByObject(i[r]);return this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)&&!(e.z<this.min.z)&&!(e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)&&!(e.max.z<this.min.z)&&!(e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,O),O.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(j),q.subVectors(this.max,j),H.subVectors(e.a,j),G.subVectors(e.b,j),V.subVectors(e.c,j),k.subVectors(G,H),W.subVectors(V,G),X.subVectors(H,V);let t=[0,-k.z,k.y,0,-W.z,W.y,0,-X.z,X.y,k.z,0,-k.x,W.z,0,-W.x,X.z,0,-X.x,-k.y,k.x,0,-W.y,W.x,0,-X.y,X.x,0];return!!(J(t,H,G,V,q)&&J(t=[1,0,0,0,1,0,0,0,1],H,G,V,q))&&(Y.crossVectors(k,W),J(t=[Y.x,Y.y,Y.z],H,G,V,q))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=O.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(O).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(B[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),B[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),B[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),B[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),B[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),B[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),B[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),B[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(B)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}U.prototype.isBox3=!0;let B=[new I,new I,new I,new I,new I,new I,new I,new I],O=new I,z=new U,H=new I,G=new I,V=new I,k=new I,W=new I,X=new I,j=new I,q=new I,Y=new I,Z=new I;function J(e,t,i,r,n){for(let a=0,s=e.length-3;a<=s;a+=3){Z.fromArray(e,a);let o=n.x*Math.abs(Z.x)+n.y*Math.abs(Z.y)+n.z*Math.abs(Z.z),l=t.dot(Z),h=i.dot(Z),u=r.dot(Z);if(Math.max(-Math.max(l,h,u),Math.min(l,h,u))>o)return!1}return!0}let K=new U,Q=new I,ee=new I,et=new I;class ei{constructor(e=new I,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){let i=this.center;void 0!==t?i.copy(t):K.setFromPoints(e).getCenter(i);let r=0;for(let n=0,a=e.length;n<a;n++)r=Math.max(r,i.distanceToSquared(e[n]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){let t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){let i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){et.subVectors(e,this.center);let t=et.lengthSq();if(t>this.radius*this.radius){let i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(et.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return!0===this.center.equals(e.center)?ee.set(0,0,1).multiplyScalar(e.radius):ee.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Q.copy(e.center).add(ee)),this.expandByPoint(Q.copy(e.center).sub(ee)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}let er=new I,en=new I,ea=new I,es=new I,eo=new I,el=new I,eh=new I;class eu{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,er)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);let i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){let t=er.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(er.copy(this.direction).multiplyScalar(t).add(this.origin),er.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){en.copy(e).add(t).multiplyScalar(.5),ea.copy(t).sub(e).normalize(),es.copy(this.origin).sub(en);let n=.5*e.distanceTo(t),a=-this.direction.dot(ea),s=es.dot(this.direction),o=-es.dot(ea),l=es.lengthSq(),h=Math.abs(1-a*a),u,c,d,p;if(h>0){if(u=a*o-s,c=a*s-o,p=n*h,u>=0){if(c>=-p){if(c<=p){let m=1/h;u*=m,c*=m,d=u*(u+a*c+2*s)+c*(a*u+c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=n)+s)))*u+c*(c+2*o)+l}else d=-(u=Math.max(0,-(a*(c=-n)+s)))*u+c*(c+2*o)+l}else c<=-p?(c=(u=Math.max(0,-(-a*n+s)))>0?-n:Math.min(Math.max(-n,-o),n),d=-u*u+c*(c+2*o)+l):c<=p?(u=0,d=(c=Math.min(Math.max(-n,-o),n))*(c+2*o)+l):(c=(u=Math.max(0,-(a*n+s)))>0?n:Math.min(Math.max(-n,-o),n),d=-u*u+c*(c+2*o)+l)}else c=a>0?-n:n,d=-(u=Math.max(0,-(a*c+s)))*u+c*(c+2*o)+l;return i&&i.copy(this.direction).multiplyScalar(u).add(this.origin),r&&r.copy(ea).multiplyScalar(c).add(en),d}intersectSphere(e,t){er.subVectors(e.center,this.origin);let i=er.dot(this.direction),r=er.dot(er)-i*i,n=e.radius*e.radius;if(r>n)return null;let a=Math.sqrt(n-r),s=i-a,o=i+a;return s<0&&o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){let t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;let i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){let i=this.distanceToPlane(e);return null===i?null:this.at(i,t)}intersectsPlane(e){let t=e.distanceToPoint(this.origin);if(0===t)return!0;let i=e.normal.dot(this.direction);return i*t<0}intersectBox(e,t){let i,r,n,a,s,o,l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,c=this.origin;return(l>=0?(i=(e.min.x-c.x)*l,r=(e.max.x-c.x)*l):(i=(e.max.x-c.x)*l,r=(e.min.x-c.x)*l),h>=0?(n=(e.min.y-c.y)*h,a=(e.max.y-c.y)*h):(n=(e.max.y-c.y)*h,a=(e.min.y-c.y)*h),i>a||n>r)?null:((n>i||i!=i)&&(i=n),(a<r||r!=r)&&(r=a),u>=0?(s=(e.min.z-c.z)*u,o=(e.max.z-c.z)*u):(s=(e.max.z-c.z)*u,o=(e.min.z-c.z)*u),i>o||s>r)?null:((s>i||i!=i)&&(i=s),(o<r||r!=r)&&(r=o),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return null!==this.intersectBox(e,er)}intersectTriangle(e,t,i,r,n){eo.subVectors(t,e),el.subVectors(i,e),eh.crossVectors(eo,el);let a=this.direction.dot(eh),s;if(a>0){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}es.subVectors(this.origin,e);let o=s*this.direction.dot(el.crossVectors(es,el));if(o<0)return null;let l=s*this.direction.dot(eo.cross(es));if(l<0||o+l>a)return null;let h=-s*es.dot(eh);return h<0?null:this.at(h/a,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ec{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,i,r,n,a,s,o,l,h,u,c,d,p,m,f){let g=this.elements;return g[0]=e,g[4]=t,g[8]=i,g[12]=r,g[1]=n,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=u,g[14]=c,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ec().fromArray(this.elements)}copy(e){let t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){let t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){let t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){let t=this.elements,i=e.elements,r=1/ed.setFromMatrixColumn(e,0).length(),n=1/ed.setFromMatrixColumn(e,1).length(),a=1/ed.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*n,t[5]=i[5]*n,t[6]=i[6]*n,t[7]=0,t[8]=i[8]*a,t[9]=i[9]*a,t[10]=i[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");let t=this.elements,i=e.x,r=e.y,n=e.z,a=Math.cos(i),s=Math.sin(i),o=Math.cos(r),l=Math.sin(r),h=Math.cos(n),u=Math.sin(n);if("XYZ"===e.order){let c=a*h,d=a*u,p=s*h,m=s*u;t[0]=o*h,t[4]=-o*u,t[8]=l,t[1]=d+p*l,t[5]=c-m*l,t[9]=-s*o,t[2]=m-c*l,t[6]=p+d*l,t[10]=a*o}else if("YXZ"===e.order){let f=o*h,g=o*u,$=l*h,x=l*u;t[0]=f+x*s,t[4]=$*s-g,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-s,t[2]=g*s-$,t[6]=x+f*s,t[10]=a*o}else if("ZXY"===e.order){let v=o*h,y=o*u,b=l*h,w=l*u;t[0]=v-w*s,t[4]=-a*u,t[8]=b+y*s,t[1]=y+b*s,t[5]=a*h,t[9]=w-v*s,t[2]=-a*l,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){let _=a*h,E=a*u,T=s*h,S=s*u;t[0]=o*h,t[4]=T*l-E,t[8]=_*l+S,t[1]=o*u,t[5]=S*l+_,t[9]=E*l-T,t[2]=-l,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){let M=a*o,A=a*l,R=s*o,L=s*l;t[0]=o*h,t[4]=L-M*u,t[8]=R*u+A,t[1]=u,t[5]=a*h,t[9]=-s*h,t[2]=-l*h,t[6]=A*u+R,t[10]=M-L*u}else if("XZY"===e.order){let C=a*o,P=a*l,D=s*o,I=s*l;t[0]=o*h,t[4]=-u,t[8]=l*h,t[1]=C*u+I,t[5]=a*h,t[9]=P*u-D,t[2]=D*u-P,t[6]=s*h,t[10]=I*u+C}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(em,e,ef)}lookAt(e,t,i){let r=this.elements;return ex.subVectors(e,t),0===ex.lengthSq()&&(ex.z=1),ex.normalize(),eg.crossVectors(i,ex),0===eg.lengthSq()&&(1===Math.abs(i.z)?ex.x+=1e-4:ex.z+=1e-4,ex.normalize(),eg.crossVectors(i,ex)),eg.normalize(),e$.crossVectors(ex,eg),r[0]=eg.x,r[4]=e$.x,r[8]=ex.x,r[1]=eg.y,r[5]=e$.y,r[9]=ex.y,r[2]=eg.z,r[6]=e$.z,r[10]=ex.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){let i=e.elements,r=t.elements,n=this.elements,a=i[0],s=i[4],o=i[8],l=i[12],h=i[1],u=i[5],c=i[9],d=i[13],p=i[2],m=i[6],f=i[10],g=i[14],$=i[3],x=i[7],v=i[11],y=i[15],b=r[0],w=r[4],_=r[8],E=r[12],T=r[1],S=r[5],M=r[9],A=r[13],R=r[2],L=r[6],C=r[10],P=r[14],D=r[3],I=r[7],F=r[11],N=r[15];return n[0]=a*b+s*T+o*R+l*D,n[4]=a*w+s*S+o*L+l*I,n[8]=a*_+s*M+o*C+l*F,n[12]=a*E+s*A+o*P+l*N,n[1]=h*b+u*T+c*R+d*D,n[5]=h*w+u*S+c*L+d*I,n[9]=h*_+u*M+c*C+d*F,n[13]=h*E+u*A+c*P+d*N,n[2]=p*b+m*T+f*R+g*D,n[6]=p*w+m*S+f*L+g*I,n[10]=p*_+m*M+f*C+g*F,n[14]=p*E+m*A+f*P+g*N,n[3]=$*b+x*T+v*R+y*D,n[7]=$*w+x*S+v*L+y*I,n[11]=$*_+x*M+v*C+y*F,n[15]=$*E+x*A+v*P+y*N,this}multiplyScalar(e){let t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){let e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],u=e[6],c=e[10],d=e[14],p=e[3],m=e[7],f=e[11],g=e[15];return p*(+n*o*u-r*l*u-n*s*c+i*l*c+r*s*d-i*o*d)+m*(+t*o*d-t*l*c+n*a*c-r*a*d+r*l*h-n*o*h)+f*(+t*l*u-t*s*d-n*a*u+i*a*d+n*s*h-i*l*h)+g*(-r*s*h-t*o*u+t*s*c+r*a*u-i*a*c+i*o*h)}transpose(){let e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){let r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){let e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],u=e[9],c=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],$=u*f*l-m*c*l+m*o*d-s*f*d-u*o*g+s*c*g,x=p*c*l-h*f*l-p*o*d+a*f*d+h*o*g-a*c*g,v=h*m*l-p*u*l+p*s*d-a*m*d-h*s*g+a*u*g,y=p*u*o-h*m*o-p*s*c+a*m*c+h*s*f-a*u*f,b=t*$+i*x+r*v+n*y;if(0===b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let w=1/b;return e[0]=$*w,e[1]=(m*c*n-u*f*n-m*r*d+i*f*d+u*r*g-i*c*g)*w,e[2]=(s*f*n-m*o*n+m*r*l-i*f*l-s*r*g+i*o*g)*w,e[3]=(u*o*n-s*c*n-u*r*l+i*c*l+s*r*d-i*o*d)*w,e[4]=x*w,e[5]=(h*f*n-p*c*n+p*r*d-t*f*d-h*r*g+t*c*g)*w,e[6]=(p*o*n-a*f*n-p*r*l+t*f*l+a*r*g-t*o*g)*w,e[7]=(a*c*n-h*o*n+h*r*l-t*c*l-a*r*d+t*o*d)*w,e[8]=v*w,e[9]=(p*u*n-h*m*n-p*i*d+t*m*d+h*i*g-t*u*g)*w,e[10]=(a*m*n-p*s*n+p*i*l-t*m*l-a*i*g+t*s*g)*w,e[11]=(h*s*n-a*u*n-h*i*l+t*u*l+a*i*d-t*s*d)*w,e[12]=y*w,e[13]=(h*m*r-p*u*r+p*i*c-t*m*c-h*i*f+t*u*f)*w,e[14]=(p*s*r-a*m*r-p*i*o+t*m*o+a*i*f-t*s*f)*w,e[15]=(a*u*r-h*s*r+h*i*o-t*u*o-a*i*c+t*s*c)*w,this}scale(e){let t=this.elements,i=e.x,r=e.y,n=e.z;return t[0]*=i,t[4]*=r,t[8]*=n,t[1]*=i,t[5]*=r,t[9]*=n,t[2]*=i,t[6]*=r,t[10]*=n,t[3]*=i,t[7]*=r,t[11]*=n,this}getMaxScaleOnAxis(){let e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){let t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){let t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){let i=Math.cos(t),r=Math.sin(t),n=1-i,a=e.x,s=e.y,o=e.z,l=n*a,h=n*s;return this.set(l*a+i,l*s-r*o,l*o+r*s,0,l*s+r*o,h*s+i,h*o-r*a,0,l*o-r*s,h*o+r*a,n*o*o+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,n,a){return this.set(1,i,n,0,e,1,a,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){let r=this.elements,n=t._x,a=t._y,s=t._z,o=t._w,l=n+n,h=a+a,u=s+s,c=n*l,d=n*h,p=n*u,m=a*h,f=a*u,g=s*u,$=o*l,x=o*h,v=o*u,y=i.x,b=i.y,w=i.z;return r[0]=(1-(m+g))*y,r[1]=(d+v)*y,r[2]=(p-x)*y,r[3]=0,r[4]=(d-v)*b,r[5]=(1-(c+g))*b,r[6]=(f+$)*b,r[7]=0,r[8]=(p+x)*w,r[9]=(f-$)*w,r[10]=(1-(c+m))*w,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){let r=this.elements,n=ed.set(r[0],r[1],r[2]).length(),a=ed.set(r[4],r[5],r[6]).length(),s=ed.set(r[8],r[9],r[10]).length(),o=this.determinant();o<0&&(n=-n),e.x=r[12],e.y=r[13],e.z=r[14],ep.copy(this);let l=1/n,h=1/a,u=1/s;return ep.elements[0]*=l,ep.elements[1]*=l,ep.elements[2]*=l,ep.elements[4]*=h,ep.elements[5]*=h,ep.elements[6]*=h,ep.elements[8]*=u,ep.elements[9]*=u,ep.elements[10]*=u,t.setFromRotationMatrix(ep),i.x=n,i.y=a,i.z=s,this}makePerspective(e,t,i,r,n,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");let s=this.elements;return s[0]=2*n/(t-e),s[4]=0,s[8]=(t+e)/(t-e),s[12]=0,s[1]=0,s[5]=2*n/(i-r),s[9]=(i+r)/(i-r),s[13]=0,s[2]=0,s[6]=0,s[10]=-(a+n)/(a-n),s[14]=-2*a*n/(a-n),s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,i,r,n,a){let s=this.elements,o=1/(t-e),l=1/(i-r),h=1/(a-n);return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-((t+e)*o),s[1]=0,s[5]=2*l,s[9]=0,s[13]=-((i+r)*l),s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-((a+n)*h),s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){let t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){let i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}ec.prototype.isMatrix4=!0;let ed=new I,ep=new ec,em=new I(0,0,0),ef=new I(1,1,1),eg=new I,e$=new I,ex=new I,ev=new ec,ey=new D;class e8{constructor(e=0,t=0,i=0,r=e8.DefaultOrder){this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){let r=e.elements,n=r[0],a=r[4],s=r[8],o=r[1],l=r[5],u=r[9],c=r[2],d=r[6],p=r[10];switch(t){case"XYZ":this._y=Math.asin(h(s,-1,1)),.9999999>Math.abs(s)?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-h(u,-1,1)),.9999999>Math.abs(u)?(this._y=Math.atan2(s,p),this._z=Math.atan2(o,l)):(this._y=Math.atan2(-c,n),this._z=0);break;case"ZXY":this._x=Math.asin(h(d,-1,1)),.9999999>Math.abs(d)?(this._y=Math.atan2(-c,p),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(o,n));break;case"ZYX":this._y=Math.asin(-h(c,-1,1)),.9999999>Math.abs(c)?(this._x=Math.atan2(d,p),this._z=Math.atan2(o,n)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(h(o,-1,1)),.9999999>Math.abs(o)?(this._x=Math.atan2(-u,l),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(s,p));break;case"XZY":this._z=Math.asin(-h(a,-1,1)),.9999999>Math.abs(a)?(this._x=Math.atan2(d,l),this._y=Math.atan2(s,n)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===i&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return ev.makeRotationFromQuaternion(e),this.setFromRotationMatrix(ev,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return ey.setFromEuler(this),this.setFromQuaternion(ey,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new I(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}e8.prototype.isEuler=!0,e8.DefaultOrder="XYZ",e8.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class eb{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!=0}isEnabled(e){return(this.mask&(1<<e|0))!=0}}let ew=0,e_=new I,eE=new D,eT=new ec,eS=new I,eM=new I,eA=new I,eR=new D,eL=new I(1,0,0),eC=new I(0,1,0),e0=new I(0,0,1),eP={type:"added"},e1={type:"removed"};class eD extends i{constructor(){super(),Object.defineProperty(this,"id",{value:ew++}),this.uuid=l(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=eD.DefaultUp.clone();let e=new I,t=new e8,i=new D,r=new I(1,1,1);t._onChange(function e(){i.setFromEuler(t,!1)}),i._onChange(function e(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new ec},normalMatrix:{value:new v}}),this.matrix=new ec,this.matrixWorld=new ec,this.matrixAutoUpdate=eD.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new eb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return eE.setFromAxisAngle(e,t),this.quaternion.multiply(eE),this}rotateOnWorldAxis(e,t){return eE.setFromAxisAngle(e,t),this.quaternion.premultiply(eE),this}rotateX(e){return this.rotateOnAxis(eL,e)}rotateY(e){return this.rotateOnAxis(eC,e)}rotateZ(e){return this.rotateOnAxis(e0,e)}translateOnAxis(e,t){return e_.copy(e).applyQuaternion(this.quaternion),this.position.add(e_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(eL,e)}translateY(e){return this.translateOnAxis(eC,e)}translateZ(e){return this.translateOnAxis(e0,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(eT.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?eS.copy(e):eS.set(e,t,i);let r=this.parent;this.updateWorldMatrix(!0,!1),eM.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?eT.lookAt(eM,eS,this.up):eT.lookAt(eS,eM,this.up),this.quaternion.setFromRotationMatrix(eT),r&&(eT.extractRotation(r.matrixWorld),eE.setFromRotationMatrix(eT),this.quaternion.premultiply(eE.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(eP)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}let i=this.children.indexOf(e);return -1!==i&&(e.parent=null,this.children.splice(i,1),e.dispatchEvent(e1)),this}removeFromParent(){let e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){let t=this.children[e];t.parent=null,t.dispatchEvent(e1)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),eT.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),eT.multiply(e.parent.matrixWorld)),e.applyMatrix4(eT),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){let n=this.children[i],a=n.getObjectByProperty(e,t);if(void 0!==a)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eM,e,eA),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(eM,eR,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){let t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);let t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){let i=this.parent;if(!0===e&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){let r=this.children;for(let n=0,a=r.length;n<a;n++)r[n].updateWorldMatrix(!1,!0)}}toJSON(e){let t=void 0===e||"string"==typeof e,i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let r={};function n(t,i){return void 0===t[i.uuid]&&(t[i.uuid]=i.toJSON(e)),i.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(r.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=n(e.geometries,this.geometry);let a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){let s=a.shapes;if(Array.isArray(s))for(let o=0,l=s.length;o<l;o++){let h=s[o];n(e.shapes,h)}else n(e.shapes,s)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(n(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material){if(Array.isArray(this.material)){let u=[];for(let c=0,d=this.material.length;c<d;c++)u.push(n(e.materials,this.material[c]));r.material=u}else r.material=n(e.materials,this.material)}if(this.children.length>0){r.children=[];for(let p=0;p<this.children.length;p++)r.children.push(this.children[p].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let m=0;m<this.animations.length;m++){let f=this.animations[m];r.animations.push(n(e.animations,f))}}if(t){let g=_(e.geometries),$=_(e.materials),x=_(e.textures),v=_(e.images),y=_(e.shapes),b=_(e.skeletons),w=_(e.animations);g.length>0&&(i.geometries=g),$.length>0&&(i.materials=$),x.length>0&&(i.textures=x),v.length>0&&(i.images=v),y.length>0&&(i.shapes=y),b.length>0&&(i.skeletons=b),w.length>0&&(i.animations=w)}return i.object=r,i;function _(e){let t=[];for(let i in e){let r=e[i];delete r.metadata,t.push(r)}return t}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let i=0;i<e.children.length;i++){let r=e.children[i];this.add(r.clone())}return this}}eD.DefaultUp=new I(0,1,0),eD.DefaultMatrixAutoUpdate=!0,eD.prototype.isObject3D=!0;let eI=new I,eF=new I,eN=new I,eU=new I,eB=new I,eO=new I,ez=new I,eH=new I,eG=new I,e2=new I;class eV{constructor(e=new I,t=new I,i=new I){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),eI.subVectors(e,t),r.cross(eI);let n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,i,r,n){eI.subVectors(r,t),eF.subVectors(i,t),eN.subVectors(e,t);let a=eI.dot(eI),s=eI.dot(eF),o=eI.dot(eN),l=eF.dot(eF),h=eF.dot(eN),u=a*l-s*s;if(0===u)return n.set(-2,-1,-1);let c=1/u,d=(l*o-s*h)*c,p=(a*h-s*o)*c;return n.set(1-d-p,p,d)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,eU),eU.x>=0&&eU.y>=0&&eU.x+eU.y<=1}static getUV(e,t,i,r,n,a,s,o){return this.getBarycoord(e,t,i,r,eU),o.set(0,0),o.addScaledVector(n,eU.x),o.addScaledVector(a,eU.y),o.addScaledVector(s,eU.z),o}static isFrontFacing(e,t,i,r){return eI.subVectors(i,t),eF.subVectors(e,t),0>eI.cross(eF).dot(r)}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return eI.subVectors(this.c,this.b),eF.subVectors(this.a,this.b),.5*eI.cross(eF).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return eV.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return eV.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,n){return eV.getUV(e,this.a,this.b,this.c,t,i,r,n)}containsPoint(e){return eV.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return eV.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){let i=this.a,r=this.b,n=this.c,a,s;eB.subVectors(r,i),eO.subVectors(n,i),eH.subVectors(e,i);let o=eB.dot(eH),l=eO.dot(eH);if(o<=0&&l<=0)return t.copy(i);eG.subVectors(e,r);let h=eB.dot(eG),u=eO.dot(eG);if(h>=0&&u<=h)return t.copy(r);let c=o*u-h*l;if(c<=0&&o>=0&&h<=0)return a=o/(o-h),t.copy(i).addScaledVector(eB,a);e2.subVectors(e,n);let d=eB.dot(e2),p=eO.dot(e2);if(p>=0&&d<=p)return t.copy(n);let m=d*l-o*p;if(m<=0&&l>=0&&p<=0)return s=l/(l-p),t.copy(i).addScaledVector(eO,s);let f=h*p-d*u;if(f<=0&&u-h>=0&&d-p>=0)return ez.subVectors(n,r),s=(u-h)/(u-h+(d-p)),t.copy(r).addScaledVector(ez,s);let g=1/(f+m+c);return a=m*g,s=c*g,t.copy(i).addScaledVector(eB,a).addScaledVector(eO,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let ek=0;class eW extends i{constructor(){super(),Object.defineProperty(this,"id",{value:ek++}),this.uuid=l(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.format=1023,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(let t in e){let i=e[t];if(void 0===i){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if("shading"===t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===i;continue}let r=this[t];if(void 0===r){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){let t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){let t=[];for(let i in e){let r=e[i];delete r.metadata,t.push(r)}return t}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),void 0!==this.roughness&&(i.roughness=this.roughness),void 0!==this.metalness&&(i.metalness=this.metalness),void 0!==this.sheen&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(i.shininess=this.shininess),void 0!==this.clearcoat&&(i.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(i.combine=this.combine)),void 0!==this.envMapIntensity&&(i.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(i.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(i.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(i.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(i.size=this.size),null!==this.shadowSide&&(i.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(i.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(i.blending=this.blending),0!==this.side&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),1023!==this.format&&(i.format=this.format),!0===this.transparent&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(i.rotation=this.rotation),!0===this.polygonOffset&&(i.polygonOffset=!0),0!==this.polygonOffsetFactor&&(i.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(i.linewidth=this.linewidth),void 0!==this.dashSize&&(i.dashSize=this.dashSize),void 0!==this.gapSize&&(i.gapSize=this.gapSize),void 0!==this.scale&&(i.scale=this.scale),!0===this.dithering&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(i.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(i.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(i.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(i.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(i.flatShading=this.flatShading),!1===this.visible&&(i.visible=!1),!1===this.toneMapped&&(i.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),t){let n=r(e.textures),a=r(e.images);n.length>0&&(i.textures=n),a.length>0&&(i.images=a)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;let t=e.clippingPlanes,i=null;if(null!==t){let r=t.length;i=Array(r);for(let n=0;n!==r;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}eW.prototype.isMaterial=!0;let e3={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},e6={h:0,s:0,l:0},e4={h:0,s:0,l:0};function eX(e,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?e+(t-e)*6*i:i<.5?t:i<2/3?e+(t-e)*6*(2/3-i):e}function ej(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function e5(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class e7{constructor(e,t,i){if(void 0===t&&void 0===i)return this.set(e);return this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,i){return this.r=e,this.g=t,this.b=i,this}setHSL(e,t,i){if(e=u(e,1),t=h(t,0,1),i=h(i,0,1),0===t)this.r=this.g=this.b=i;else{let r=i<=.5?i*(1+t):i+t-i*t,n=2*i-r;this.r=eX(n,r,e+1/3),this.g=eX(n,r,e),this.b=eX(n,r,e-1/3)}return this}setStyle(e){function t(t){void 0!==t&&1>parseFloat(t)&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r,n=i[1],a=i[2];switch(n){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){let s=parseFloat(r[1])/360,o=parseInt(r[2],10)/100,l=parseInt(r[3],10)/100;return t(r[4]),this.setHSL(s,o,l)}}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){let h=i[1],u=h.length;if(3===u)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){let t=e3[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ej(e.r),this.g=ej(e.g),this.b=ej(e.b),this}copyLinearToSRGB(e){return this.r=e5(e.r),this.g=e5(e.g),this.b=e5(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){let t=this.r,i=this.g,r=this.b,n=Math.max(t,i,r),a=Math.min(t,i,r),s,o,l=(a+n)/2;if(a===n)s=0,o=0;else{let h=n-a;switch(o=l<=.5?h/(n+a):h/(2-n-a),n){case t:s=(i-r)/h+(i<r?6:0);break;case i:s=(r-t)/h+2;break;case r:s=(t-i)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,i){return this.getHSL(e6),e6.h+=e,e6.s+=t,e6.l+=i,this.setHSL(e6.h,e6.s,e6.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(e6),e.getHSL(e4);let i=c(e6.h,e4.h,t),r=c(e6.s,e4.s,t),n=c(e6.l,e4.l,t);return this.setHSL(i,r,n),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}e7.NAMES=e3,e7.prototype.isColor=!0,e7.prototype.r=1,e7.prototype.g=1,e7.prototype.b=1;class eq extends eW{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new e7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}eq.prototype.isMeshBasicMaterial=!0;let eY=new I,eZ=new x;class eJ{constructor(e,t,i){if(Array.isArray(e))throw TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===i,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),a=new e7),t[i++]=a.r,t[i++]=a.g,t[i++]=a.b}return this}copyVector2sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),a=new x),t[i++]=a.x,t[i++]=a.y}return this}copyVector3sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),a=new I),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z}return this}copyVector4sArray(e){let t=this.array,i=0;for(let r=0,n=e.length;r<n;r++){let a=e[r];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),a=new R),t[i++]=a.x,t[i++]=a.y,t[i++]=a.z,t[i++]=a.w}return this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,i=this.count;t<i;t++)eZ.fromBufferAttribute(this,t),eZ.applyMatrix3(e),this.setXY(t,eZ.x,eZ.y);else if(3===this.itemSize)for(let r=0,n=this.count;r<n;r++)eY.fromBufferAttribute(this,r),eY.applyMatrix3(e),this.setXYZ(r,eY.x,eY.y,eY.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)eY.x=this.getX(t),eY.y=this.getY(t),eY.z=this.getZ(t),eY.applyMatrix4(e),this.setXYZ(t,eY.x,eY.y,eY.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)eY.x=this.getX(t),eY.y=this.getY(t),eY.z=this.getZ(t),eY.applyNormalMatrix(e),this.setXYZ(t,eY.x,eY.y,eY.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)eY.x=this.getX(t),eY.y=this.getY(t),eY.z=this.getZ(t),eY.transformDirection(e),this.setXYZ(t,eY.x,eY.y,eY.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),35044!==this.usage&&(e.usage=this.usage),(0!==this.updateRange.offset||-1!==this.updateRange.count)&&(e.updateRange=this.updateRange),e}}eJ.prototype.isBufferAttribute=!0;class eK extends eJ{constructor(e,t,i){super(new Int8Array(e),t,i)}}class eQ extends eJ{constructor(e,t,i){super(new Uint8Array(e),t,i)}}class e9 extends eJ{constructor(e,t,i){super(new Uint8ClampedArray(e),t,i)}}class te extends eJ{constructor(e,t,i){super(new Int16Array(e),t,i)}}class tt extends eJ{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class ti extends eJ{constructor(e,t,i){super(new Int32Array(e),t,i)}}class tr extends eJ{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class tn extends eJ{constructor(e,t,i){super(new Uint16Array(e),t,i)}}tn.prototype.isFloat16BufferAttribute=!0;class ta extends eJ{constructor(e,t,i){super(new Float32Array(e),t,i)}}class ts extends eJ{constructor(e,t,i){super(new Float64Array(e),t,i)}}let to=0,tl=new ec,th=new eD,tu=new I,tc=new U,td=new U,tp=new I;class tm extends i{constructor(){super(),Object.defineProperty(this,"id",{value:to++}),this.uuid=l(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(y(e)>65535?tr:tt)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){let t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);let i=this.attributes.normal;if(void 0!==i){let r=new v().getNormalMatrix(e);i.applyNormalMatrix(r),i.needsUpdate=!0}let n=this.attributes.tangent;return void 0!==n&&(n.transformDirection(e),n.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return tl.makeRotationFromQuaternion(e),this.applyMatrix4(tl),this}rotateX(e){return tl.makeRotationX(e),this.applyMatrix4(tl),this}rotateY(e){return tl.makeRotationY(e),this.applyMatrix4(tl),this}rotateZ(e){return tl.makeRotationZ(e),this.applyMatrix4(tl),this}translate(e,t,i){return tl.makeTranslation(e,t,i),this.applyMatrix4(tl),this}scale(e,t,i){return tl.makeScale(e,t,i),this.applyMatrix4(tl),this}lookAt(e){return th.lookAt(e),th.updateMatrix(),this.applyMatrix4(th.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(tu).negate(),this.translate(tu.x,tu.y,tu.z),this}setFromPoints(e){let t=[];for(let i=0,r=e.length;i<r;i++){let n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new ta(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new U);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(Infinity,Infinity,Infinity));return}if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){let n=t[i];tc.setFromBufferAttribute(n),this.morphTargetsRelative?(tp.addVectors(this.boundingBox.min,tc.min),this.boundingBox.expandByPoint(tp),tp.addVectors(this.boundingBox.max,tc.max),this.boundingBox.expandByPoint(tp)):(this.boundingBox.expandByPoint(tc.min),this.boundingBox.expandByPoint(tc.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new ei);let e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(e){let i=this.boundingSphere.center;if(tc.setFromBufferAttribute(e),t)for(let r=0,n=t.length;r<n;r++){let a=t[r];td.setFromBufferAttribute(a),this.morphTargetsRelative?(tp.addVectors(tc.min,td.min),tc.expandByPoint(tp),tp.addVectors(tc.max,td.max),tc.expandByPoint(tp)):(tc.expandByPoint(td.min),tc.expandByPoint(td.max))}tc.getCenter(i);let s=0;for(let o=0,l=e.count;o<l;o++)tp.fromBufferAttribute(e,o),s=Math.max(s,i.distanceToSquared(tp));if(t)for(let h=0,u=t.length;h<u;h++){let c=t[h],d=this.morphTargetsRelative;for(let p=0,m=c.count;p<m;p++)tp.fromBufferAttribute(c,p),d&&(tu.fromBufferAttribute(e,p),tp.add(tu)),s=Math.max(s,i.distanceToSquared(tp))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=e.array,r=t.position.array,n=t.normal.array,a=t.uv.array,s=r.length/3;void 0===t.tangent&&this.setAttribute("tangent",new eJ(new Float32Array(4*s),4));let o=t.tangent.array,l=[],h=[];for(let u=0;u<s;u++)l[u]=new I,h[u]=new I;let c=new I,d=new I,p=new I,m=new x,f=new x,g=new x,$=new I,v=new I;function y(e,t,i){c.fromArray(r,3*e),d.fromArray(r,3*t),p.fromArray(r,3*i),m.fromArray(a,2*e),f.fromArray(a,2*t),g.fromArray(a,2*i),d.sub(c),p.sub(c),f.sub(m),g.sub(m);let n=1/(f.x*g.y-g.x*f.y);isFinite(n)&&($.copy(d).multiplyScalar(g.y).addScaledVector(p,-f.y).multiplyScalar(n),v.copy(p).multiplyScalar(f.x).addScaledVector(d,-g.x).multiplyScalar(n),l[e].add($),l[t].add($),l[i].add($),h[e].add(v),h[t].add(v),h[i].add(v))}let b=this.groups;0===b.length&&(b=[{start:0,count:i.length}]);for(let w=0,_=b.length;w<_;++w){let E=b[w],T=E.start,S=E.count;for(let M=T,A=T+S;M<A;M+=3)y(i[M+0],i[M+1],i[M+2])}let R=new I,L=new I,C=new I,P=new I;function D(e){C.fromArray(n,3*e),P.copy(C);let t=l[e];R.copy(t),R.sub(C.multiplyScalar(C.dot(t))).normalize(),L.crossVectors(P,t);let i=L.dot(h[e]);o[4*e]=R.x,o[4*e+1]=R.y,o[4*e+2]=R.z,o[4*e+3]=i<0?-1:1}for(let F=0,N=b.length;F<N;++F){let U=b[F],B=U.start,O=U.count;for(let z=B,H=B+O;z<H;z+=3)D(i[z+0]),D(i[z+1]),D(i[z+2])}}computeVertexNormals(){let e=this.index,t=this.getAttribute("position");if(void 0!==t){let i=this.getAttribute("normal");if(void 0===i)i=new eJ(new Float32Array(3*t.count),3),this.setAttribute("normal",i);else for(let r=0,n=i.count;r<n;r++)i.setXYZ(r,0,0,0);let a=new I,s=new I,o=new I,l=new I,h=new I,u=new I,c=new I,d=new I;if(e)for(let p=0,m=e.count;p<m;p+=3){let f=e.getX(p+0),g=e.getX(p+1),$=e.getX(p+2);a.fromBufferAttribute(t,f),s.fromBufferAttribute(t,g),o.fromBufferAttribute(t,$),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),l.fromBufferAttribute(i,f),h.fromBufferAttribute(i,g),u.fromBufferAttribute(i,$),l.add(c),h.add(c),u.add(c),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(g,h.x,h.y,h.z),i.setXYZ($,u.x,u.y,u.z)}else for(let x=0,v=t.count;x<v;x+=3)a.fromBufferAttribute(t,x+0),s.fromBufferAttribute(t,x+1),o.fromBufferAttribute(t,x+2),c.subVectors(o,s),d.subVectors(a,s),c.cross(d),i.setXYZ(x+0,c.x,c.y,c.z),i.setXYZ(x+1,c.x,c.y,c.z),i.setXYZ(x+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));let i=this.attributes;for(let r in i){if(void 0===e.attributes[r])continue;let n=i[r],a=n.array,s=e.attributes[r],o=s.array,l=s.itemSize*t,h=Math.min(o.length,a.length-l);for(let u=0,c=l;u<h;u++,c++)a[c]=o[u]}return this}normalizeNormals(){let e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)tp.fromBufferAttribute(e,t),tp.normalize(),e.setXYZ(t,tp.x,tp.y,tp.z)}toNonIndexed(){function e(e,t){let i=e.array,r=e.itemSize,n=e.normalized,a=new i.constructor(t.length*r),s=0,o=0;for(let l=0,h=t.length;l<h;l++){s=e.isInterleavedBufferAttribute?t[l]*e.data.stride+e.offset:t[l]*r;for(let u=0;u<r;u++)a[o++]=i[s++]}return new eJ(a,r,n)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let t=new tm,i=this.index.array,r=this.attributes;for(let n in r){let a=r[n],s=e(a,i);t.setAttribute(n,s)}let o=this.morphAttributes;for(let l in o){let h=[],u=o[l];for(let c=0,d=u.length;c<d;c++){let p=u[c],m=e(p,i);h.push(m)}t.morphAttributes[l]=h}t.morphTargetsRelative=this.morphTargetsRelative;let f=this.groups;for(let g=0,$=f.length;g<$;g++){let x=f[g];t.addGroup(x.start,x.count,x.materialIndex)}return t}toJSON(){let e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){let t=this.parameters;for(let i in t)void 0!==t[i]&&(e[i]=t[i]);return e}e.data={attributes:{}};let r=this.index;null!==r&&(e.data.index={type:r.array.constructor.name,array:Array.prototype.slice.call(r.array)});let n=this.attributes;for(let a in n){let s=n[a];e.data.attributes[a]=s.toJSON(e.data)}let o={},l=!1;for(let h in this.morphAttributes){let u=this.morphAttributes[h],c=[];for(let d=0,p=u.length;d<p;d++){let m=u[d];c.push(m.toJSON(e.data))}c.length>0&&(o[h]=c,l=!0)}l&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);let f=this.groups;f.length>0&&(e.data.groups=JSON.parse(JSON.stringify(f)));let g=this.boundingSphere;return null!==g&&(e.data.boundingSphere={center:g.center.toArray(),radius:g.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let t={};this.name=e.name;let i=e.index;null!==i&&this.setIndex(i.clone(t));let r=e.attributes;for(let n in r){let a=r[n];this.setAttribute(n,a.clone(t))}let s=e.morphAttributes;for(let o in s){let l=[],h=s[o];for(let u=0,c=h.length;u<c;u++)l.push(h[u].clone(t));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;let d=e.groups;for(let p=0,m=d.length;p<m;p++){let f=d[p];this.addGroup(f.start,f.count,f.materialIndex)}let g=e.boundingBox;null!==g&&(this.boundingBox=g.clone());let $=e.boundingSphere;return null!==$&&(this.boundingSphere=$.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}tm.prototype.isBufferGeometry=!0;let tf=new ec,tg=new eu,t$=new ei,tx=new I,tv=new I,ty=new I,t8=new I,tb=new I,tw=new I,t_=new I,tE=new I,tT=new I,tS=new x,tM=new x,tA=new x,tR=new I,tL=new I;class tC extends eD{constructor(e=new tm,t=new eq){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let r=t[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=r.length;n<a;n++){let s=r[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=n}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){let i=this.geometry,r=this.material,n=this.matrixWorld;if(void 0===r||(null===i.boundingSphere&&i.computeBoundingSphere(),t$.copy(i.boundingSphere),t$.applyMatrix4(n),!1===e.ray.intersectsSphere(t$))||(tf.copy(n).invert(),tg.copy(e.ray).applyMatrix4(tf),null!==i.boundingBox&&!1===tg.intersectsBox(i.boundingBox)))return;let a;if(i.isBufferGeometry){let s=i.index,o=i.attributes.position,l=i.morphAttributes.position,h=i.morphTargetsRelative,u=i.attributes.uv,c=i.attributes.uv2,d=i.groups,p=i.drawRange;if(null!==s){if(Array.isArray(r))for(let m=0,f=d.length;m<f;m++){let g=d[m],$=r[g.materialIndex],x=Math.max(g.start,p.start),v=Math.min(s.count,Math.min(g.start+g.count,p.start+p.count));for(let y=x,b=v;y<b;y+=3){let w=s.getX(y),_=s.getX(y+1),E=s.getX(y+2);(a=t0(this,$,e,tg,o,l,h,u,c,w,_,E))&&(a.faceIndex=Math.floor(y/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{let T=Math.max(0,p.start),S=Math.min(s.count,p.start+p.count);for(let M=T,A=S;M<A;M+=3){let R=s.getX(M),L=s.getX(M+1),C=s.getX(M+2);(a=t0(this,r,e,tg,o,l,h,u,c,R,L,C))&&(a.faceIndex=Math.floor(M/3),t.push(a))}}}else if(void 0!==o){if(Array.isArray(r))for(let P=0,D=d.length;P<D;P++){let I=d[P],F=r[I.materialIndex],N=Math.max(I.start,p.start),U=Math.min(o.count,Math.min(I.start+I.count,p.start+p.count));for(let B=N,O=U;B<O;B+=3){let z=B,H=B+1,G=B+2;(a=t0(this,F,e,tg,o,l,h,u,c,z,H,G))&&(a.faceIndex=Math.floor(B/3),a.face.materialIndex=I.materialIndex,t.push(a))}}else{let V=Math.max(0,p.start),k=Math.min(o.count,p.start+p.count);for(let W=V,X=k;W<X;W+=3){let j=W,q=W+1,Y=W+2;(a=t0(this,r,e,tg,o,l,h,u,c,j,q,Y))&&(a.faceIndex=Math.floor(W/3),t.push(a))}}}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function t0(e,t,i,r,n,a,s,o,l,h,u,c){tx.fromBufferAttribute(n,h),tv.fromBufferAttribute(n,u),ty.fromBufferAttribute(n,c);let d=e.morphTargetInfluences;if(a&&d){t_.set(0,0,0),tE.set(0,0,0),tT.set(0,0,0);for(let p=0,m=a.length;p<m;p++){let f=d[p],g=a[p];0!==f&&(t8.fromBufferAttribute(g,h),tb.fromBufferAttribute(g,u),tw.fromBufferAttribute(g,c),s?(t_.addScaledVector(t8,f),tE.addScaledVector(tb,f),tT.addScaledVector(tw,f)):(t_.addScaledVector(t8.sub(tx),f),tE.addScaledVector(tb.sub(tv),f),tT.addScaledVector(tw.sub(ty),f)))}tx.add(t_),tv.add(tE),ty.add(tT)}e.isSkinnedMesh&&(e.boneTransform(h,tx),e.boneTransform(u,tv),e.boneTransform(c,ty));let $=function e(t,i,r,n,a,s,o,l){let h;if(null===(h=1===i.side?n.intersectTriangle(o,s,a,!0,l):n.intersectTriangle(a,s,o,2!==i.side,l)))return null;tL.copy(l),tL.applyMatrix4(t.matrixWorld);let u=r.ray.origin.distanceTo(tL);return u<r.near||u>r.far?null:{distance:u,point:tL.clone(),object:t}}(e,t,i,r,tx,tv,ty,tR);if($){o&&(tS.fromBufferAttribute(o,h),tM.fromBufferAttribute(o,u),tA.fromBufferAttribute(o,c),$.uv=eV.getUV(tR,tx,tv,ty,tS,tM,tA,new x)),l&&(tS.fromBufferAttribute(l,h),tM.fromBufferAttribute(l,u),tA.fromBufferAttribute(l,c),$.uv2=eV.getUV(tR,tx,tv,ty,tS,tM,tA,new x));let v={a:h,b:u,c:c,normal:new I,materialIndex:0};eV.getNormal(tx,tv,ty,v.normal),$.face=v}return $}tC.prototype.isMesh=!0;class tP extends tm{constructor(e=1,t=1,i=1,r=1,n=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:a};let s=this;r=Math.floor(r),n=Math.floor(n),a=Math.floor(a);let o=[],l=[],h=[],u=[],c=0,d=0;function p(e,t,i,r,n,a,p,m,f,g,$){let x=a/f,v=p/g,y=a/2,b=p/2,w=m/2,_=f+1,E=g+1,T=0,S=0,M=new I;for(let A=0;A<E;A++){let R=A*v-b;for(let L=0;L<_;L++){let C=L*x-y;M[e]=C*r,M[t]=R*n,M[i]=w,l.push(M.x,M.y,M.z),M[e]=0,M[t]=0,M[i]=m>0?1:-1,h.push(M.x,M.y,M.z),u.push(L/f),u.push(1-A/g),T+=1}}for(let P=0;P<g;P++)for(let D=0;D<f;D++){let F=c+D+_*P,N=c+D+_*(P+1),U=c+(D+1)+_*(P+1),B=c+(D+1)+_*P;o.push(F,N,B),o.push(N,U,B),S+=6}s.addGroup(d,S,$),d+=S,c+=T}p("z","y","x",-1,-1,i,t,e,a,n,0),p("z","y","x",1,-1,i,t,-e,a,n,1),p("x","z","y",1,1,e,i,t,r,a,2),p("x","z","y",1,-1,e,i,-t,r,a,3),p("x","y","z",1,-1,e,t,i,r,n,4),p("x","y","z",-1,-1,e,t,-i,r,n,5),this.setIndex(o),this.setAttribute("position",new ta(l,3)),this.setAttribute("normal",new ta(h,3)),this.setAttribute("uv",new ta(u,2))}static fromJSON(e){return new tP(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function t1(e){let t={};for(let i in e)for(let r in t[i]={},e[i]){let n=e[i][r];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?t[i][r]=n.clone():Array.isArray(n)?t[i][r]=n.slice():t[i][r]=n}return t}function tD(e){let t={};for(let i=0;i<e.length;i++){let r=t1(e[i]);for(let n in r)t[n]=r[n]}return t}let tI={clone:t1,merge:tD};class tF extends eW{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=t1(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){let t=super.toJSON(e);for(let i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){let r=this.uniforms[i],n=r.value;n&&n.isTexture?t.uniforms[i]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[i]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[i]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[i]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[i]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[i]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[i]={type:"m4",value:n.toArray()}:t.uniforms[i]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;let a={};for(let s in this.extensions)!0===this.extensions[s]&&(a[s]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}tF.prototype.isShaderMaterial=!0;class tN extends eD{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new ec,this.projectionMatrix=new ec,this.projectionMatrixInverse=new ec}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);let t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}tN.prototype.isCamera=!0;class tU extends tN{constructor(e=50,t=1,i=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){let t=.5*this.getFilmHeight()/e;this.fov=2*o*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){let e=Math.tan(.5*s*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*o*Math.atan(Math.tan(.5*s*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,n,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=this.near,t=e*Math.tan(.5*s*this.fov)/this.zoom,i=2*t,r=this.aspect*i,n=-.5*r,a=this.view;if(null!==this.view&&this.view.enabled){let o=a.fullWidth,l=a.fullHeight;n+=a.offsetX*r/o,t-=a.offsetY*i/l,r*=a.width/o,i*=a.height/l}let h=this.filmOffset;0!==h&&(n+=e*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}tU.prototype.isPerspectiveCamera=!0;class tB extends eD{constructor(e,t,i){if(super(),this.type="CubeCamera",!0!==i.isWebGLCubeRenderTarget){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;let r=new tU(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new I(1,0,0)),this.add(r);let n=new tU(90,1,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new I(-1,0,0)),this.add(n);let a=new tU(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new I(0,1,0)),this.add(a);let s=new tU(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new I(0,-1,0)),this.add(s);let o=new tU(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new I(0,0,1)),this.add(o);let l=new tU(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new I(0,0,-1)),this.add(l)}update(e,t){null===this.parent&&this.updateMatrixWorld();let i=this.renderTarget,[r,n,a,s,o,l]=this.children,h=e.xr.enabled,u=e.getRenderTarget();e.xr.enabled=!1;let c=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,n),e.setRenderTarget(i,2),e.render(t,a),e.setRenderTarget(i,3),e.render(t,s),e.setRenderTarget(i,4),e.render(t,o),i.texture.generateMipmaps=c,e.setRenderTarget(i,5),e.render(t,l),e.setRenderTarget(u),e.xr.enabled=h}}class tO extends M{constructor(e,t,i,r,n,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:301,i,r,n,a,s,o,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}tO.prototype.isCubeTexture=!0;class tz extends L{constructor(e,t,i){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=i),super(e,e,t),t=t||{},this.texture=new tO(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:1006,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=1023,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new tP(5,5,5),n=new tF({name:"CubemapFromEquirect",uniforms:t1(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});n.uniforms.tEquirect.value=t;let a=new tC(r,n),s=t.minFilter;1008===t.minFilter&&(t.minFilter=1006);let o=new tB(1,10,this);return o.update(e,a),t.minFilter=s,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,i,r){let n=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,i,r);e.setRenderTarget(n)}}tz.prototype.isWebGLCubeRenderTarget=!0;let tH=new I,tG=new I,t2=new v;class tV{constructor(e=new I(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){let r=tH.subVectors(i,t).cross(tG.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){let e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){let i=e.delta(tH),r=this.normal.dot(i);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;let n=-(e.start.dot(this.normal)+this.constant)/r;return n<0||n>1?null:t.copy(i).multiplyScalar(n).add(e.start)}intersectsLine(e){let t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){let i=t||t2.getNormalMatrix(e),r=this.coplanarPoint(tH).applyMatrix4(e),n=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(n),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}tV.prototype.isPlane=!0;let tk=new ei,tW=new I;class t3{constructor(e=new tV,t=new tV,i=new tV,r=new tV,n=new tV,a=new tV){this.planes=[e,t,i,r,n,a]}set(e,t,i,r,n,a){let s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(i),s[3].copy(r),s[4].copy(n),s[5].copy(a),this}copy(e){let t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){let t=this.planes,i=e.elements,r=i[0],n=i[1],a=i[2],s=i[3],o=i[4],l=i[5],h=i[6],u=i[7],c=i[8],d=i[9],p=i[10],m=i[11],f=i[12],g=i[13],$=i[14],x=i[15];return t[0].setComponents(s-r,u-o,m-c,x-f).normalize(),t[1].setComponents(s+r,u+o,m+c,x+f).normalize(),t[2].setComponents(s+n,u+l,m+d,x+g).normalize(),t[3].setComponents(s-n,u-l,m-d,x-g).normalize(),t[4].setComponents(s-a,u-h,m-p,x-$).normalize(),t[5].setComponents(s+a,u+h,m+p,x+$).normalize(),this}intersectsObject(e){let t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),tk.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(tk)}intersectsSprite(e){return tk.center.set(0,0,0),tk.radius=.7071067811865476,tk.applyMatrix4(e.matrixWorld),this.intersectsSphere(tk)}intersectsSphere(e){let t=this.planes,i=e.center,r=-e.radius;for(let n=0;n<6;n++){let a=t[n].distanceToPoint(i);if(a<r)return!1}return!0}intersectsBox(e){let t=this.planes;for(let i=0;i<6;i++){let r=t[i];if(tW.x=r.normal.x>0?e.max.x:e.min.x,tW.y=r.normal.y>0?e.max.y:e.min.y,tW.z=r.normal.z>0?e.max.z:e.min.z,0>r.distanceToPoint(tW))return!1}return!0}containsPoint(e){let t=this.planes;for(let i=0;i<6;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}clone(){return new this.constructor().copy(this)}}function t6(){let e=null,t=!1,i=null,r=null;function n(t,a){i(t,a),r=e.requestAnimationFrame(n)}return{start:function(){!0!==t&&null!==i&&(r=e.requestAnimationFrame(n),t=!0)},stop:function(){e.cancelAnimationFrame(r),t=!1},setAnimationLoop:function(e){i=e},setContext:function(t){e=t}}}function t4(e,t){let i=t.isWebGL2,r=new WeakMap;return{get:function e(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function t(i){i.isInterleavedBufferAttribute&&(i=i.data);let n=r.get(i);n&&(e.deleteBuffer(n.buffer),r.delete(i))},update:function t(n,a){if(n.isGLBufferAttribute){let s=r.get(n);(!s||s.version<n.version)&&r.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version});return}n.isInterleavedBufferAttribute&&(n=n.data);let o=r.get(n);void 0===o?r.set(n,function t(r,n){let a=r.array,s=r.usage,o=e.createBuffer();e.bindBuffer(n,o),e.bufferData(n,a,s),r.onUploadCallback();let l=e.FLOAT;return a instanceof Float32Array?l=e.FLOAT:a instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):a instanceof Uint16Array?r.isFloat16BufferAttribute?i?l=e.HALF_FLOAT:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):l=e.UNSIGNED_SHORT:a instanceof Int16Array?l=e.SHORT:a instanceof Uint32Array?l=e.UNSIGNED_INT:a instanceof Int32Array?l=e.INT:a instanceof Int8Array?l=e.BYTE:a instanceof Uint8Array?l=e.UNSIGNED_BYTE:a instanceof Uint8ClampedArray&&(l=e.UNSIGNED_BYTE),{buffer:o,type:l,bytesPerElement:a.BYTES_PER_ELEMENT,version:r.version}}(n,a)):o.version<n.version&&(!function t(r,n,a){let s=n.array,o=n.updateRange;e.bindBuffer(a,r),-1===o.count?e.bufferSubData(a,0,s):(i?e.bufferSubData(a,o.offset*s.BYTES_PER_ELEMENT,s,o.offset,o.count):e.bufferSubData(a,o.offset*s.BYTES_PER_ELEMENT,s.subarray(o.offset,o.offset+o.count)),o.count=-1)}(o.buffer,n,a),o.version=n.version)}}}class tX extends tm{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};let n=e/2,a=t/2,s=Math.floor(i),o=Math.floor(r),l=s+1,h=o+1,u=e/s,c=t/o,d=[],p=[],m=[],f=[];for(let g=0;g<h;g++){let $=g*c-a;for(let x=0;x<l;x++){let v=x*u-n;p.push(v,-$,0),m.push(0,0,1),f.push(x/s),f.push(1-g/o)}}for(let y=0;y<o;y++)for(let b=0;b<s;b++){let w=b+l*y,_=b+l*(y+1),E=b+1+l*(y+1),T=b+1+l*y;d.push(w,_,T),d.push(_,E,T)}this.setIndex(d),this.setAttribute("position",new ta(p,3)),this.setAttribute("normal",new ta(m,3)),this.setAttribute("uv",new ta(f,2))}static fromJSON(e){return new tX(e.width,e.height,e.widthSegments,e.heightSegments)}}let tj={alphamap_fragment:"#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n	if ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n		plane = clippingPlanes[ i ];\n		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n	}\n	#pragma unroll_loop_end\n	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n		bool clipped = true;\n		#pragma unroll_loop_start\n		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n		}\n		#pragma unroll_loop_end\n		if ( clipped ) discard;\n	#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	varying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n	return dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_maxMipLevel 8.0\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_maxTileSize 256.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		if ( mipInt < cubeUV_maxMipLevel ) {\n			uv.y += 2.0 * cubeUV_maxTileSize;\n		}\n		uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n		uv *= texelSize;\n		return texture2D( envMap, uv ).rgb;\n	}\n	#define r0 1.0\n	#define v0 0.339\n	#define m0 - 2.0\n	#define r1 0.8\n	#define v1 0.276\n	#define m1 - 1.0\n	#define r4 0.4\n	#define v4 0.046\n	#define m4 2.0\n	#define r5 0.305\n	#define v5 0.016\n	#define m5 3.0\n	#define r6 0.21\n	#define v6 0.0038\n	#define m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= r1 ) {\n			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n		} else if ( roughness >= r4 ) {\n			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n		} else if ( roughness >= r5 ) {\n			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n		} else if ( roughness >= r6 ) {\n			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n	mat3 m = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n	transformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n	return value;\n}\nvec4 sRGBToLinear( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n		envColor = envMapTexelToLinear( envColor );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n	#ifdef ENVMAP_MODE_REFRACTION\n		uniform float refractionRatio;\n	#endif\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#if defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 reflectVec;\n			#ifdef ENVMAP_MODE_REFLECTION\n				reflectVec = reflect( - viewDir, normal );\n				reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			#else\n				reflectVec = refract( - viewDir, normal, refractionRatio );\n			#endif\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n	#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n	vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n	vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		lightMapIrradiance *= PI;\n	#endif\n	reflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n	vIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointLightInfo( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotLightInfo( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		#ifdef DOUBLE_SIDED\n			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n		#endif\n	}\n	#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n		if ( cutoffDistance > 0.0 ) {\n			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n		}\n		return distanceFalloff;\n	#else\n		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n		}\n		return 1.0;\n	#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )	(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	#ifdef SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULARINTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n		#endif\n		#ifdef USE_SPECULARCOLORMAP\n			specularColorFactor *= specularColorMapTexelToLinear( texture2D( specularColorMap, vUv ) ).rgb;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEENCOLORMAP\n		material.sheenColor *= sheenColorMapTexelToLinear( texture2D( sheenColorMap, vUv ) ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEENROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n	#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometry.normal;\n		vec3 viewDir = geometry.viewDir;\n		vec3 position = geometry.position;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(		0, 1,		0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n	geometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, geometry, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vUv2 );\n		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometry.normal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n		varying float vIsPerspective;\n	#else\n		uniform float logDepthBufFC;\n	#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n	#else\n		if ( isPerspectiveMatrix( projectionMatrix ) ) {\n			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n			gl_Position.z *= gl_Position.w;\n		}\n	#endif\n#endif",map_fragment:"#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, uv );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	uniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			if ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n		}\n	#else\n		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n	#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n	uniform float morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n		uniform sampler2DArray morphTargetsTexture;\n		uniform vec2 morphTargetsTextureSize;\n		vec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n			float texelIndex = float( vertexIndex * stride + offset );\n			float y = floor( texelIndex / morphTargetsTextureSize.x );\n			float x = texelIndex - y * morphTargetsTextureSize.x;\n			vec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n			return texture( morphTargetsTexture, morphUV ).xyz;\n		}\n	#else\n		#ifndef USE_MORPHNORMALS\n			uniform float morphTargetInfluences[ 8 ];\n		#else\n			uniform float morphTargetInfluences[ 4 ];\n		#endif\n	#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	#ifdef MORPHTARGETS_TEXTURE\n		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n			#ifndef USE_MORPHNORMALS\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n			#else\n				if ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n			#endif\n		}\n	#else\n		transformed += morphTarget0 * morphTargetInfluences[ 0 ];\n		transformed += morphTarget1 * morphTargetInfluences[ 1 ];\n		transformed += morphTarget2 * morphTargetInfluences[ 2 ];\n		transformed += morphTarget3 * morphTargetInfluences[ 3 ];\n		#ifndef USE_MORPHNORMALS\n			transformed += morphTarget4 * morphTargetInfluences[ 4 ];\n			transformed += morphTarget5 * morphTargetInfluences[ 5 ];\n			transformed += morphTarget6 * morphTargetInfluences[ 6 ];\n			transformed += morphTarget7 * morphTargetInfluences[ 7 ];\n		#endif\n	#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	#ifdef USE_TANGENT\n		vec3 tangent = normalize( vTangent );\n		vec3 bitangent = normalize( vBitangent );\n		#ifdef DOUBLE_SIDED\n			tangent = tangent * faceDirection;\n			bitangent = bitangent * faceDirection;\n		#endif\n		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n			mat3 vTBN = mat3( tangent, bitangent, normal );\n		#endif\n	#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	#ifdef USE_TANGENT\n		normal = normalize( vTBN * mapN );\n	#else\n		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n	#endif\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n	}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	#ifdef USE_TANGENT\n		clearcoatNormal = normalize( vTBN * clearcoatMapN );\n	#else\n		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n	#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n	return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		float hard_shadow = step( compare , distribution.x );\n		if (hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x ;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n							f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n							f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return shadow;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;\n		vec3 bd3D = normalize( lightToPosition );\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		vec4 shadowWorldPosition;\n	#endif\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n	#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform highp sampler2D boneTexture;\n		uniform int boneTextureSize;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureSize ) );\n			float y = floor( j / float( boneTextureSize ) );\n			float dx = 1.0 / float( boneTextureSize );\n			float dy = 1.0 / float( boneTextureSize );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(	1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,	1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,	1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n	float transmissionAlpha = 1.0;\n	float transmissionFactor = transmission;\n	float thicknessFactor = thickness;\n	#ifdef USE_TRANSMISSIONMAP\n		transmissionFactor *= texture2D( transmissionMap, vUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		thicknessFactor *= texture2D( thicknessMap, vUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmission = getIBLVolumeRefraction(\n		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n		attenuationColor, attenuationDistance );\n	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	vec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( float roughness, float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		#ifdef TEXTURE_LOD_EXT\n			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#else\n			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n		#endif\n	}\n	vec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n		if ( attenuationDistance == 0.0 ) {\n			return radiance;\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n		vec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n		vec3 attenuationColor, float attenuationDistance ) {\n		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n		vec3 refractedRayExit = position + transmissionRay;\n		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n		vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n		refractionCoords += 1.0;\n		refractionCoords /= 2.0;\n		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n	}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n	varying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n	#ifdef UVS_VERTEX_ONLY\n		vec2 vUv;\n	#else\n		varying vec2 vUv;\n	#endif\n	uniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n	uniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	vec3 vReflect = vWorldDirection;\n	#include <envmap_fragment>\n	gl_FragColor = envColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	vec4 texColor = texture2D( tEquirect, sampleUV );\n	gl_FragColor = mapTexelToLinear( texColor );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel= texture2D( lightMap, vUv2 );\n		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n	varying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	#ifdef DOUBLE_SIDED\n		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n	#else\n		reflectedLight.indirectDiffuse += vIndirectFront;\n	#endif\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n		matcapColor = matcapTexelToLinear( matcapColor );\n	#else\n		vec4 matcapColor = vec4( 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULARINTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n	#ifdef USE_SPECULARCOLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEENCOLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEENROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n	#endif\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n	vec2 scale;\n	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <output_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}"},t5={common:{diffuse:{value:new e7(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new v},uv2Transform:{value:new v},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new x(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new e7(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new e7(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new v}},sprite:{diffuse:{value:new e7(16777215)},opacity:{value:1},center:{value:new x(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new v}}},t7={basic:{uniforms:tD([t5.common,t5.specularmap,t5.envmap,t5.aomap,t5.lightmap,t5.fog]),vertexShader:tj.meshbasic_vert,fragmentShader:tj.meshbasic_frag},lambert:{uniforms:tD([t5.common,t5.specularmap,t5.envmap,t5.aomap,t5.lightmap,t5.emissivemap,t5.fog,t5.lights,{emissive:{value:new e7(0)}}]),vertexShader:tj.meshlambert_vert,fragmentShader:tj.meshlambert_frag},phong:{uniforms:tD([t5.common,t5.specularmap,t5.envmap,t5.aomap,t5.lightmap,t5.emissivemap,t5.bumpmap,t5.normalmap,t5.displacementmap,t5.fog,t5.lights,{emissive:{value:new e7(0)},specular:{value:new e7(1118481)},shininess:{value:30}}]),vertexShader:tj.meshphong_vert,fragmentShader:tj.meshphong_frag},standard:{uniforms:tD([t5.common,t5.envmap,t5.aomap,t5.lightmap,t5.emissivemap,t5.bumpmap,t5.normalmap,t5.displacementmap,t5.roughnessmap,t5.metalnessmap,t5.fog,t5.lights,{emissive:{value:new e7(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:tj.meshphysical_vert,fragmentShader:tj.meshphysical_frag},toon:{uniforms:tD([t5.common,t5.aomap,t5.lightmap,t5.emissivemap,t5.bumpmap,t5.normalmap,t5.displacementmap,t5.gradientmap,t5.fog,t5.lights,{emissive:{value:new e7(0)}}]),vertexShader:tj.meshtoon_vert,fragmentShader:tj.meshtoon_frag},matcap:{uniforms:tD([t5.common,t5.bumpmap,t5.normalmap,t5.displacementmap,t5.fog,{matcap:{value:null}}]),vertexShader:tj.meshmatcap_vert,fragmentShader:tj.meshmatcap_frag},points:{uniforms:tD([t5.points,t5.fog]),vertexShader:tj.points_vert,fragmentShader:tj.points_frag},dashed:{uniforms:tD([t5.common,t5.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:tj.linedashed_vert,fragmentShader:tj.linedashed_frag},depth:{uniforms:tD([t5.common,t5.displacementmap]),vertexShader:tj.depth_vert,fragmentShader:tj.depth_frag},normal:{uniforms:tD([t5.common,t5.bumpmap,t5.normalmap,t5.displacementmap,{opacity:{value:1}}]),vertexShader:tj.meshnormal_vert,fragmentShader:tj.meshnormal_frag},sprite:{uniforms:tD([t5.sprite,t5.fog]),vertexShader:tj.sprite_vert,fragmentShader:tj.sprite_frag},background:{uniforms:{uvTransform:{value:new v},t2D:{value:null}},vertexShader:tj.background_vert,fragmentShader:tj.background_frag},cube:{uniforms:tD([t5.envmap,{opacity:{value:1}}]),vertexShader:tj.cube_vert,fragmentShader:tj.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:tj.equirect_vert,fragmentShader:tj.equirect_frag},distanceRGBA:{uniforms:tD([t5.common,t5.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:tj.distanceRGBA_vert,fragmentShader:tj.distanceRGBA_frag},shadow:{uniforms:tD([t5.lights,t5.fog,{color:{value:new e7(0)},opacity:{value:1}}]),vertexShader:tj.shadow_vert,fragmentShader:tj.shadow_frag}};function tq(e,t,i,r,n){let a=new e7(0),s=0,o,l,h=null,u=0,c=null;function d(e,t){i.buffers.color.setClear(e.r,e.g,e.b,t,n)}return{getClearColor:function(){return a},setClearColor:function(e,t=1){a.set(e),d(a,s=t)},getClearAlpha:function(){return s},setClearAlpha:function(e){d(a,s=e)},render:function i(n,p){let m=!1,f=!0===p.isScene?p.background:null;f&&f.isTexture&&(f=t.get(f));let g=e.xr,$=g.getSession&&g.getSession();$&&"additive"===$.environmentBlendMode&&(f=null),null===f?d(a,s):f&&f.isColor&&(d(f,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||306===f.mapping)?(void 0===l&&((l=new tC(new tP(1,1,1),new tF({name:"BackgroundCubeMaterial",uniforms:t1(t7.cube.uniforms),vertexShader:t7.cube.vertexShader,fragmentShader:t7.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=f,l.material.uniforms.flipEnvMap.value=f.isCubeTexture&&!1===f.isRenderTargetTexture?-1:1,(h!==f||u!==f.version||c!==e.toneMapping)&&(l.material.needsUpdate=!0,h=f,u=f.version,c=e.toneMapping),n.unshift(l,l.geometry,l.material,0,0,null)):f&&f.isTexture&&(void 0===o&&((o=new tC(new tX(2,2),new tF({name:"BackgroundMaterial",uniforms:t1(t7.background.uniforms),vertexShader:t7.background.vertexShader,fragmentShader:t7.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(o)),o.material.uniforms.t2D.value=f,!0===f.matrixAutoUpdate&&f.updateMatrix(),o.material.uniforms.uvTransform.value.copy(f.matrix),(h!==f||u!==f.version||c!==e.toneMapping)&&(o.material.needsUpdate=!0,h=f,u=f.version,c=e.toneMapping),n.unshift(o,o.geometry,o.material,0,0,null))}}}function tY(e,t,i,r){let n=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=r.isWebGL2?null:t.get("OES_vertex_array_object"),s=r.isWebGL2||null!==a,o={},l=d(null),h=l;function u(t){return r.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function c(t){return r.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function d(e){let t=[],i=[],r=[];for(let a=0;a<n;a++)t[a]=0,i[a]=0,r[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:e,attributes:{},index:null}}function p(){let e=h.newAttributes;for(let t=0,i=e.length;t<i;t++)e[t]=0}function m(e){f(e,0)}function f(i,n){let a=h.newAttributes,s=h.enabledAttributes,o=h.attributeDivisors;if(a[i]=1,0===s[i]&&(e.enableVertexAttribArray(i),s[i]=1),o[i]!==n){let l=r.isWebGL2?e:t.get("ANGLE_instanced_arrays");l[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,n),o[i]=n}}function g(){let t=h.newAttributes,i=h.enabledAttributes;for(let r=0,n=i.length;r<n;r++)i[r]!==t[r]&&(e.disableVertexAttribArray(r),i[r]=0)}function $(t,i,n,a,s,o){!0===r.isWebGL2&&(n===e.INT||n===e.UNSIGNED_INT)?e.vertexAttribIPointer(t,i,n,s,o):e.vertexAttribPointer(t,i,n,a,s,o)}function x(){v(),h!==l&&u((h=l).object)}function v(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:function n(l,c,x,v,y){let b=!1;if(s){let w=function t(i,n,s){let l=!0===s.wireframe,h=o[i.id];void 0===h&&(h={},o[i.id]=h);let u=h[n.id];void 0===u&&(u={},h[n.id]=u);let c=u[l];return void 0===c&&(c=d(r.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[l]=c),c}(v,x,c);h!==w&&u((h=w).object),(b=function e(t,i){let r=h.attributes,n=t.attributes,a=0;for(let s in n){let o=r[s],l=n[s];if(void 0===o||o.attribute!==l||o.data!==l.data)return!0;a++}return h.attributesNum!==a||h.index!==i}(v,y))&&function e(t,i){let r={},n=t.attributes,a=0;for(let s in n){let o=n[s],l={};l.attribute=o,o.data&&(l.data=o.data),r[s]=l,a++}h.attributes=r,h.attributesNum=a,h.index=i}(v,y)}else{let _=!0===c.wireframe;(h.geometry!==v.id||h.program!==x.id||h.wireframe!==_)&&(h.geometry=v.id,h.program=x.id,h.wireframe=_,b=!0)}!0===l.isInstancedMesh&&(b=!0),null!==y&&i.update(y,e.ELEMENT_ARRAY_BUFFER),b&&(function n(a,s,o,l){if(!1===r.isWebGL2&&(a.isInstancedMesh||l.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();let h=l.attributes,u=o.getAttributes(),c=s.defaultAttributeValues;for(let d in u){let x=u[d];if(x.location>=0){let v=h[d];if(void 0===v&&("instanceMatrix"===d&&a.instanceMatrix&&(v=a.instanceMatrix),"instanceColor"===d&&a.instanceColor&&(v=a.instanceColor)),void 0!==v){let y=v.normalized,b=v.itemSize,w=i.get(v);if(void 0===w)continue;let _=w.buffer,E=w.type,T=w.bytesPerElement;if(v.isInterleavedBufferAttribute){let S=v.data,M=S.stride,A=v.offset;if(S&&S.isInstancedInterleavedBuffer){for(let R=0;R<x.locationSize;R++)f(x.location+R,S.meshPerAttribute);!0!==a.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=S.meshPerAttribute*S.count)}else for(let L=0;L<x.locationSize;L++)m(x.location+L);e.bindBuffer(e.ARRAY_BUFFER,_);for(let C=0;C<x.locationSize;C++)$(x.location+C,b/x.locationSize,E,y,M*T,(A+b/x.locationSize*C)*T)}else{if(v.isInstancedBufferAttribute){for(let P=0;P<x.locationSize;P++)f(x.location+P,v.meshPerAttribute);!0!==a.isInstancedMesh&&void 0===l._maxInstanceCount&&(l._maxInstanceCount=v.meshPerAttribute*v.count)}else for(let D=0;D<x.locationSize;D++)m(x.location+D);e.bindBuffer(e.ARRAY_BUFFER,_);for(let I=0;I<x.locationSize;I++)$(x.location+I,b/x.locationSize,E,y,b*T,b/x.locationSize*I*T)}}else if(void 0!==c){let F=c[d];if(void 0!==F)switch(F.length){case 2:e.vertexAttrib2fv(x.location,F);break;case 3:e.vertexAttrib3fv(x.location,F);break;case 4:e.vertexAttrib4fv(x.location,F);break;default:e.vertexAttrib1fv(x.location,F)}}}}g()}(l,c,x,v),null!==y&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i.get(y).buffer))},reset:x,resetDefaultState:v,dispose:function e(){for(let t in x(),o){let i=o[t];for(let r in i){let n=i[r];for(let a in n)c(n[a].object),delete n[a];delete i[r]}delete o[t]}},releaseStatesOfGeometry:function e(t){if(void 0===o[t.id])return;let i=o[t.id];for(let r in i){let n=i[r];for(let a in n)c(n[a].object),delete n[a];delete i[r]}delete o[t.id]},releaseStatesOfProgram:function e(t){for(let i in o){let r=o[i];if(void 0===r[t.id])continue;let n=r[t.id];for(let a in n)c(n[a].object),delete n[a];delete r[t.id]}},initAttributes:p,enableAttribute:m,disableUnusedAttributes:g}}function tZ(e,t,i,r){let n=r.isWebGL2,a;function s(e){a=e}this.setMode=s,this.render=function t(r,n){e.drawArrays(a,r,n),i.update(n,a,1)},this.renderInstances=function r(s,o,l){if(0===l)return;let h,u;if(n)h=e,u="drawArraysInstanced";else if(h=t.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",null===h){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[u](a,s,o,l),i.update(o,a,l)}}function tJ(e,t,i){let r;function n(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,s=void 0!==i.precision?i.precision:"highp",o=n(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);let l=a||t.has("WEBGL_draw_buffers"),h=!0===i.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),c=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),m=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),$=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),x=c>0,v=a||t.has("OES_texture_float"),y=a?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:function i(){if(void 0!==r)return r;if(!0===t.has("EXT_texture_filter_anisotropic")){let n=t.get("EXT_texture_filter_anisotropic");r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r},getMaxPrecision:n,precision:s,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:c,maxTextureSize:d,maxCubemapSize:p,maxAttributes:m,maxVertexUniforms:f,maxVaryings:g,maxFragmentUniforms:$,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:x&&v,maxSamples:y}}function tK(e){let t=this,i=null,r=0,n=!1,a=!1,s=new tV,o=new v,l={value:null,needsUpdate:!1};function h(){l.value!==i&&(l.value=i,l.needsUpdate=r>0),t.numPlanes=r,t.numIntersection=0}function u(e,i,r,n){let a=null!==e?e.length:0,h=null;if(0!==a){if(h=l.value,!0!==n||null===h){let u=r+4*a,c=i.matrixWorldInverse;o.getNormalMatrix(c),(null===h||h.length<u)&&(h=new Float32Array(u));for(let d=0,p=r;d!==a;++d,p+=4)s.copy(e[d]).applyMatrix4(c,o),s.normal.toArray(h,p),h[p+3]=s.constant}l.value=h,l.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,h}this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){let s=0!==e.length||t||0!==r||n;return n=t,i=u(e,a,0),r=e.length,s},this.beginShadows=function(){a=!0,u(null)},this.endShadows=function(){a=!1,h()},this.setState=function(t,s,o){let c=t.clippingPlanes,d=t.clipIntersection,p=t.clipShadows,m=e.get(t);if(n&&null!==c&&0!==c.length&&(!a||p)){let f=a?0:r,g=4*f,$=m.clippingState||null;l.value=$,$=u(c,s,g,o);for(let x=0;x!==g;++x)$[x]=i[x];m.clippingState=$,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=f}else a?u(null):h()}}function tQ(e){let t=new WeakMap;function i(e,t){return 303===t?e.mapping=301:304===t&&(e.mapping=302),e}function r(e){let i=e.target;i.removeEventListener("dispose",r);let n=t.get(i);void 0!==n&&(t.delete(i),n.dispose())}return{get:function n(a){if(a&&a.isTexture&&!1===a.isRenderTargetTexture){let s=a.mapping;if(303===s||304===s){if(t.has(a)){let o=t.get(a).texture;return i(o,a.mapping)}{let l=a.image;if(!l||!(l.height>0))return null;{let h=e.getRenderTarget(),u=new tz(l.height/2);return u.fromEquirectangularTexture(e,a),t.set(a,u),e.setRenderTarget(h),a.addEventListener("dispose",r),i(u.texture,a.mapping)}}}}return a},dispose:function e(){t=new WeakMap}}}t7.physical={uniforms:tD([t7.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new x(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new e7(0)},sheenColorMap:{value:null},sheenRoughness:{value:0},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new x},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new e7(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularColor:{value:new e7(1,1,1)},specularColorMap:{value:null}}]),vertexShader:tj.meshphysical_vert,fragmentShader:tj.meshphysical_frag};class t9 extends tN{constructor(e=-1,t=1,i=1,r=-1,n=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=n,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,n,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2,n=i-e,a=i+e,s=r+t,o=r-t;if(null!==this.view&&this.view.enabled){let l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=l*this.view.offsetX,a=n+l*this.view.width,s-=h*this.view.offsetY,o=s-h*this.view.height}this.projectionMatrix.makeOrthographic(n,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){let t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}t9.prototype.isOrthographicCamera=!0;class ie extends tF{constructor(e){super(e),this.type="RawShaderMaterial"}}ie.prototype.isRawShaderMaterial=!0;let it=[.125,.215,.35,.446,.526,.582],ii=5+it.length,ir={3e3:0,3001:1},ia=new t9,{_lodPlanes:is,_sizeLods:io,_sigmas:il}=function e(){let t=[],i=[],r=[],n=8;for(let a=0;a<ii;a++){let s=Math.pow(2,n);i.push(s);let o=1/s;a>4?o=it[a-8+4-1]:0==a&&(o=0),r.push(o);let l=1/(s-1),h=-l/2,u=1+l/2,c=[h,h,u,h,u,u,h,h,u,u,h,u],d=new Float32Array(108),p=new Float32Array(72),m=new Float32Array(36);for(let f=0;f<6;f++){let g=f%3*2/3-1,$=f>2?0:-1,x=[g,$,0,g+2/3,$,0,g+2/3,$+1,0,g,$,0,g+2/3,$+1,0,g,$+1,0];d.set(x,18*f),p.set(c,12*f);let v=[f,f,f,f,f,f];m.set(v,6*f)}let y=new tm;y.setAttribute("position",new eJ(d,3)),y.setAttribute("uv",new eJ(p,2)),y.setAttribute("faceIndex",new eJ(m,1)),t.push(y),n>4&&n--}return{_lodPlanes:t,_sizeLods:i,_sigmas:r}}(),ih=new e7,iu=null,ic=(1+Math.sqrt(5))/2,id=1/ic,ip=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,ic,id),new I(0,ic,-id),new I(id,0,ic),new I(-id,0,ic),new I(ic,id,0),new I(-ic,id,0)];class im{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=function e(t){let i=new Float32Array(t),r=new I(0,1,0),n=new ie({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:iy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${i8()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return n}(20),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){iu=this._renderer.getRenderTarget();let n=this._allocateTargets();return this._sceneToCubeUV(e,i,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=iv(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=ix(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<is.length;e++)is[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(iu),e.scissorTest=!1,i$(e,0,0,e.width,e.height)}_fromTexture(e){iu=this._renderer.getRenderTarget();let t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){let t={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},i=ig(t);return i.depthBuffer=!e,this._pingPongRenderTarget=ig(t),i}_compileMaterial(e){let t=new tC(is[0],e);this._renderer.compile(t,ia)}_sceneToCubeUV(e,t,i,r){let n=new tU(90,1,t,i),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,l=o.autoClear,h=o.toneMapping;o.getClearColor(ih),o.toneMapping=0,o.autoClear=!1;let u=new eq({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),c=new tC(new tP,u),d=!1,p=e.background;p?p.isColor&&(u.color.copy(p),e.background=null,d=!0):(u.color.copy(ih),d=!0);for(let m=0;m<6;m++){let f=m%3;0==f?(n.up.set(0,a[m],0),n.lookAt(s[m],0,0)):1==f?(n.up.set(0,0,a[m]),n.lookAt(0,s[m],0)):(n.up.set(0,a[m],0),n.lookAt(0,0,s[m])),i$(r,256*f,m>2?256:0,256,256),o.setRenderTarget(r),d&&o.render(c,n),o.render(e,n)}c.geometry.dispose(),c.material.dispose(),o.toneMapping=h,o.autoClear=l,e.background=p}_setEncoding(e,t){!0===this._renderer.capabilities.isWebGL2&&1023===t.format&&1009===t.type&&3001===t.encoding?e.value=ir[3e3]:e.value=ir[t.encoding]}_textureToCubeUV(e,t){let i=this._renderer,r=301===e.mapping||302===e.mapping;r?null==this._cubemapShader&&(this._cubemapShader=iv()):null==this._equirectShader&&(this._equirectShader=ix());let n=r?this._cubemapShader:this._equirectShader,a=new tC(is[0],n),s=n.uniforms;s.envMap.value=e,r||s.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(s.inputEncoding,e),i$(t,0,0,768,512),i.setRenderTarget(t),i.render(a,ia)}_applyPMREM(e){let t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<ii;r++){let n=Math.sqrt(il[r]*il[r]-il[r-1]*il[r-1]),a=ip[(r-1)%ip.length];this._blur(e,r-1,r,n,a)}t.autoClear=i}_blur(e,t,i,r,n){let a=this._pingPongRenderTarget;this._halfBlur(e,a,t,i,r,"latitudinal",n),this._halfBlur(a,e,i,i,r,"longitudinal",n)}_halfBlur(e,t,i,r,n,a,s){let o=this._renderer,l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");let h=new tC(is[r],l),u=l.uniforms,c=io[i]-1,d=isFinite(n)?Math.PI/(2*c):2*Math.PI/39,p=n/d,m=isFinite(n)?1+Math.floor(3*p):20;m>20&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${m} samples when the maximum is set to 20`);let f=[],g=0;for(let $=0;$<20;++$){let x=$/p,v=Math.exp(-x*x/2);f.push(v),0==$?g+=v:$<m&&(g+=2*v)}for(let y=0;y<f.length;y++)f[y]=f[y]/g;u.envMap.value=e.texture,u.samples.value=m,u.weights.value=f,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s),u.dTheta.value=d,u.mipInt.value=8-i;let b=io[r];i$(t,3*Math.max(0,256-2*b),(0===r?0:512)+2*b*(r>4?r-8+4:0),3*b,2*b),o.setRenderTarget(t),o.render(h,ia)}}function ig(e){let t=new L(768,768,e);return t.texture.mapping=306,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function i$(e,t,i,r,n){e.viewport.set(t,i,r,n),e.scissor.set(t,i,r,n)}function ix(){let e=new x(1,1),t=new ie({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:ir[3e3]}},vertexShader:iy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${i8()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return t}function iv(){let e=new ie({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ir[3e3]}},vertexShader:iy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${i8()}

			void main() {

				gl_FragColor = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1});return e}function iy(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function i8(){return`

		uniform int inputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else {

				return sRGBToLinear( value );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}function ib(e){let t=new WeakMap,i=null;function r(e){let i=e.target;i.removeEventListener("dispose",r);let n=t.get(i);void 0!==n&&(t.delete(i),n.dispose())}return{get:function n(a){if(a&&a.isTexture&&!1===a.isRenderTargetTexture){let s=a.mapping,o=303===s||304===s,l=301===s||302===s;if(o||l){if(t.has(a))return t.get(a).texture;{let h=a.image;if(!(o&&h&&h.height>0||l&&h&&function e(t){let i=0;for(let r=0;r<6;r++)void 0!==t[r]&&i++;return 6===i}(h)))return null;{let u=e.getRenderTarget();null===i&&(i=new im(e));let c=o?i.fromEquirectangular(a):i.fromCubemap(a);return t.set(a,c),e.setRenderTarget(u),a.addEventListener("dispose",r),c.texture}}}}return a},dispose:function e(){t=new WeakMap,null!==i&&(i.dispose(),i=null)}}}function iw(e){let t={};function i(i){if(void 0!==t[i])return t[i];let r;switch(i){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(i)}return t[i]=r,r}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){let t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function i_(e,t,i,r){let n={},a=new WeakMap;function s(e){let o=e.target;for(let l in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[l]);o.removeEventListener("dispose",s),delete n[o.id];let h=a.get(o);h&&(t.remove(h),a.delete(o)),r.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,i.memory.geometries--}function o(e){let i=[],r=e.index,n=e.attributes.position,s=0;if(null!==r){let o=r.array;s=r.version;for(let l=0,h=o.length;l<h;l+=3){let u=o[l+0],c=o[l+1],d=o[l+2];i.push(u,c,c,d,d,u)}}else{let p=n.array;s=n.version;for(let m=0,f=p.length/3-1;m<f;m+=3){let g=m+0,$=m+1,x=m+2;i.push(g,$,$,x,x,g)}}let v=new(y(i)>65535?tr:tt)(i,1);v.version=s;let b=a.get(e);b&&t.remove(b),a.set(e,v)}return{get:function e(t,r){return!0===n[r.id]||(r.addEventListener("dispose",s),n[r.id]=!0,i.memory.geometries++),r},update:function i(r){let n=r.attributes;for(let a in n)t.update(n[a],e.ARRAY_BUFFER);let s=r.morphAttributes;for(let o in s){let l=s[o];for(let h=0,u=l.length;h<u;h++)t.update(l[h],e.ARRAY_BUFFER)}},getWireframeAttribute:function e(t){let i=a.get(t);if(i){let r=t.index;null!==r&&i.version<r.version&&o(t)}else o(t);return a.get(t)}}}function iE(e,t,i,r){let n=r.isWebGL2,a;function s(e){a=e}let o,l;this.setMode=s,this.setIndex=function e(t){o=t.type,l=t.bytesPerElement},this.render=function t(r,n){e.drawElements(a,n,o,r*l),i.update(n,a,1)},this.renderInstances=function r(s,h,u){if(0===u)return;let c,d;if(n)c=e,d="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===c){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}c[d](a,h,o,s*l,u),i.update(h,a,u)}}function iT(e){let t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function e(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function i(r,n,a){switch(t.calls++,n){case e.TRIANGLES:t.triangles+=a*(r/3);break;case e.LINES:t.lines+=a*(r/2);break;case e.LINE_STRIP:t.lines+=a*(r-1);break;case e.LINE_LOOP:t.lines+=a*r;break;case e.POINTS:t.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}class iS extends M{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}function iM(e,t){return e[0]-t[0]}function iA(e,t){return Math.abs(t[1])-Math.abs(e[1])}function iR(e,t){let i=1,r=t.isInterleavedBufferAttribute?t.data.array:t.array;r instanceof Int8Array?i=127:r instanceof Int16Array?i=32767:r instanceof Int32Array?i=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",r),e.divideScalar(i)}function iL(e,t,i){let r={},n=new Float32Array(8),a=new WeakMap,s=new I,o=[];for(let l=0;l<8;l++)o[l]=[l,0];return{update:function l(h,u,c,d){let p=h.morphTargetInfluences;if(!0===t.isWebGL2){let m=u.morphAttributes.position.length,f=a.get(u);if(void 0===f||f.count!==m){void 0!==f&&f.texture.dispose();let g=void 0!==u.morphAttributes.normal,$=u.morphAttributes.position,v=u.morphAttributes.normal||[],y=u.attributes.position.count,b=!0===g?2:1,w=y*b,_=1;w>t.maxTextureSize&&(_=Math.ceil(w/t.maxTextureSize),w=t.maxTextureSize);let E=new Float32Array(w*_*4*m),T=new iS(E,w,_,m);T.format=1023,T.type=1015,T.needsUpdate=!0;let S=4*b;for(let M=0;M<m;M++){let A=$[M],R=v[M],L=w*_*4*M;for(let C=0;C<A.count;C++){s.fromBufferAttribute(A,C),!0===A.normalized&&iR(s,A);let P=C*S;E[L+P+0]=s.x,E[L+P+1]=s.y,E[L+P+2]=s.z,E[L+P+3]=0,!0===g&&(s.fromBufferAttribute(R,C),!0===R.normalized&&iR(s,R),E[L+P+4]=s.x,E[L+P+5]=s.y,E[L+P+6]=s.z,E[L+P+7]=0)}}f={count:m,texture:T,size:new x(w,_)},a.set(u,f)}let D=0;for(let I=0;I<p.length;I++)D+=p[I];let F=u.morphTargetsRelative?1:1-D;d.getUniforms().setValue(e,"morphTargetBaseInfluence",F),d.getUniforms().setValue(e,"morphTargetInfluences",p),d.getUniforms().setValue(e,"morphTargetsTexture",f.texture,i),d.getUniforms().setValue(e,"morphTargetsTextureSize",f.size)}else{let N=void 0===p?0:p.length,U=r[u.id];if(void 0===U||U.length!==N){U=[];for(let B=0;B<N;B++)U[B]=[B,0];r[u.id]=U}for(let O=0;O<N;O++){let z=U[O];z[0]=O,z[1]=p[O]}U.sort(iA);for(let H=0;H<8;H++)H<N&&U[H][1]?(o[H][0]=U[H][0],o[H][1]=U[H][1]):(o[H][0]=Number.MAX_SAFE_INTEGER,o[H][1]=0);o.sort(iM);let G=u.morphAttributes.position,V=u.morphAttributes.normal,k=0;for(let W=0;W<8;W++){let X=o[W],j=X[0],q=X[1];j!==Number.MAX_SAFE_INTEGER&&q?(G&&u.getAttribute("morphTarget"+W)!==G[j]&&u.setAttribute("morphTarget"+W,G[j]),V&&u.getAttribute("morphNormal"+W)!==V[j]&&u.setAttribute("morphNormal"+W,V[j]),n[W]=q,k+=q):(G&&!0===u.hasAttribute("morphTarget"+W)&&u.deleteAttribute("morphTarget"+W),V&&!0===u.hasAttribute("morphNormal"+W)&&u.deleteAttribute("morphNormal"+W),n[W]=0)}let Y=u.morphTargetsRelative?1:1-k;d.getUniforms().setValue(e,"morphTargetBaseInfluence",Y),d.getUniforms().setValue(e,"morphTargetInfluences",n)}}}}function iC(e,t,i,r){let n=new WeakMap;function a(e){let t=e.target;t.removeEventListener("dispose",a),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function s(o){let l=r.render.frame,h=o.geometry,u=t.get(o,h);return n.get(u)!==l&&(t.update(u),n.set(u,l)),o.isInstancedMesh&&(!1===o.hasEventListener("dispose",a)&&o.addEventListener("dispose",a),i.update(o.instanceMatrix,e.ARRAY_BUFFER),null!==o.instanceColor&&i.update(o.instanceColor,e.ARRAY_BUFFER)),u},dispose:function e(){n=new WeakMap}}}iS.prototype.isDataTexture2DArray=!0;class i0 extends M{constructor(e=null,t=1,i=1,r=1){super(null),this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}i0.prototype.isDataTexture3D=!0;let iP=new M,i1=new iS,iD=new i0,iI=new tO,iF=[],iN=[],iU=new Float32Array(16),iB=new Float32Array(9),iO=new Float32Array(4);function iz(e,t,i){let r=e[0];if(r<=0||r>0)return e;let n=t*i,a=iF[n];if(void 0===a&&(a=new Float32Array(n),iF[n]=a),0!==t){r.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=i,e[s].toArray(a,o)}return a}function iH(e,t){if(e.length!==t.length)return!1;for(let i=0,r=e.length;i<r;i++)if(e[i]!==t[i])return!1;return!0}function iG(e,t){for(let i=0,r=t.length;i<r;i++)e[i]=t[i]}function i2(e,t){let i=iN[t];void 0===i&&(i=new Int32Array(t),iN[t]=i);for(let r=0;r!==t;++r)i[r]=e.allocateTextureUnit();return i}function iV(e,t){let i=this.cache;i[0]!==t&&(e.uniform1f(this.addr,t),i[0]=t)}function ik(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(iH(i,t))return;e.uniform2fv(this.addr,t),iG(i,t)}}function iW(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(void 0!==t.r)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(iH(i,t))return;e.uniform3fv(this.addr,t),iG(i,t)}}function i3(e,t){let i=this.cache;if(void 0!==t.x)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(iH(i,t))return;e.uniform4fv(this.addr,t),iG(i,t)}}function i6(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(iH(i,t))return;e.uniformMatrix2fv(this.addr,!1,t),iG(i,t)}else{if(iH(i,r))return;iO.set(r),e.uniformMatrix2fv(this.addr,!1,iO),iG(i,r)}}function i4(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(iH(i,t))return;e.uniformMatrix3fv(this.addr,!1,t),iG(i,t)}else{if(iH(i,r))return;iB.set(r),e.uniformMatrix3fv(this.addr,!1,iB),iG(i,r)}}function iX(e,t){let i=this.cache,r=t.elements;if(void 0===r){if(iH(i,t))return;e.uniformMatrix4fv(this.addr,!1,t),iG(i,t)}else{if(iH(i,r))return;iU.set(r),e.uniformMatrix4fv(this.addr,!1,iU),iG(i,r)}}function ij(e,t){let i=this.cache;i[0]!==t&&(e.uniform1i(this.addr,t),i[0]=t)}function i5(e,t){let i=this.cache;iH(i,t)||(e.uniform2iv(this.addr,t),iG(i,t))}function i7(e,t){let i=this.cache;iH(i,t)||(e.uniform3iv(this.addr,t),iG(i,t))}function iq(e,t){let i=this.cache;iH(i,t)||(e.uniform4iv(this.addr,t),iG(i,t))}function iY(e,t){let i=this.cache;i[0]!==t&&(e.uniform1ui(this.addr,t),i[0]=t)}function iZ(e,t){let i=this.cache;iH(i,t)||(e.uniform2uiv(this.addr,t),iG(i,t))}function iJ(e,t){let i=this.cache;iH(i,t)||(e.uniform3uiv(this.addr,t),iG(i,t))}function iK(e,t){let i=this.cache;iH(i,t)||(e.uniform4uiv(this.addr,t),iG(i,t))}function iQ(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.safeSetTexture2D(t||iP,n)}function i9(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture3D(t||iD,n)}function re(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.safeSetTextureCube(t||iI,n)}function rt(e,t,i){let r=this.cache,n=i.allocateTextureUnit();r[0]!==n&&(e.uniform1i(this.addr,n),r[0]=n),i.setTexture2DArray(t||i1,n)}function ri(e,t){e.uniform1fv(this.addr,t)}function rr(e,t){let i=iz(t,this.size,2);e.uniform2fv(this.addr,i)}function rn(e,t){let i=iz(t,this.size,3);e.uniform3fv(this.addr,i)}function ra(e,t){let i=iz(t,this.size,4);e.uniform4fv(this.addr,i)}function rs(e,t){let i=iz(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,i)}function ro(e,t){let i=iz(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,i)}function rl(e,t){let i=iz(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,i)}function rh(e,t){e.uniform1iv(this.addr,t)}function ru(e,t){e.uniform2iv(this.addr,t)}function rc(e,t){e.uniform3iv(this.addr,t)}function rd(e,t){e.uniform4iv(this.addr,t)}function rp(e,t){e.uniform1uiv(this.addr,t)}function rm(e,t){e.uniform2uiv(this.addr,t)}function rf(e,t){e.uniform3uiv(this.addr,t)}function rg(e,t){e.uniform4uiv(this.addr,t)}function r$(e,t,i){let r=t.length,n=i2(i,r);e.uniform1iv(this.addr,n);for(let a=0;a!==r;++a)i.safeSetTexture2D(t[a]||iP,n[a])}function rx(e,t,i){let r=t.length,n=i2(i,r);e.uniform1iv(this.addr,n);for(let a=0;a!==r;++a)i.setTexture3D(t[a]||iD,n[a])}function rv(e,t,i){let r=t.length,n=i2(i,r);e.uniform1iv(this.addr,n);for(let a=0;a!==r;++a)i.safeSetTextureCube(t[a]||iI,n[a])}function ry(e,t,i){let r=t.length,n=i2(i,r);e.uniform1iv(this.addr,n);for(let a=0;a!==r;++a)i.setTexture2DArray(t[a]||i1,n[a])}function r8(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=function e(t){switch(t){case 5126:return iV;case 35664:return ik;case 35665:return iW;case 35666:return i3;case 35674:return i6;case 35675:return i4;case 35676:return iX;case 5124:case 35670:return ij;case 35667:case 35671:return i5;case 35668:case 35672:return i7;case 35669:case 35673:return iq;case 5125:return iY;case 36294:return iZ;case 36295:return iJ;case 36296:return iK;case 35678:case 36198:case 36298:case 36306:case 35682:return iQ;case 35679:case 36299:case 36307:return i9;case 35680:case 36300:case 36308:case 36293:return re;case 36289:case 36303:case 36311:case 36292:return rt}}(t.type)}function rb(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=function e(t){switch(t){case 5126:return ri;case 35664:return rr;case 35665:return rn;case 35666:return ra;case 35674:return rs;case 35675:return ro;case 35676:return rl;case 5124:case 35670:return rh;case 35667:case 35671:return ru;case 35668:case 35672:return rc;case 35669:case 35673:return rd;case 5125:return rp;case 36294:return rm;case 36295:return rf;case 36296:return rg;case 35678:case 36198:case 36298:case 36306:case 35682:return r$;case 35679:case 36299:case 36307:return rx;case 35680:case 36300:case 36308:case 36293:return rv;case 36289:case 36303:case 36311:case 36292:return ry}}(t.type)}function rw(e){this.id=e,this.seq=[],this.map={}}rb.prototype.updateCache=function(e){let t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),iG(t,e)},rw.prototype.setValue=function(e,t,i){let r=this.seq;for(let n=0,a=r.length;n!==a;++n){let s=r[n];s.setValue(e,t[s.id],i)}};let r_=/(\w+)(\])?(\[|\.)?/g;function rE(e,t){e.seq.push(t),e.map[t.id]=t}function rT(e,t,i){let r=e.name,n=r.length;for(r_.lastIndex=0;;){let a=r_.exec(r),s=r_.lastIndex,o=a[1],l="]"===a[2],h=a[3];if(l&&(o|=0),void 0===h||"["===h&&s+2===n){rE(i,void 0===h?new r8(o,e,t):new rb(o,e,t));break}{let u=i.map,c=u[o];void 0===c&&rE(i,c=new rw(o)),i=c}}}function rS(e,t){this.seq=[],this.map={};let i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){let n=e.getActiveUniform(t,r),a=e.getUniformLocation(t,n.name);rT(n,a,this)}}function rM(e,t,i){let r=e.createShader(t);return e.shaderSource(r,i),e.compileShader(r),r}rS.prototype.setValue=function(e,t,i,r){let n=this.map[t];void 0!==n&&n.setValue(e,i,r)},rS.prototype.setOptional=function(e,t,i){let r=t[i];void 0!==r&&this.setValue(e,i,r)},rS.upload=function(e,t,i,r){for(let n=0,a=t.length;n!==a;++n){let s=t[n],o=i[s.id];!1!==o.needsUpdate&&s.setValue(e,o.value,r)}},rS.seqWithValue=function(e,t){let i=[];for(let r=0,n=e.length;r!==n;++r){let a=e[r];a.id in t&&i.push(a)}return i};let rA=0;function rR(e){switch(e){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function rL(e,t,i){let r=e.getShaderParameter(t,e.COMPILE_STATUS),n=e.getShaderInfoLog(t).trim();return r&&""===n?"":i.toUpperCase()+"\n\n"+n+"\n\n"+function e(t){let i=t.split("\n");for(let r=0;r<i.length;r++)i[r]=r+1+": "+i[r];return i.join("\n")}(e.getShaderSource(t))}function rC(e,t){let i=rR(t);return"vec4 "+e+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function r0(e){return""!==e}function rP(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function r1(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}let rD=/^[ \t]*#include +<([\w\d./]+)>/gm;function rI(e){return e.replace(rD,rF)}function rF(e,t){let i=tj[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return rI(i)}let rN=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,rU=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function rB(e){return e.replace(rU,rz).replace(rN,rO)}function rO(e,t,i,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),rz(e,t,i,r)}function rz(e,t,i,r){let n="";for(let a=parseInt(t);a<parseInt(i);a++)n+=r.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return n}function rH(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function rG(e,i,r,n){var a;let s=e.getContext(),o=r.defines,l=r.vertexShader,h=r.fragmentShader,u,c=(a=r,u="SHADOWMAP_TYPE_BASIC",1===a.shadowMapType?u="SHADOWMAP_TYPE_PCF":2===a.shadowMapType?u="SHADOWMAP_TYPE_PCF_SOFT":3===a.shadowMapType&&(u="SHADOWMAP_TYPE_VSM"),u),d=function e(t){let i="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:i="ENVMAP_TYPE_CUBE";break;case 306:case 307:i="ENVMAP_TYPE_CUBE_UV"}return i}(r),p=function e(t){let i="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:i="ENVMAP_MODE_REFRACTION"}return i}(r),m=function e(t){let i="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:i="ENVMAP_BLENDING_MULTIPLY";break;case 1:i="ENVMAP_BLENDING_MIX";break;case 2:i="ENVMAP_BLENDING_ADD"}return i}(r),f=r.isWebGL2?"":function e(t){let i=[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap||t.transmission)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return i.filter(r0).join("\n")}(r),g=function e(t){let i=[];for(let r in t){let n=t[r];!1!==n&&i.push("#define "+r+" "+n)}return i.join("\n")}(o),$=s.createProgram(),x,v,y=r.glslVersion?"#version "+r.glslVersion+"\n":"";r.isRawShaderMaterial?((x=[g].filter(r0).join("\n")).length>0&&(x+="\n"),(v=[f,g].filter(r0).join("\n")).length>0&&(v+="\n")):(x=[rH(r),"#define SHADER_NAME "+r.shaderName,g,r.instancing?"#define USE_INSTANCING":"",r.instancingColor?"#define USE_INSTANCING_COLOR":"",r.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+r.maxBones,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+p:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.displacementMap&&r.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.flatShading?"#define FLAT_SHADED":"",r.skinning?"#define USE_SKINNING":"",r.useVertexTexture?"#define BONE_TEXTURE":"",r.morphTargets?"#define USE_MORPHTARGETS":"",r.morphNormals&&!1===r.flatShading?"#define USE_MORPHNORMALS":"",r.morphTargets&&r.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",r.morphTargets&&r.isWebGL2?"#define MORPHTARGETS_COUNT "+r.morphTargetsCount:"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+c:"",r.sizeAttenuation?"#define USE_SIZEATTENUATION":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(r0).join("\n"),v=[f,rH(r),"#define SHADER_NAME "+r.shaderName,g,r.useFog&&r.fog?"#define USE_FOG":"",r.useFog&&r.fogExp2?"#define FOG_EXP2":"",r.map?"#define USE_MAP":"",r.matcap?"#define USE_MATCAP":"",r.envMap?"#define USE_ENVMAP":"",r.envMap?"#define "+d:"",r.envMap?"#define "+p:"",r.envMap?"#define "+m:"",r.lightMap?"#define USE_LIGHTMAP":"",r.aoMap?"#define USE_AOMAP":"",r.emissiveMap?"#define USE_EMISSIVEMAP":"",r.bumpMap?"#define USE_BUMPMAP":"",r.normalMap?"#define USE_NORMALMAP":"",r.normalMap&&r.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",r.normalMap&&r.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",r.clearcoat?"#define USE_CLEARCOAT":"",r.clearcoatMap?"#define USE_CLEARCOATMAP":"",r.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",r.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",r.specularMap?"#define USE_SPECULARMAP":"",r.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",r.specularColorMap?"#define USE_SPECULARCOLORMAP":"",r.roughnessMap?"#define USE_ROUGHNESSMAP":"",r.metalnessMap?"#define USE_METALNESSMAP":"",r.alphaMap?"#define USE_ALPHAMAP":"",r.alphaTest?"#define USE_ALPHATEST":"",r.sheen?"#define USE_SHEEN":"",r.sheenColorMap?"#define USE_SHEENCOLORMAP":"",r.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",r.transmission?"#define USE_TRANSMISSION":"",r.transmissionMap?"#define USE_TRANSMISSIONMAP":"",r.thicknessMap?"#define USE_THICKNESSMAP":"",r.vertexTangents?"#define USE_TANGENT":"",r.vertexColors||r.instancingColor?"#define USE_COLOR":"",r.vertexAlphas?"#define USE_COLOR_ALPHA":"",r.vertexUvs?"#define USE_UV":"",r.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",r.gradientMap?"#define USE_GRADIENTMAP":"",r.flatShading?"#define FLAT_SHADED":"",r.doubleSided?"#define DOUBLE_SIDED":"",r.flipSided?"#define FLIP_SIDED":"",r.shadowMapEnabled?"#define USE_SHADOWMAP":"",r.shadowMapEnabled?"#define "+c:"",r.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",r.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",r.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",r.logarithmicDepthBuffer&&r.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(r.extensionShaderTextureLOD||r.envMap)&&r.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==r.toneMapping?"#define TONE_MAPPING":"",0!==r.toneMapping?tj.tonemapping_pars_fragment:"",0!==r.toneMapping?function e(t,i){let r;switch(i){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="OptimizedCineon";break;case 4:r="ACESFilmic";break;case 5:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",i),r="Linear"}return"vec3 "+t+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",r.toneMapping):"",r.dithering?"#define DITHERING":"",1022===r.format?"#define OPAQUE":"",tj.encodings_pars_fragment,r.map?rC("mapTexelToLinear",r.mapEncoding):"",r.matcap?rC("matcapTexelToLinear",r.matcapEncoding):"",r.envMap?rC("envMapTexelToLinear",r.envMapEncoding):"",r.emissiveMap?rC("emissiveMapTexelToLinear",r.emissiveMapEncoding):"",r.specularColorMap?rC("specularColorMapTexelToLinear",r.specularColorMapEncoding):"",r.sheenColorMap?rC("sheenColorMapTexelToLinear",r.sheenColorMapEncoding):"",r.lightMap?rC("lightMapTexelToLinear",r.lightMapEncoding):"",function e(t,i){let r=rR(i);return"vec4 "+t+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}("linearToOutputTexel",r.outputEncoding),r.depthPacking?"#define DEPTH_PACKING "+r.depthPacking:"","\n"].filter(r0).join("\n")),l=r1(l=rP(l=rI(l),r),r),h=r1(h=rP(h=rI(h),r),r),l=rB(l),h=rB(h),r.isWebGL2&&!0!==r.isRawShaderMaterial&&(y="#version 300 es\n",x="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+x,v=["#define varying in",r.glslVersion===t?"":"layout(location = 0) out highp vec4 pc_fragColor;",r.glslVersion===t?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);let b=y+x+l,w=y+v+h,_=rM(s,s.VERTEX_SHADER,b),E=rM(s,s.FRAGMENT_SHADER,w);if(s.attachShader($,_),s.attachShader($,E),void 0!==r.index0AttributeName?s.bindAttribLocation($,0,r.index0AttributeName):!0===r.morphTargets&&s.bindAttribLocation($,0,"position"),s.linkProgram($),e.debug.checkShaderErrors){let T=s.getProgramInfoLog($).trim(),S=s.getShaderInfoLog(_).trim(),M=s.getShaderInfoLog(E).trim(),A=!0,R=!0;if(!1===s.getProgramParameter($,s.LINK_STATUS)){A=!1;let L=rL(s,_,"vertex"),C=rL(s,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter($,s.VALIDATE_STATUS)+"\n\nProgram Info Log: "+T+"\n"+L+"\n"+C)}else""!==T?console.warn("THREE.WebGLProgram: Program Info Log:",T):(""===S||""===M)&&(R=!1);R&&(this.diagnostics={runnable:A,programLog:T,vertexShader:{log:S,prefix:x},fragmentShader:{log:M,prefix:v}})}s.deleteShader(_),s.deleteShader(E);let P;this.getUniforms=function(){return void 0===P&&(P=new rS(s,$)),P};let D;return this.getAttributes=function(){return void 0===D&&(D=function e(t,i){let r={},n=t.getProgramParameter(i,t.ACTIVE_ATTRIBUTES);for(let a=0;a<n;a++){let s=t.getActiveAttrib(i,a),o=s.name,l=1;s.type===t.FLOAT_MAT2&&(l=2),s.type===t.FLOAT_MAT3&&(l=3),s.type===t.FLOAT_MAT4&&(l=4),r[o]={type:s.type,location:t.getAttribLocation(i,o),locationSize:l}}return r}(s,$)),D},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram($),this.program=void 0},this.name=r.shaderName,this.id=rA++,this.cacheKey=i,this.usedTimes=1,this.program=$,this.vertexShader=_,this.fragmentShader=E,this}let r2=0;class rV{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){let t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),n=this._getShaderStage(i),a=this._getShaderCacheForMaterial(e);return!1===a.has(r)&&(a.add(r),r.usedTimes++),!1===a.has(n)&&(a.add(n),n.usedTimes++),this}remove(e){let t=this.materialCache.get(e);for(let i of t)i.usedTimes--,0===i.usedTimes&&this.shaderCache.delete(i);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){let t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){let t=this.shaderCache;if(!1===t.has(e)){let i=new rk;t.set(e,i)}return t.get(e)}}class rk{constructor(){this.id=r2++,this.usedTimes=0}}function rW(e,t,i,r,n,a,s){let o=new eb,l=new rV,h=[],u=n.isWebGL2,c=n.logarithmicDepthBuffer,d=n.floatVertexTextures,p=n.maxVertexUniforms,m=n.vertexTextures,f=n.precision,g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function $(e){let t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=3e3,u&&e&&e.isTexture&&1023===e.format&&1009===e.type&&3001===e.encoding&&(t=3e3),t}return{getParameters:function a(o,h,x,v,y){let b=v.fog,w=o.isMeshStandardMaterial?v.environment:null,_=(o.isMeshStandardMaterial?i:t).get(o.envMap||w),E=g[o.type],T=y.isSkinnedMesh?function e(t){let i=t.skeleton,r=i.bones;if(d)return 1024;{let n=Math.min(Math.floor((p-20)/4),r.length);return n<r.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+r.length+" bones. This GPU supports "+n+"."),0):n}}(y):0;null!==o.precision&&(f=n.getMaxPrecision(o.precision))!==o.precision&&console.warn("THREE.WebGLProgram.getParameters:",o.precision,"not supported, using",f,"instead.");let S,M,A,R;if(E){let L=t7[E];S=L.vertexShader,M=L.fragmentShader}else S=o.vertexShader,M=o.fragmentShader,l.update(o),A=l.getVertexShaderID(o),R=l.getFragmentShaderID(o);let C=e.getRenderTarget(),P=o.alphaTest>0,D=o.clearcoat>0,I={isWebGL2:u,shaderID:E,shaderName:o.type,vertexShader:S,fragmentShader:M,defines:o.defines,customVertexShaderID:A,customFragmentShaderID:R,isRawShaderMaterial:!0===o.isRawShaderMaterial,glslVersion:o.glslVersion,precision:f,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:m,outputEncoding:null!==C?$(C.texture):e.outputEncoding,map:!!o.map,mapEncoding:$(o.map),matcap:!!o.matcap,matcapEncoding:$(o.matcap),envMap:!!_,envMapMode:_&&_.mapping,envMapEncoding:$(_),envMapCubeUV:!!_&&(306===_.mapping||307===_.mapping),lightMap:!!o.lightMap,lightMapEncoding:$(o.lightMap),aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,emissiveMapEncoding:$(o.emissiveMap),bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,objectSpaceNormalMap:1===o.normalMapType,tangentSpaceNormalMap:0===o.normalMapType,clearcoat:D,clearcoatMap:D&&!!o.clearcoatMap,clearcoatRoughnessMap:D&&!!o.clearcoatRoughnessMap,clearcoatNormalMap:D&&!!o.clearcoatNormalMap,displacementMap:!!o.displacementMap,roughnessMap:!!o.roughnessMap,metalnessMap:!!o.metalnessMap,specularMap:!!o.specularMap,specularIntensityMap:!!o.specularIntensityMap,specularColorMap:!!o.specularColorMap,specularColorMapEncoding:$(o.specularColorMap),alphaMap:!!o.alphaMap,alphaTest:P,gradientMap:!!o.gradientMap,sheen:o.sheen>0,sheenColorMap:!!o.sheenColorMap,sheenColorMapEncoding:$(o.sheenColorMap),sheenRoughnessMap:!!o.sheenRoughnessMap,transmission:o.transmission>0,transmissionMap:!!o.transmissionMap,thicknessMap:!!o.thicknessMap,combine:o.combine,vertexTangents:!!o.normalMap&&!!y.geometry&&!!y.geometry.attributes.tangent,vertexColors:o.vertexColors,vertexAlphas:!0===o.vertexColors&&!!y.geometry&&!!y.geometry.attributes.color&&4===y.geometry.attributes.color.itemSize,vertexUvs:!!o.map||!!o.bumpMap||!!o.normalMap||!!o.specularMap||!!o.alphaMap||!!o.emissiveMap||!!o.roughnessMap||!!o.metalnessMap||!!o.clearcoatMap||!!o.clearcoatRoughnessMap||!!o.clearcoatNormalMap||!!o.displacementMap||!!o.transmissionMap||!!o.thicknessMap||!!o.specularIntensityMap||!!o.specularColorMap||!!o.sheenColorMap||!!o.sheenRoughnessMap,uvsVertexOnly:!(o.map||o.bumpMap||o.normalMap||o.specularMap||o.alphaMap||o.emissiveMap||o.roughnessMap||o.metalnessMap||o.clearcoatNormalMap||o.transmission>0||o.transmissionMap||o.thicknessMap||o.specularIntensityMap||o.specularColorMap||o.sheen>0||o.sheenColorMap||o.sheenRoughnessMap)&&!!o.displacementMap,fog:!!b,useFog:o.fog,fogExp2:b&&b.isFogExp2,flatShading:!!o.flatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:c,skinning:!0===y.isSkinnedMesh&&T>0,maxBones:T,useVertexTexture:d,morphTargets:!!y.geometry&&!!y.geometry.morphAttributes.position,morphNormals:!!y.geometry&&!!y.geometry.morphAttributes.normal,morphTargetsCount:y.geometry&&y.geometry.morphAttributes.position?y.geometry.morphAttributes.position.length:0,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numDirLightShadows:h.directionalShadowMap.length,numPointLightShadows:h.pointShadowMap.length,numSpotLightShadows:h.spotShadowMap.length,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,format:o.format,dithering:o.dithering,shadowMapEnabled:e.shadowMap.enabled&&x.length>0,shadowMapType:e.shadowMap.type,toneMapping:o.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:o.premultipliedAlpha,doubleSided:2===o.side,flipSided:1===o.side,depthPacking:void 0!==o.depthPacking&&o.depthPacking,index0AttributeName:o.index0AttributeName,extensionDerivatives:o.extensions&&o.extensions.derivatives,extensionFragDepth:o.extensions&&o.extensions.fragDepth,extensionDrawBuffers:o.extensions&&o.extensions.drawBuffers,extensionShaderTextureLOD:o.extensions&&o.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||r.has("EXT_shader_texture_lod"),customProgramCacheKey:o.customProgramCacheKey()};return I},getProgramCacheKey:function t(i){var r,n,a,s;let l=[];if(i.shaderID?l.push(i.shaderID):(l.push(i.customVertexShaderID),l.push(i.customFragmentShaderID)),void 0!==i.defines)for(let h in i.defines)l.push(h),l.push(i.defines[h]);return!1===i.isRawShaderMaterial&&(r=l,n=i,r.push(n.precision),r.push(n.outputEncoding),r.push(n.mapEncoding),r.push(n.matcapEncoding),r.push(n.envMapMode),r.push(n.envMapEncoding),r.push(n.lightMapEncoding),r.push(n.emissiveMapEncoding),r.push(n.combine),r.push(n.vertexUvs),r.push(n.fogExp2),r.push(n.sizeAttenuation),r.push(n.maxBones),r.push(n.morphTargetsCount),r.push(n.numDirLights),r.push(n.numPointLights),r.push(n.numSpotLights),r.push(n.numHemiLights),r.push(n.numRectAreaLights),r.push(n.numDirLightShadows),r.push(n.numPointLightShadows),r.push(n.numSpotLightShadows),r.push(n.shadowMapType),r.push(n.toneMapping),r.push(n.numClippingPlanes),r.push(n.numClipIntersection),r.push(n.format),r.push(n.specularColorMapEncoding),r.push(n.sheenColorMapEncoding),a=l,s=i,o.disableAll(),s.isWebGL2&&o.enable(0),s.supportsVertexTextures&&o.enable(1),s.instancing&&o.enable(2),s.instancingColor&&o.enable(3),s.map&&o.enable(4),s.matcap&&o.enable(5),s.envMap&&o.enable(6),s.envMapCubeUV&&o.enable(7),s.lightMap&&o.enable(8),s.aoMap&&o.enable(9),s.emissiveMap&&o.enable(10),s.bumpMap&&o.enable(11),s.normalMap&&o.enable(12),s.objectSpaceNormalMap&&o.enable(13),s.tangentSpaceNormalMap&&o.enable(14),s.clearcoat&&o.enable(15),s.clearcoatMap&&o.enable(16),s.clearcoatRoughnessMap&&o.enable(17),s.clearcoatNormalMap&&o.enable(18),s.displacementMap&&o.enable(19),s.specularMap&&o.enable(20),s.roughnessMap&&o.enable(21),s.metalnessMap&&o.enable(22),s.gradientMap&&o.enable(23),s.alphaMap&&o.enable(24),s.alphaTest&&o.enable(25),s.vertexColors&&o.enable(26),s.vertexAlphas&&o.enable(27),s.vertexUvs&&o.enable(28),s.vertexTangents&&o.enable(29),s.uvsVertexOnly&&o.enable(30),s.fog&&o.enable(31),a.push(o.mask),o.disableAll(),s.useFog&&o.enable(0),s.flatShading&&o.enable(1),s.logarithmicDepthBuffer&&o.enable(2),s.skinning&&o.enable(3),s.useVertexTexture&&o.enable(4),s.morphTargets&&o.enable(5),s.morphNormals&&o.enable(6),s.premultipliedAlpha&&o.enable(7),s.shadowMapEnabled&&o.enable(8),s.physicallyCorrectLights&&o.enable(9),s.doubleSided&&o.enable(10),s.flipSided&&o.enable(11),s.depthPacking&&o.enable(12),s.dithering&&o.enable(13),s.specularIntensityMap&&o.enable(14),s.specularColorMap&&o.enable(15),s.transmission&&o.enable(16),s.transmissionMap&&o.enable(17),s.thicknessMap&&o.enable(18),s.sheen&&o.enable(19),s.sheenColorMap&&o.enable(20),s.sheenRoughnessMap&&o.enable(21),a.push(o.mask),l.push(e.outputEncoding)),l.push(i.customProgramCacheKey),l.join()},getUniforms:function e(t){let i=g[t.type],r;if(i){let n=t7[i];r=tI.clone(n.uniforms)}else r=t.uniforms;return r},acquireProgram:function t(i,r){let n;for(let s=0,o=h.length;s<o;s++){let l=h[s];if(l.cacheKey===r){n=l,++n.usedTimes;break}}return void 0===n&&(n=new rG(e,r,i,a),h.push(n)),n},releaseProgram:function e(t){if(0==--t.usedTimes){let i=h.indexOf(t);h[i]=h[h.length-1],h.pop(),t.destroy()}},releaseShaderCache:function e(t){l.remove(t)},programs:h,dispose:function e(){l.dispose()}}}function r3(){let e=new WeakMap;return{get:function t(i){let r=e.get(i);return void 0===r&&(r={},e.set(i,r)),r},remove:function t(i){e.delete(i)},update:function t(i,r,n){e.get(i)[r]=n},dispose:function t(){e=new WeakMap}}}function r6(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function r4(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function rX(){let e=[],t=0,i=[],r=[],n=[];function a(i,r,n,a,s,o){let l=e[t];return void 0===l?(l={id:i.id,object:i,geometry:r,material:n,groupOrder:a,renderOrder:i.renderOrder,z:s,group:o},e[t]=l):(l.id=i.id,l.object=i,l.geometry=r,l.material=n,l.groupOrder=a,l.renderOrder=i.renderOrder,l.z=s,l.group=o),t++,l}return{opaque:i,transmissive:r,transparent:n,init:function e(){t=0,i.length=0,r.length=0,n.length=0},push:function e(t,s,o,l,h,u){let c=a(t,s,o,l,h,u);o.transmission>0?r.push(c):!0===o.transparent?n.push(c):i.push(c)},unshift:function e(t,s,o,l,h,u){let c=a(t,s,o,l,h,u);o.transmission>0?r.unshift(c):!0===o.transparent?n.unshift(c):i.unshift(c)},finish:function i(){for(let r=t,n=e.length;r<n;r++){let a=e[r];if(null===a.id)break;a.id=null,a.object=null,a.geometry=null,a.material=null,a.group=null}},sort:function e(t,a){i.length>1&&i.sort(t||r6),r.length>1&&r.sort(a||r4),n.length>1&&n.sort(a||r4)}}}function rj(){let e=new WeakMap;return{get:function t(i,r){let n;return!1===e.has(i)?(n=new rX,e.set(i,[n])):r>=e.get(i).length?(n=new rX,e.get(i).push(n)):n=e.get(i)[r],n},dispose:function t(){e=new WeakMap}}}function r5(){let e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let i;switch(t.type){case"DirectionalLight":i={direction:new I,color:new e7};break;case"SpotLight":i={position:new I,direction:new I,color:new e7,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":i={position:new I,color:new e7,distance:0,decay:0};break;case"HemisphereLight":i={direction:new I,skyColor:new e7,groundColor:new e7};break;case"RectAreaLight":i={color:new e7,position:new I,halfWidth:new I,halfHeight:new I}}return e[t.id]=i,i}}}let r7=0;function rq(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function rY(e,t){let i=new r5,r=function e(){let t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let i;switch(e.type){case"DirectionalLight":case"SpotLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new x};break;case"PointLight":i={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new x,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=i,i}}}(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let a=0;a<9;a++)n.probe.push(new I);let s=new I,o=new ec,l=new ec;return{setup:function a(s,o){let l=0,h=0,u=0;for(let c=0;c<9;c++)n.probe[c].set(0,0,0);let d=0,p=0,m=0,f=0,g=0,$=0,x=0,v=0;s.sort(rq);let y=!0!==o?Math.PI:1;for(let b=0,w=s.length;b<w;b++){let _=s[b],E=_.color,T=_.intensity,S=_.distance,M=_.shadow&&_.shadow.map?_.shadow.map.texture:null;if(_.isAmbientLight)l+=E.r*T*y,h+=E.g*T*y,u+=E.b*T*y;else if(_.isLightProbe)for(let A=0;A<9;A++)n.probe[A].addScaledVector(_.sh.coefficients[A],T);else if(_.isDirectionalLight){let R=i.get(_);if(R.color.copy(_.color).multiplyScalar(_.intensity*y),_.castShadow){let L=_.shadow,C=r.get(_);C.shadowBias=L.bias,C.shadowNormalBias=L.normalBias,C.shadowRadius=L.radius,C.shadowMapSize=L.mapSize,n.directionalShadow[d]=C,n.directionalShadowMap[d]=M,n.directionalShadowMatrix[d]=_.shadow.matrix,$++}n.directional[d]=R,d++}else if(_.isSpotLight){let P=i.get(_);if(P.position.setFromMatrixPosition(_.matrixWorld),P.color.copy(E).multiplyScalar(T*y),P.distance=S,P.coneCos=Math.cos(_.angle),P.penumbraCos=Math.cos(_.angle*(1-_.penumbra)),P.decay=_.decay,_.castShadow){let D=_.shadow,I=r.get(_);I.shadowBias=D.bias,I.shadowNormalBias=D.normalBias,I.shadowRadius=D.radius,I.shadowMapSize=D.mapSize,n.spotShadow[m]=I,n.spotShadowMap[m]=M,n.spotShadowMatrix[m]=_.shadow.matrix,v++}n.spot[m]=P,m++}else if(_.isRectAreaLight){let F=i.get(_);F.color.copy(E).multiplyScalar(T),F.halfWidth.set(.5*_.width,0,0),F.halfHeight.set(0,.5*_.height,0),n.rectArea[f]=F,f++}else if(_.isPointLight){let N=i.get(_);if(N.color.copy(_.color).multiplyScalar(_.intensity*y),N.distance=_.distance,N.decay=_.decay,_.castShadow){let U=_.shadow,B=r.get(_);B.shadowBias=U.bias,B.shadowNormalBias=U.normalBias,B.shadowRadius=U.radius,B.shadowMapSize=U.mapSize,B.shadowCameraNear=U.camera.near,B.shadowCameraFar=U.camera.far,n.pointShadow[p]=B,n.pointShadowMap[p]=M,n.pointShadowMatrix[p]=_.shadow.matrix,x++}n.point[p]=N,p++}else if(_.isHemisphereLight){let O=i.get(_);O.skyColor.copy(_.color).multiplyScalar(T*y),O.groundColor.copy(_.groundColor).multiplyScalar(T*y),n.hemi[g]=O,g++}}f>0&&(t.isWebGL2?(n.rectAreaLTC1=t5.LTC_FLOAT_1,n.rectAreaLTC2=t5.LTC_FLOAT_2):!0===e.has("OES_texture_float_linear")?(n.rectAreaLTC1=t5.LTC_FLOAT_1,n.rectAreaLTC2=t5.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(n.rectAreaLTC1=t5.LTC_HALF_1,n.rectAreaLTC2=t5.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),n.ambient[0]=l,n.ambient[1]=h,n.ambient[2]=u;let z=n.hash;(z.directionalLength!==d||z.pointLength!==p||z.spotLength!==m||z.rectAreaLength!==f||z.hemiLength!==g||z.numDirectionalShadows!==$||z.numPointShadows!==x||z.numSpotShadows!==v)&&(n.directional.length=d,n.spot.length=m,n.rectArea.length=f,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=$,n.directionalShadowMap.length=$,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=v,n.spotShadowMap.length=v,n.directionalShadowMatrix.length=$,n.pointShadowMatrix.length=x,n.spotShadowMatrix.length=v,z.directionalLength=d,z.pointLength=p,z.spotLength=m,z.rectAreaLength=f,z.hemiLength=g,z.numDirectionalShadows=$,z.numPointShadows=x,z.numSpotShadows=v,n.version=r7++)},setupView:function e(t,i){let r=0,a=0,h=0,u=0,c=0,d=i.matrixWorldInverse;for(let p=0,m=t.length;p<m;p++){let f=t[p];if(f.isDirectionalLight){let g=n.directional[r];g.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),g.direction.sub(s),g.direction.transformDirection(d),r++}else if(f.isSpotLight){let $=n.spot[h];$.position.setFromMatrixPosition(f.matrixWorld),$.position.applyMatrix4(d),$.direction.setFromMatrixPosition(f.matrixWorld),s.setFromMatrixPosition(f.target.matrixWorld),$.direction.sub(s),$.direction.transformDirection(d),h++}else if(f.isRectAreaLight){let x=n.rectArea[u];x.position.setFromMatrixPosition(f.matrixWorld),x.position.applyMatrix4(d),l.identity(),o.copy(f.matrixWorld),o.premultiply(d),l.extractRotation(o),x.halfWidth.set(.5*f.width,0,0),x.halfHeight.set(0,.5*f.height,0),x.halfWidth.applyMatrix4(l),x.halfHeight.applyMatrix4(l),u++}else if(f.isPointLight){let v=n.point[a];v.position.setFromMatrixPosition(f.matrixWorld),v.position.applyMatrix4(d),a++}else if(f.isHemisphereLight){let y=n.hemi[c];y.direction.setFromMatrixPosition(f.matrixWorld),y.direction.transformDirection(d),y.direction.normalize(),c++}}},state:n}}function rZ(e,t){let i=new rY(e,t),r=[],n=[];return{init:function e(){r.length=0,n.length=0},state:{lightsArray:r,shadowsArray:n,lights:i},setupLights:function e(t){i.setup(r,t)},setupLightsView:function e(t){i.setupView(r,t)},pushLight:function e(t){r.push(t)},pushShadow:function e(t){n.push(t)}}}function rJ(e,t){let i=new WeakMap;return{get:function r(n,a=0){let s;return!1===i.has(n)?(s=new rZ(e,t),i.set(n,[s])):a>=i.get(n).length?(s=new rZ(e,t),i.get(n).push(s)):s=i.get(n)[a],s},dispose:function e(){i=new WeakMap}}}class rK extends eW{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}rK.prototype.isMeshDepthMaterial=!0;class rQ extends eW{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new I,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function r9(e,t,i){let r=new t3,n=new x,a=new x,s=new R,o=new rK({depthPacking:3201}),l=new rQ,h={},u=i.maxTextureSize,c={0:1,1:0,2:2},d=new tF({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new x},radius:{value:4}},vertexShader:"void main() {\n	gl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=d.clone();p.defines.HORIZONTAL_PASS=1;let m=new tm;m.setAttribute("position",new eJ(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let f=new tC(m,d),g=this;function $(i,r){let n=t.update(f);d.defines.VSM_SAMPLES!==i.blurSamples&&(d.defines.VSM_SAMPLES=i.blurSamples,p.defines.VSM_SAMPLES=i.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=i.map.texture,d.uniforms.resolution.value=i.mapSize,d.uniforms.radius.value=i.radius,e.setRenderTarget(i.mapPass),e.clear(),e.renderBufferDirect(r,null,n,d,f,null),p.uniforms.shadow_pass.value=i.mapPass.texture,p.uniforms.resolution.value=i.mapSize,p.uniforms.radius.value=i.radius,e.setRenderTarget(i.map),e.clear(),e.renderBufferDirect(r,null,n,p,f,null)}function v(t,i,r,n,a,s,u){let d=null,p=!0===n.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(d=void 0!==p?p:!0===n.isPointLight?l:o,e.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length||r.displacementMap&&0!==r.displacementScale||r.alphaMap&&r.alphaTest>0){let m=d.uuid,f=r.uuid,g=h[m];void 0===g&&(g={},h[m]=g);let $=g[f];void 0===$&&($=d.clone(),g[f]=$),d=$}return d.visible=r.visible,d.wireframe=r.wireframe,3===u?d.side=null!==r.shadowSide?r.shadowSide:r.side:d.side=null!==r.shadowSide?r.shadowSide:c[r.side],d.alphaMap=r.alphaMap,d.alphaTest=r.alphaTest,d.clipShadows=r.clipShadows,d.clippingPlanes=r.clippingPlanes,d.clipIntersection=r.clipIntersection,d.displacementMap=r.displacementMap,d.displacementScale=r.displacementScale,d.displacementBias=r.displacementBias,d.wireframeLinewidth=r.wireframeLinewidth,d.linewidth=r.linewidth,!0===n.isPointLight&&!0===d.isMeshDistanceMaterial&&(d.referencePosition.setFromMatrixPosition(n.matrixWorld),d.nearDistance=a,d.farDistance=s),d}function y(i,n,a,s,o){if(!1===i.visible)return;let l=i.layers.test(n.layers);if(l&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&3===o)&&(!i.frustumCulled||r.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,i.matrixWorld);let h=t.update(i),u=i.material;if(Array.isArray(u)){let c=h.groups;for(let d=0,p=c.length;d<p;d++){let m=c[d],f=u[m.materialIndex];if(f&&f.visible){let g=v(i,h,f,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,g,i,m)}}}else if(u.visible){let $=v(i,h,u,s,a.near,a.far,o);e.renderBufferDirect(a,null,h,$,i,null)}}let x=i.children;for(let b=0,w=x.length;b<w;b++)y(x[b],n,a,s,o)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,i,o){if(!1===g.enabled||!1===g.autoUpdate&&!1===g.needsUpdate||0===t.length)return;let l=e.getRenderTarget(),h=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let p=0,m=t.length;p<m;p++){let f=t[p],x=f.shadow;if(void 0===x){console.warn("THREE.WebGLShadowMap:",f,"has no shadow.");continue}if(!1===x.autoUpdate&&!1===x.needsUpdate)continue;n.copy(x.mapSize);let v=x.getFrameExtents();if(n.multiply(v),a.copy(x.mapSize),(n.x>u||n.y>u)&&(n.x>u&&(a.x=Math.floor(u/v.x),n.x=a.x*v.x,x.mapSize.x=a.x),n.y>u&&(a.y=Math.floor(u/v.y),n.y=a.y*v.y,x.mapSize.y=a.y)),null===x.map&&!x.isPointLightShadow&&3===this.type){let b={minFilter:1006,magFilter:1006,format:1023};x.map=new L(n.x,n.y,b),x.map.texture.name=f.name+".shadowMap",x.mapPass=new L(n.x,n.y,b),x.camera.updateProjectionMatrix()}if(null===x.map){let w={minFilter:1003,magFilter:1003,format:1023};x.map=new L(n.x,n.y,w),x.map.texture.name=f.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();let _=x.getViewportCount();for(let E=0;E<_;E++){let T=x.getViewport(E);s.set(a.x*T.x,a.y*T.y,a.x*T.z,a.y*T.w),d.viewport(s),x.updateMatrices(f,E),r=x.getFrustum(),y(i,o,x.camera,f,this.type)}x.isPointLightShadow||3!==this.type||$(x,o),x.needsUpdate=!1}g.needsUpdate=!1,e.setRenderTarget(l,h,c)}}function ne(e,t,i){let r=i.isWebGL2,n=new function t(){let i=!1,r=new R,n=null,a=new R(0,0,0,0);return{setMask:function(t){n===t||i||(e.colorMask(t,t,t,t),n=t)},setLocked:function(e){i=e},setClear:function(t,i,n,s,o){!0===o&&(t*=s,i*=s,n*=s),r.set(t,i,n,s),!1===a.equals(r)&&(e.clearColor(t,i,n,s),a.copy(r))},reset:function(){i=!1,n=null,a.set(-1,0,0,0)}}},a=new function t(){let i=!1,r=null,n=null,a=null;return{setTest:function(t){t?U(e.DEPTH_TEST):B(e.DEPTH_TEST)},setMask:function(t){r===t||i||(e.depthMask(t),r=t)},setFunc:function(t){if(n!==t){if(t)switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}else e.depthFunc(e.LEQUAL);n=t}},setLocked:function(e){i=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){i=!1,r=null,n=null,a=null}}},s=new function t(){let i=!1,r=null,n=null,a=null,s=null,o=null,l=null,h=null,u=null;return{setTest:function(t){i||(t?U(e.STENCIL_TEST):B(e.STENCIL_TEST))},setMask:function(t){r===t||i||(e.stencilMask(t),r=t)},setFunc:function(t,i,r){(n!==t||a!==i||s!==r)&&(e.stencilFunc(t,i,r),n=t,a=i,s=r)},setOp:function(t,i,r){(o!==t||l!==i||h!==r)&&(e.stencilOp(t,i,r),o=t,l=i,h=r)},setLocked:function(e){i=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){i=!1,r=null,n=null,a=null,s=null,o=null,l=null,h=null,u=null}}},o={},l={},h=null,u=!1,c=null,d=null,p=null,m=null,f=null,g=null,$=null,x=!1,v=null,y=null,b=null,w=null,_=null,E=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),T=!1,S=0,M=e.getParameter(e.VERSION);-1!==M.indexOf("WebGL")?T=(S=parseFloat(/^WebGL (\d)/.exec(M)[1]))>=1:-1!==M.indexOf("OpenGL ES")&&(T=(S=parseFloat(/^OpenGL ES (\d)/.exec(M)[1]))>=2);let A=null,L={},C=e.getParameter(e.SCISSOR_BOX),P=e.getParameter(e.VIEWPORT),D=new R().fromArray(C),I=new R().fromArray(P);function F(t,i,r){let n=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let s=0;s<r;s++)e.texImage2D(i+s,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,n);return a}let N={};function U(t){!0!==o[t]&&(e.enable(t),o[t]=!0)}function B(t){!1!==o[t]&&(e.disable(t),o[t]=!1)}N[e.TEXTURE_2D]=F(e.TEXTURE_2D,e.TEXTURE_2D,1),N[e.TEXTURE_CUBE_MAP]=F(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),n.setClear(0,0,0,1),a.setClear(1),s.setClear(0),U(e.DEPTH_TEST),a.setFunc(3),V(!1),k(1),U(e.CULL_FACE),G(0);let O={100:e.FUNC_ADD,101:e.FUNC_SUBTRACT,102:e.FUNC_REVERSE_SUBTRACT};if(r)O[103]=e.MIN,O[104]=e.MAX;else{let z=t.get("EXT_blend_minmax");null!==z&&(O[103]=z.MIN_EXT,O[104]=z.MAX_EXT)}let H={200:e.ZERO,201:e.ONE,202:e.SRC_COLOR,204:e.SRC_ALPHA,210:e.SRC_ALPHA_SATURATE,208:e.DST_COLOR,206:e.DST_ALPHA,203:e.ONE_MINUS_SRC_COLOR,205:e.ONE_MINUS_SRC_ALPHA,209:e.ONE_MINUS_DST_COLOR,207:e.ONE_MINUS_DST_ALPHA};function G(t,i,r,n,a,s,o,l){if(0===t){!0===u&&(B(e.BLEND),u=!1);return}if(!1===u&&(U(e.BLEND),u=!0),5!==t){if(t!==c||l!==x){if((100!==d||100!==f)&&(e.blendEquation(e.FUNC_ADD),d=100,f=100),l)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}p=null,m=null,g=null,$=null,c=t,x=l}return}a=a||i,s=s||r,o=o||n,(i!==d||a!==f)&&(e.blendEquationSeparate(O[i],O[a]),d=i,f=a),(r!==p||n!==m||s!==g||o!==$)&&(e.blendFuncSeparate(H[r],H[n],H[s],H[o]),p=r,m=n,g=s,$=o),c=t,x=null}function V(t){v!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),v=t)}function k(t){0!==t?(U(e.CULL_FACE),t!==y&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):B(e.CULL_FACE),y=t}function W(t,i,r){t?(U(e.POLYGON_OFFSET_FILL),(w!==i||_!==r)&&(e.polygonOffset(i,r),w=i,_=r)):B(e.POLYGON_OFFSET_FILL)}function X(t){void 0===t&&(t=e.TEXTURE0+E-1),A!==t&&(e.activeTexture(t),A=t)}return{buffers:{color:n,depth:a,stencil:s},enable:U,disable:B,bindFramebuffer:function t(i,n){return l[i]!==n&&(e.bindFramebuffer(i,n),l[i]=n,r&&(i===e.DRAW_FRAMEBUFFER&&(l[e.FRAMEBUFFER]=n),i===e.FRAMEBUFFER&&(l[e.DRAW_FRAMEBUFFER]=n)),!0)},useProgram:function t(i){return h!==i&&(e.useProgram(i),h=i,!0)},setBlending:G,setMaterial:function t(i,r){2===i.side?B(e.CULL_FACE):U(e.CULL_FACE);let o=1===i.side;r&&(o=!o),V(o),1===i.blending&&!1===i.transparent?G(0):G(i.blending,i.blendEquation,i.blendSrc,i.blendDst,i.blendEquationAlpha,i.blendSrcAlpha,i.blendDstAlpha,i.premultipliedAlpha),a.setFunc(i.depthFunc),a.setTest(i.depthTest),a.setMask(i.depthWrite),n.setMask(i.colorWrite);let l=i.stencilWrite;s.setTest(l),l&&(s.setMask(i.stencilWriteMask),s.setFunc(i.stencilFunc,i.stencilRef,i.stencilFuncMask),s.setOp(i.stencilFail,i.stencilZFail,i.stencilZPass)),W(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits),!0===i.alphaToCoverage?U(e.SAMPLE_ALPHA_TO_COVERAGE):B(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:V,setCullFace:k,setLineWidth:function t(i){i!==b&&(T&&e.lineWidth(i),b=i)},setPolygonOffset:W,setScissorTest:function t(i){i?U(e.SCISSOR_TEST):B(e.SCISSOR_TEST)},activeTexture:X,bindTexture:function t(i,r){null===A&&X();let n=L[A];void 0===n&&(n={type:void 0,texture:void 0},L[A]=n),(n.type!==i||n.texture!==r)&&(e.bindTexture(i,r||N[i]),n.type=i,n.texture=r)},unbindTexture:function t(){let i=L[A];void 0!==i&&void 0!==i.type&&(e.bindTexture(i.type,null),i.type=void 0,i.texture=void 0)},compressedTexImage2D:function t(){try{e.compressedTexImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texImage2D:function t(){try{e.texImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texImage3D:function t(){try{e.texImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texStorage2D:function t(){try{e.texStorage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texStorage3D:function t(){try{e.texStorage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texSubImage2D:function t(){try{e.texSubImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},texSubImage3D:function t(){try{e.texSubImage3D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},compressedTexSubImage2D:function t(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(i){console.error("THREE.WebGLState:",i)}},scissor:function t(i){!1===D.equals(i)&&(e.scissor(i.x,i.y,i.z,i.w),D.copy(i))},viewport:function t(i){!1===I.equals(i)&&(e.viewport(i.x,i.y,i.z,i.w),I.copy(i))},reset:function t(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===r&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),o={},A=null,L={},l={},h=null,u=!1,c=null,d=null,p=null,m=null,f=null,g=null,$=null,x=!1,v=null,y=null,b=null,w=null,_=null,D.set(0,0,e.canvas.width,e.canvas.height),I.set(0,0,e.canvas.width,e.canvas.height),n.reset(),a.reset(),s.reset()}}}function nt(e,t,i,r,n,a,s){let o=n.isWebGL2,l=n.maxTextures,h=n.maxCubemapSize,u=n.maxTextureSize,c=n.maxSamples,d=t.has("WEBGL_multisampled_render_to_texture"),p=d?t.get("WEBGL_multisampled_render_to_texture"):void 0,f=new WeakMap,$,x=!1;try{x="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(v){}function y(e,t){return x?new OffscreenCanvas(e,t):_("canvas")}function b(e,t,i,r){let n=1;if((e.width>r||e.height>r)&&(n=r/Math.max(e.width,e.height)),n<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){let a=t?g:Math.floor,s=a(n*e.width),o=a(n*e.height);void 0===$&&($=y(s,o));let l=i?y(s,o):$;l.width=s,l.height=o;let h=l.getContext("2d");return h.drawImage(e,0,0,s,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+s+"x"+o+")."),l}"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+").")}return e}function w(e){return m(e.width)&&m(e.height)}function E(e,t){return e.generateMipmaps&&t&&1003!==e.minFilter&&1006!==e.minFilter}function T(t){e.generateMipmap(t)}function S(i,r,n,a){if(!1===o)return r;if(null!==i){if(void 0!==e[i])return e[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let s=r;return r===e.RED&&(n===e.FLOAT&&(s=e.R32F),n===e.HALF_FLOAT&&(s=e.R16F),n===e.UNSIGNED_BYTE&&(s=e.R8)),r===e.RGB&&(n===e.FLOAT&&(s=e.RGB32F),n===e.HALF_FLOAT&&(s=e.RGB16F),n===e.UNSIGNED_BYTE&&(s=e.RGB8)),r===e.RGBA&&(n===e.FLOAT&&(s=e.RGBA32F),n===e.HALF_FLOAT&&(s=e.RGBA16F),n===e.UNSIGNED_BYTE&&(s=3001===a?e.SRGB8_ALPHA8:e.RGBA8)),(s===e.R16F||s===e.R32F||s===e.RGBA16F||s===e.RGBA32F)&&t.get("EXT_color_buffer_float"),s}function M(e,t,i){return!0===E(e,i)||e.isFramebufferTexture&&1003!==e.minFilter&&1006!==e.minFilter?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function A(t){return 1003===t||1004===t||1005===t?e.NEAREST:e.LINEAR}function R(t){let i=t.target;i.removeEventListener("dispose",R),function t(i){let n=r.get(i);void 0!==n.__webglInit&&(e.deleteTexture(n.__webglTexture),r.remove(i))}(i),i.isVideoTexture&&f.delete(i),s.memory.textures--}function L(t){let i=t.target;i.removeEventListener("dispose",L),function t(i){let n=i.texture,a=r.get(i),o=r.get(n);if(i){if(void 0!==o.__webglTexture&&(e.deleteTexture(o.__webglTexture),s.memory.textures--),i.depthTexture&&i.depthTexture.dispose(),i.isWebGLCubeRenderTarget)for(let l=0;l<6;l++)e.deleteFramebuffer(a.__webglFramebuffer[l]),a.__webglDepthbuffer&&e.deleteRenderbuffer(a.__webglDepthbuffer[l]);else e.deleteFramebuffer(a.__webglFramebuffer),a.__webglDepthbuffer&&e.deleteRenderbuffer(a.__webglDepthbuffer),a.__webglMultisampledFramebuffer&&e.deleteFramebuffer(a.__webglMultisampledFramebuffer),a.__webglColorRenderbuffer&&e.deleteRenderbuffer(a.__webglColorRenderbuffer),a.__webglDepthRenderbuffer&&e.deleteRenderbuffer(a.__webglDepthRenderbuffer);if(i.isWebGLMultipleRenderTargets)for(let h=0,u=n.length;h<u;h++){let c=r.get(n[h]);c.__webglTexture&&(e.deleteTexture(c.__webglTexture),s.memory.textures--),r.remove(n[h])}r.remove(n),r.remove(i)}}(i)}let C=0;function P(t,n){let a=r.get(t);if(t.isVideoTexture&&function e(t){let i=s.render.frame;f.get(t)!==i&&(f.set(t,i),t.update())}(t),t.version>0&&a.__version!==t.version){let o=t.image;if(void 0===o)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(!1===o.complete)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{B(a,t,n);return}}i.activeTexture(e.TEXTURE0+n),i.bindTexture(e.TEXTURE_2D,a.__webglTexture)}function D(t,n){let s=r.get(t);if(t.version>0&&s.__version!==t.version){!function t(r,n,s){if(6!==n.image.length)return;U(r,n),i.activeTexture(e.TEXTURE0+s),i.bindTexture(e.TEXTURE_CUBE_MAP,r.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,n.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,n.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);let l=n&&(n.isCompressedTexture||n.image[0].isCompressedTexture),u=n.image[0]&&n.image[0].isDataTexture,c=[];for(let d=0;d<6;d++)l||u?c[d]=u?n.image[d].image:n.image[d]:c[d]=b(n.image[d],!1,!0,h);let p=c[0],m=w(p)||o,f=a.convert(n.format),g=a.convert(n.type),$=S(n.internalFormat,f,g,n.encoding),x=o&&!0!==n.isVideoTexture,v=void 0===r.__version,y=M(n,p,m);N(e.TEXTURE_CUBE_MAP,n,m);let _;if(l){x&&v&&i.texStorage2D(e.TEXTURE_CUBE_MAP,y,$,p.width,p.height);for(let A=0;A<6;A++){_=c[A].mipmaps;for(let R=0;R<_.length;R++){let L=_[R];1023!==n.format&&1022!==n.format?null!==f?x?i.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+A,R,0,0,L.width,L.height,f,L.data):i.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+A,R,$,L.width,L.height,0,L.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):x?i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+A,R,0,0,L.width,L.height,f,g,L.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+A,R,$,L.width,L.height,0,f,g,L.data)}}}else{_=n.mipmaps,x&&v&&(_.length>0&&y++,i.texStorage2D(e.TEXTURE_CUBE_MAP,y,$,c[0].width,c[0].height));for(let C=0;C<6;C++)if(u){x?i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,0,0,0,c[C].width,c[C].height,f,g,c[C].data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,0,$,c[C].width,c[C].height,0,f,g,c[C].data);for(let P=0;P<_.length;P++){let D=_[P],I=D.image[C].image;x?i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,P+1,0,0,I.width,I.height,f,g,I.data):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,P+1,$,I.width,I.height,0,f,g,I.data)}}else{x?i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,0,0,0,f,g,c[C]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,0,$,f,g,c[C]);for(let F=0;F<_.length;F++){let B=_[F];x?i.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,F+1,0,0,f,g,B.image[C]):i.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+C,F+1,$,f,g,B.image[C])}}}E(n,m)&&T(e.TEXTURE_CUBE_MAP),r.__version=n.version,n.onUpdate&&n.onUpdate(n)}(s,t,n);return}i.activeTexture(e.TEXTURE0+n),i.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture)}let I={1e3:e.REPEAT,1001:e.CLAMP_TO_EDGE,1002:e.MIRRORED_REPEAT},F={1003:e.NEAREST,1004:e.NEAREST_MIPMAP_NEAREST,1005:e.NEAREST_MIPMAP_LINEAR,1006:e.LINEAR,1007:e.LINEAR_MIPMAP_NEAREST,1008:e.LINEAR_MIPMAP_LINEAR};function N(i,a,s){if(s?(e.texParameteri(i,e.TEXTURE_WRAP_S,I[a.wrapS]),e.texParameteri(i,e.TEXTURE_WRAP_T,I[a.wrapT]),(i===e.TEXTURE_3D||i===e.TEXTURE_2D_ARRAY)&&e.texParameteri(i,e.TEXTURE_WRAP_R,I[a.wrapR]),e.texParameteri(i,e.TEXTURE_MAG_FILTER,F[a.magFilter]),e.texParameteri(i,e.TEXTURE_MIN_FILTER,F[a.minFilter])):(e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(i===e.TEXTURE_3D||i===e.TEXTURE_2D_ARRAY)&&e.texParameteri(i,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),(1001!==a.wrapS||1001!==a.wrapT)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(i,e.TEXTURE_MAG_FILTER,A(a.magFilter)),e.texParameteri(i,e.TEXTURE_MIN_FILTER,A(a.minFilter)),1003!==a.minFilter&&1006!==a.minFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){let l=t.get("EXT_texture_filter_anisotropic");(1015!==a.type||!1!==t.has("OES_texture_float_linear"))&&(!1!==o||1016!==a.type||!1!==t.has("OES_texture_half_float_linear"))&&(a.anisotropy>1||r.get(a).__currentAnisotropy)&&(e.texParameterf(i,l.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,n.getMaxAnisotropy())),r.get(a).__currentAnisotropy=a.anisotropy)}}function U(t,i){void 0===t.__webglInit&&(t.__webglInit=!0,i.addEventListener("dispose",R),t.__webglTexture=e.createTexture(),s.memory.textures++)}function B(t,r,n){var s;let l=e.TEXTURE_2D;r.isDataTexture2DArray&&(l=e.TEXTURE_2D_ARRAY),r.isDataTexture3D&&(l=e.TEXTURE_3D),U(t,r),i.activeTexture(e.TEXTURE0+n),i.bindTexture(l,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);let h=(s=r,!o&&(1001!==s.wrapS||1001!==s.wrapT||1003!==s.minFilter&&1006!==s.minFilter)&&!1===w(r.image)),c=b(r.image,h,!1,u),d=w(c)||o,p=a.convert(r.format),m=a.convert(r.type),f=S(r.internalFormat,p,m,r.encoding);N(l,r,d);let g,$=r.mipmaps,x=o&&!0!==r.isVideoTexture,v=void 0===t.__version,y=M(r,c,d);if(r.isDepthTexture)f=e.DEPTH_COMPONENT,o?f=1015===r.type?e.DEPTH_COMPONENT32F:1014===r.type?e.DEPTH_COMPONENT24:1020===r.type?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:1015===r.type&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),1026===r.format&&f===e.DEPTH_COMPONENT&&1012!==r.type&&1014!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=1012,m=a.convert(r.type)),1027===r.format&&f===e.DEPTH_COMPONENT&&(f=e.DEPTH_STENCIL,1020!==r.type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=1020,m=a.convert(r.type))),x&&v?i.texStorage2D(e.TEXTURE_2D,1,f,c.width,c.height):i.texImage2D(e.TEXTURE_2D,0,f,c.width,c.height,0,p,m,null);else if(r.isDataTexture){if($.length>0&&d){x&&v&&i.texStorage2D(e.TEXTURE_2D,y,f,$[0].width,$[0].height);for(let _=0,A=$.length;_<A;_++)g=$[_],x?i.texSubImage2D(e.TEXTURE_2D,0,0,0,g.width,g.height,p,m,g.data):i.texImage2D(e.TEXTURE_2D,_,f,g.width,g.height,0,p,m,g.data);r.generateMipmaps=!1}else x?(v&&i.texStorage2D(e.TEXTURE_2D,y,f,c.width,c.height),i.texSubImage2D(e.TEXTURE_2D,0,0,0,c.width,c.height,p,m,c.data)):i.texImage2D(e.TEXTURE_2D,0,f,c.width,c.height,0,p,m,c.data)}else if(r.isCompressedTexture){x&&v&&i.texStorage2D(e.TEXTURE_2D,y,f,$[0].width,$[0].height);for(let R=0,L=$.length;R<L;R++)g=$[R],1023!==r.format&&1022!==r.format?null!==p?x?i.compressedTexSubImage2D(e.TEXTURE_2D,R,0,0,g.width,g.height,p,g.data):i.compressedTexImage2D(e.TEXTURE_2D,R,f,g.width,g.height,0,g.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):x?i.texSubImage2D(e.TEXTURE_2D,R,0,0,g.width,g.height,p,m,g.data):i.texImage2D(e.TEXTURE_2D,R,f,g.width,g.height,0,p,m,g.data)}else if(r.isDataTexture2DArray)x?(v&&i.texStorage3D(e.TEXTURE_2D_ARRAY,y,f,c.width,c.height,c.depth),i.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,c.width,c.height,c.depth,p,m,c.data)):i.texImage3D(e.TEXTURE_2D_ARRAY,0,f,c.width,c.height,c.depth,0,p,m,c.data);else if(r.isDataTexture3D)x?(v&&i.texStorage3D(e.TEXTURE_3D,y,f,c.width,c.height,c.depth),i.texSubImage3D(e.TEXTURE_3D,0,0,0,0,c.width,c.height,c.depth,p,m,c.data)):i.texImage3D(e.TEXTURE_3D,0,f,c.width,c.height,c.depth,0,p,m,c.data);else if(r.isFramebufferTexture)x&&v?i.texStorage2D(e.TEXTURE_2D,y,f,c.width,c.height):i.texImage2D(e.TEXTURE_2D,0,f,c.width,c.height,0,p,m,null);else if($.length>0&&d){x&&v&&i.texStorage2D(e.TEXTURE_2D,y,f,$[0].width,$[0].height);for(let C=0,P=$.length;C<P;C++)g=$[C],x?i.texSubImage2D(e.TEXTURE_2D,C,0,0,p,m,g):i.texImage2D(e.TEXTURE_2D,C,f,p,m,g);r.generateMipmaps=!1}else x?(v&&i.texStorage2D(e.TEXTURE_2D,y,f,c.width,c.height),i.texSubImage2D(e.TEXTURE_2D,0,0,0,p,m,c)):i.texImage2D(e.TEXTURE_2D,0,f,p,m,c);E(r,d)&&T(l),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function O(t,n,s,o,l){let h=a.convert(s.format),u=a.convert(s.type),c=S(s.internalFormat,h,u,s.encoding),d=r.get(n);d.__hasExternalTextures||(l===e.TEXTURE_3D||l===e.TEXTURE_2D_ARRAY?i.texImage3D(l,0,c,n.width,n.height,n.depth,0,h,u,null):i.texImage2D(l,0,c,n.width,n.height,0,h,u,null)),i.bindFramebuffer(e.FRAMEBUFFER,t),n.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,l,r.get(s).__webglTexture,0,G(n)):e.framebufferTexture2D(e.FRAMEBUFFER,o,l,r.get(s).__webglTexture,0),i.bindFramebuffer(e.FRAMEBUFFER,null)}function z(t,i,r){if(e.bindRenderbuffer(e.RENDERBUFFER,t),i.depthBuffer&&!i.stencilBuffer){let n=e.DEPTH_COMPONENT16;if(r||i.useRenderToTexture){let s=i.depthTexture;s&&s.isDepthTexture&&(1015===s.type?n=e.DEPTH_COMPONENT32F:1014===s.type&&(n=e.DEPTH_COMPONENT24));let o=G(i);i.useRenderToTexture?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,o,n,i.width,i.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,o,n,i.width,i.height)}else e.renderbufferStorage(e.RENDERBUFFER,n,i.width,i.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(i.depthBuffer&&i.stencilBuffer){let l=G(i);r&&i.useRenderbuffer?e.renderbufferStorageMultisample(e.RENDERBUFFER,l,e.DEPTH24_STENCIL8,i.width,i.height):i.useRenderToTexture?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,l,e.DEPTH24_STENCIL8,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,i.width,i.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{let h=!0===i.isWebGLMultipleRenderTargets?i.texture[0]:i.texture,u=a.convert(h.format),c=a.convert(h.type),d=S(h.internalFormat,u,c,h.encoding),m=G(i);r&&i.useRenderbuffer?e.renderbufferStorageMultisample(e.RENDERBUFFER,m,d,i.width,i.height):i.useRenderToTexture?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,m,d,i.width,i.height):e.renderbufferStorage(e.RENDERBUFFER,d,i.width,i.height)}e.bindRenderbuffer(e.RENDERBUFFER,null)}function H(t){let n=r.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!n.__autoAllocateDepthBuffer){if(a)throw Error("target.depthTexture not supported in Cube render targets");!function t(n,a){let s=a&&a.isWebGLCubeRenderTarget;if(s)throw Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(e.FRAMEBUFFER,n),!(a.depthTexture&&a.depthTexture.isDepthTexture))throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(a.depthTexture).__webglTexture&&a.depthTexture.image.width===a.width&&a.depthTexture.image.height===a.height||(a.depthTexture.image.width=a.width,a.depthTexture.image.height=a.height,a.depthTexture.needsUpdate=!0),P(a.depthTexture,0);let o=r.get(a.depthTexture).__webglTexture,l=G(a);if(1026===a.depthTexture.format)a.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,o,0);else if(1027===a.depthTexture.format)a.useRenderToTexture?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0,l):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,o,0);else throw Error("Unknown depthTexture format")}(n.__webglFramebuffer,t)}else if(a){n.__webglDepthbuffer=[];for(let s=0;s<6;s++)i.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer[s]),n.__webglDepthbuffer[s]=e.createRenderbuffer(),z(n.__webglDepthbuffer[s],t,!1)}else i.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),z(n.__webglDepthbuffer,t,!1);i.bindFramebuffer(e.FRAMEBUFFER,null)}function G(e){return o&&(e.useRenderbuffer||e.useRenderToTexture)?Math.min(c,e.samples):0}let V=!1,k=!1;this.allocateTextureUnit=function e(){let t=C;return t>=l&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+l),C+=1,t},this.resetTextureUnits=function e(){C=0},this.setTexture2D=P,this.setTexture2DArray=function t(n,a){let s=r.get(n);if(n.version>0&&s.__version!==n.version){B(s,n,a);return}i.activeTexture(e.TEXTURE0+a),i.bindTexture(e.TEXTURE_2D_ARRAY,s.__webglTexture)},this.setTexture3D=function t(n,a){let s=r.get(n);if(n.version>0&&s.__version!==n.version){B(s,n,a);return}i.activeTexture(e.TEXTURE0+a),i.bindTexture(e.TEXTURE_3D,s.__webglTexture)},this.setTextureCube=D,this.rebindTextures=function t(i,n,a){let s=r.get(i);void 0!==n&&O(s.__webglFramebuffer,i,i.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),void 0!==a&&H(i)},this.setupRenderTarget=function t(l){let h=l.texture,u=r.get(l),c=r.get(h);l.addEventListener("dispose",L),!0!==l.isWebGLMultipleRenderTargets&&(void 0===c.__webglTexture&&(c.__webglTexture=e.createTexture()),c.__version=h.version,s.memory.textures++);let d=!0===l.isWebGLCubeRenderTarget,p=!0===l.isWebGLMultipleRenderTargets,m=h.isDataTexture3D||h.isDataTexture2DArray,f=w(l)||o;if(o&&1022===h.format&&(1015===h.type||1016===h.type)&&(h.format=1023,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),d){u.__webglFramebuffer=[];for(let g=0;g<6;g++)u.__webglFramebuffer[g]=e.createFramebuffer()}else if(u.__webglFramebuffer=e.createFramebuffer(),p){if(n.drawBuffers){let $=l.texture;for(let x=0,v=$.length;x<v;x++){let y=r.get($[x]);void 0===y.__webglTexture&&(y.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.")}else if(l.useRenderbuffer){if(o){u.__webglMultisampledFramebuffer=e.createFramebuffer(),u.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,u.__webglColorRenderbuffer);let b=a.convert(h.format),_=a.convert(h.type),M=S(h.internalFormat,b,_,h.encoding),A=G(l);e.renderbufferStorageMultisample(e.RENDERBUFFER,A,M,l.width,l.height),i.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer),e.bindRenderbuffer(e.RENDERBUFFER,null),l.depthBuffer&&(u.__webglDepthRenderbuffer=e.createRenderbuffer(),z(u.__webglDepthRenderbuffer,l,!0)),i.bindFramebuffer(e.FRAMEBUFFER,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}if(d){i.bindTexture(e.TEXTURE_CUBE_MAP,c.__webglTexture),N(e.TEXTURE_CUBE_MAP,h,f);for(let R=0;R<6;R++)O(u.__webglFramebuffer[R],l,h,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+R);E(h,f)&&T(e.TEXTURE_CUBE_MAP),i.unbindTexture()}else if(p){let C=l.texture;for(let P=0,D=C.length;P<D;P++){let I=C[P],F=r.get(I);i.bindTexture(e.TEXTURE_2D,F.__webglTexture),N(e.TEXTURE_2D,I,f),O(u.__webglFramebuffer,l,I,e.COLOR_ATTACHMENT0+P,e.TEXTURE_2D),E(I,f)&&T(e.TEXTURE_2D)}i.unbindTexture()}else{let U=e.TEXTURE_2D;if(m){if(o){let B=h.isDataTexture3D;U=B?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY}else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")}i.bindTexture(U,c.__webglTexture),N(U,h,f),O(u.__webglFramebuffer,l,h,e.COLOR_ATTACHMENT0,U),E(h,f)&&T(U),i.unbindTexture()}l.depthBuffer&&H(l)},this.updateRenderTargetMipmap=function t(n){let a=w(n)||o,s=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let l=0,h=s.length;l<h;l++){let u=s[l];if(E(u,a)){let c=n.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,d=r.get(u).__webglTexture;i.bindTexture(c,d),T(c),i.unbindTexture()}}},this.updateMultisampleRenderTarget=function t(n){if(n.useRenderbuffer){if(o){let a=n.width,s=n.height,l=e.COLOR_BUFFER_BIT,h=[e.COLOR_ATTACHMENT0],u=n.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT;n.depthBuffer&&h.push(u),!n.ignoreDepthForMultisampleCopy&&(n.depthBuffer&&(l|=e.DEPTH_BUFFER_BIT),n.stencilBuffer&&(l|=e.STENCIL_BUFFER_BIT));let c=r.get(n);i.bindFramebuffer(e.READ_FRAMEBUFFER,c.__webglMultisampledFramebuffer),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglFramebuffer),n.ignoreDepthForMultisampleCopy&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[u]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[u])),e.blitFramebuffer(0,0,a,s,0,0,a,s,l,e.NEAREST),e.invalidateFramebuffer(e.READ_FRAMEBUFFER,h),i.bindFramebuffer(e.READ_FRAMEBUFFER,null),i.bindFramebuffer(e.DRAW_FRAMEBUFFER,c.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}},this.setupDepthRenderbuffer=H,this.setupFrameBufferTexture=O,this.safeSetTexture2D=function e(t,i){t&&t.isWebGLRenderTarget&&(!1===V&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),V=!0),t=t.texture),P(t,i)},this.safeSetTextureCube=function e(t,i){t&&t.isWebGLCubeRenderTarget&&(!1===k&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),k=!0),t=t.texture),D(t,i)}}function ni(e,t,i){let r=i.isWebGL2;return{convert:function i(n){let a;if(1009===n)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1019===n)return e.UNSIGNED_SHORT_5_6_5;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(1012===n)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(1014===n)return e.UNSIGNED_INT;if(1015===n)return e.FLOAT;if(1016===n)return r?e.HALF_FLOAT:null!==(a=t.get("OES_texture_half_float"))?a.HALF_FLOAT_OES:null;if(1021===n)return e.ALPHA;if(1022===n)return e.RGB;if(1023===n)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(1026===n)return e.DEPTH_COMPONENT;if(1027===n)return e.DEPTH_STENCIL;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1032===n)return e.RGB_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(33776===n||33777===n||33778===n||33779===n){if(null===(a=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===n)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===n)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===n)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===n)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(null===(a=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return null!==(a=t.get("WEBGL_compressed_texture_etc1"))?a.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===n||37496===n)&&null!==(a=t.get("WEBGL_compressed_texture_etc"))){if(37492===n)return a.COMPRESSED_RGB8_ETC2;if(37496===n)return a.COMPRESSED_RGBA8_ETC2_EAC}return 37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n||37840===n||37841===n||37842===n||37843===n||37844===n||37845===n||37846===n||37847===n||37848===n||37849===n||37850===n||37851===n||37852===n||37853===n?null!==(a=t.get("WEBGL_compressed_texture_astc"))?n:null:36492===n?null!==(a=t.get("EXT_texture_compression_bptc"))?n:null:1020===n?r?e.UNSIGNED_INT_24_8:null!==(a=t.get("WEBGL_depth_texture"))?a.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}rQ.prototype.isMeshDistanceMaterial=!0;class nr extends tU{constructor(e=[]){super(),this.cameras=e}}nr.prototype.isArrayCamera=!0;class nn extends eD{constructor(){super(),this.type="Group"}}nn.prototype.isGroup=!0;let na={type:"move"};class ns{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new nn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new nn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new nn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,i){let r=null,n=null,a=null,s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(null!==s&&null!==(r=t.getPose(e.targetRaySpace,i))&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(na)),l&&e.hand){for(let h of(a=!0,e.hand.values())){let u=t.getJointPose(h,i);if(void 0===l.joints[h.jointName]){let c=new nn;c.matrixAutoUpdate=!1,c.visible=!1,l.joints[h.jointName]=c,l.add(c)}let d=l.joints[h.jointName];null!==u&&(d.matrix.fromArray(u.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.jointRadius=u.radius),d.visible=null!==u}let p=l.joints["index-finger-tip"],m=l.joints["thumb-tip"],f=p.position.distanceTo(m.position);l.inputState.pinching&&f>.025?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,i))&&(o.matrix.fromArray(n.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),n.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(n.linearVelocity)):o.hasLinearVelocity=!1,n.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(n.angularVelocity)):o.hasAngularVelocity=!1)}return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==n),null!==l&&(l.visible=null!==a),this}}class no extends M{constructor(e,t,i,r,n,a,s,o,l,h){if(1026!==(h=void 0!==h?h:1026)&&1027!==h)throw Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&1026===h&&(i=1012),void 0===i&&1027===h&&(i=1020),super(null,r,n,a,s,o,h,i,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:1003,this.minFilter=void 0!==o?o:1003,this.flipY=!1,this.generateMipmaps=!1}}no.prototype.isDepthTexture=!0;class nl extends i{constructor(e,t){super();let i=this,r=null,n=1,a=null,s="local-floor",o=e.extensions.has("WEBGL_multisampled_render_to_texture"),l=null,h=null,u=null,c=null,d=!1,p=null,m=t.getContextAttributes(),f=null,g=null,$=[],x=new Map,v=new tU;v.layers.enable(1),v.viewport=new R;let y=new tU;y.layers.enable(2),y.viewport=new R;let b=[v,y],w=new nr;w.layers.enable(1),w.layers.enable(2);let _=null,E=null;function T(e){let t=x.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function S(){x.forEach(function(e,t){e.disconnect(t)}),x.clear(),_=null,E=null,e.setRenderTarget(f),c=null,u=null,h=null,r=null,g=null,N.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}function M(e){let t=r.inputSources;for(let i=0;i<$.length;i++)x.set(t[i],$[i]);for(let n=0;n<e.removed.length;n++){let a=e.removed[n],s=x.get(a);s&&(s.dispatchEvent({type:"disconnected",data:a}),x.delete(a))}for(let o=0;o<e.added.length;o++){let l=e.added[o],h=x.get(l);h&&h.dispatchEvent({type:"connected",data:l})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=$[e];return void 0===t&&(t=new ns,$[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=$[e];return void 0===t&&(t=new ns,$[e]=t),t.getGripSpace()},this.getHand=function(e){let t=$[e];return void 0===t&&(t=new ns,$[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){n=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===i.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return a},this.getBaseLayer=function(){return null!==u?u:c},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(l){if(null!==(r=l)){if(f=e.getRenderTarget(),r.addEventListener("select",T),r.addEventListener("selectstart",T),r.addEventListener("selectend",T),r.addEventListener("squeeze",T),r.addEventListener("squeezestart",T),r.addEventListener("squeezeend",T),r.addEventListener("end",S),r.addEventListener("inputsourceschange",M),!0!==m.xrCompatible&&await t.makeXRCompatible(),void 0===r.renderState.layers||!1===e.capabilities.isWebGL2){let p={antialias:void 0!==r.renderState.layers||m.antialias,alpha:m.alpha,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:n};c=new XRWebGLLayer(r,t,p),r.updateRenderState({baseLayer:c}),g=new L(c.framebufferWidth,c.framebufferHeight,{format:1023,type:1009,encoding:e.outputEncoding})}else{d=m.antialias;let $=null,x=null,v=null;m.depth&&(v=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,$=m.stencil?1027:1026,x=m.stencil?1020:1012);let y={colorFormat:m.alpha||d?t.RGBA8:t.RGB8,depthFormat:v,scaleFactor:n};u=(h=new XRWebGLBinding(r,t)).createProjectionLayer(y),r.updateRenderState({layers:[u]}),g=d?new P(u.textureWidth,u.textureHeight,{format:1023,type:1009,depthTexture:new no(u.textureWidth,u.textureHeight,x,void 0,void 0,void 0,void 0,void 0,void 0,$),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,useRenderToTexture:o,encoding:e.outputEncoding}):new L(u.textureWidth,u.textureHeight,{format:m.alpha?1023:1022,type:1009,depthTexture:new no(u.textureWidth,u.textureHeight,x,void 0,void 0,void 0,void 0,void 0,void 0,$),stencilBuffer:m.stencil,ignoreDepth:u.ignoreDepthValues,encoding:e.outputEncoding})}this.setFoveation(1),a=await r.requestReferenceSpace(s),N.setContext(r),N.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};let A=new I,C=new I;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===r)return;w.near=y.near=v.near=e.near,w.far=y.far=v.far=e.far,(_!==w.near||E!==w.far)&&(r.updateRenderState({depthNear:w.near,depthFar:w.far}),_=w.near,E=w.far);let t=e.parent,i=w.cameras;D(w,t);for(let n=0;n<i.length;n++)D(i[n],t);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),e.position.copy(w.position),e.quaternion.copy(w.quaternion),e.scale.copy(w.scale),e.matrix.copy(w.matrix),e.matrixWorld.copy(w.matrixWorld);let a=e.children;for(let s=0,o=a.length;s<o;s++)a[s].updateMatrixWorld(!0);2===i.length?function e(t,i,r){A.setFromMatrixPosition(i.matrixWorld),C.setFromMatrixPosition(r.matrixWorld);let n=A.distanceTo(C),a=i.projectionMatrix.elements,s=r.projectionMatrix.elements,o=a[14]/(a[10]-1),l=a[14]/(a[10]+1),h=(a[9]+1)/a[5],u=(a[9]-1)/a[5],c=(a[8]-1)/a[0],d=(s[8]+1)/s[0],p=n/(-c+d),m=-(p*c);i.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(p),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();let f=o+p,g=l+p;t.projectionMatrix.makePerspective(o*c-m,o*d+(n-m),h*l/g*f,u*l/g*f,f,g)}(w,v,y):w.projectionMatrix.copy(v.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){return null!==u?u.fixedFoveation:null!==c?c.fixedFoveation:void 0},this.setFoveation=function(e){null!==u&&(u.fixedFoveation=e),null!==c&&void 0!==c.fixedFoveation&&(c.fixedFoveation=e)};let F=null,N=new t6;N.setAnimationLoop(function t(i,n){if(l=n.getViewerPose(a),p=n,null!==l){let s=l.views;null!==c&&(e.setRenderTargetFramebuffer(g,c.framebuffer),e.setRenderTarget(g));let o=!1;s.length!==w.cameras.length&&(w.cameras.length=0,o=!0);for(let d=0;d<s.length;d++){let m=s[d],f=null;if(null!==c)f=c.getViewport(m);else{let x=h.getViewSubImage(u,m);f=x.viewport,0===d&&(e.setRenderTargetTextures(g,x.colorTexture,u.ignoreDepthValues?void 0:x.depthStencilTexture),e.setRenderTarget(g))}let v=b[d];v.matrix.fromArray(m.transform.matrix),v.projectionMatrix.fromArray(m.projectionMatrix),v.viewport.set(f.x,f.y,f.width,f.height),0===d&&w.matrix.copy(v.matrix),!0===o&&w.cameras.push(v)}}let y=r.inputSources;for(let _=0;_<$.length;_++){let E=$[_],T=y[_];E.update(T,n,a)}F&&F(i,n),p=null}),this.setAnimationLoop=function(e){F=e},this.dispose=function(){}}}function nh(e){function t(t,i){t.opacity.value=i.opacity,i.color&&t.diffuse.value.copy(i.color),i.emissive&&t.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),i.map&&(t.map.value=i.map),i.alphaMap&&(t.alphaMap.value=i.alphaMap),i.specularMap&&(t.specularMap.value=i.specularMap),i.alphaTest>0&&(t.alphaTest.value=i.alphaTest);let r=e.get(i).envMap;r&&(t.envMap.value=r,t.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,t.reflectivity.value=i.reflectivity,t.ior.value=i.ior,t.refractionRatio.value=i.refractionRatio),i.lightMap&&(t.lightMap.value=i.lightMap,t.lightMapIntensity.value=i.lightMapIntensity),i.aoMap&&(t.aoMap.value=i.aoMap,t.aoMapIntensity.value=i.aoMapIntensity);let n;i.map?n=i.map:i.specularMap?n=i.specularMap:i.displacementMap?n=i.displacementMap:i.normalMap?n=i.normalMap:i.bumpMap?n=i.bumpMap:i.roughnessMap?n=i.roughnessMap:i.metalnessMap?n=i.metalnessMap:i.alphaMap?n=i.alphaMap:i.emissiveMap?n=i.emissiveMap:i.clearcoatMap?n=i.clearcoatMap:i.clearcoatNormalMap?n=i.clearcoatNormalMap:i.clearcoatRoughnessMap?n=i.clearcoatRoughnessMap:i.specularIntensityMap?n=i.specularIntensityMap:i.specularColorMap?n=i.specularColorMap:i.transmissionMap?n=i.transmissionMap:i.thicknessMap?n=i.thicknessMap:i.sheenColorMap?n=i.sheenColorMap:i.sheenRoughnessMap&&(n=i.sheenRoughnessMap),void 0!==n&&(n.isWebGLRenderTarget&&(n=n.texture),!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix));let a;i.aoMap?a=i.aoMap:i.lightMap&&(a=i.lightMap),void 0!==a&&(a.isWebGLRenderTarget&&(a=a.texture),!0===a.matrixAutoUpdate&&a.updateMatrix(),t.uv2Transform.value.copy(a.matrix))}function i(t,i){t.roughness.value=i.roughness,t.metalness.value=i.metalness,i.roughnessMap&&(t.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(t.metalnessMap.value=i.metalnessMap),i.emissiveMap&&(t.emissiveMap.value=i.emissiveMap),i.bumpMap&&(t.bumpMap.value=i.bumpMap,t.bumpScale.value=i.bumpScale,1===i.side&&(t.bumpScale.value*=-1)),i.normalMap&&(t.normalMap.value=i.normalMap,t.normalScale.value.copy(i.normalScale),1===i.side&&t.normalScale.value.negate()),i.displacementMap&&(t.displacementMap.value=i.displacementMap,t.displacementScale.value=i.displacementScale,t.displacementBias.value=i.displacementBias);let r=e.get(i).envMap;r&&(t.envMapIntensity.value=i.envMapIntensity)}return{refreshFogUniforms:function e(t,i){t.fogColor.value.copy(i.color),i.isFog?(t.fogNear.value=i.near,t.fogFar.value=i.far):i.isFogExp2&&(t.fogDensity.value=i.density)},refreshMaterialUniforms:function e(r,n,a,s,o){var l,h,u,c,d,p,m,f,g,$,x,v,y,b,w,_,E,T,S,M,A,R,L,C,P,D,I;let F,N;n.isMeshBasicMaterial?t(r,n):n.isMeshLambertMaterial?(t(r,n),l=r,(h=n).emissiveMap&&(l.emissiveMap.value=h.emissiveMap)):n.isMeshToonMaterial?(t(r,n),u=r,(c=n).gradientMap&&(u.gradientMap.value=c.gradientMap),c.emissiveMap&&(u.emissiveMap.value=c.emissiveMap),c.bumpMap&&(u.bumpMap.value=c.bumpMap,u.bumpScale.value=c.bumpScale,1===c.side&&(u.bumpScale.value*=-1)),c.normalMap&&(u.normalMap.value=c.normalMap,u.normalScale.value.copy(c.normalScale),1===c.side&&u.normalScale.value.negate()),c.displacementMap&&(u.displacementMap.value=c.displacementMap,u.displacementScale.value=c.displacementScale,u.displacementBias.value=c.displacementBias)):n.isMeshPhongMaterial?(t(r,n),d=r,p=n,d.specular.value.copy(p.specular),d.shininess.value=Math.max(p.shininess,1e-4),p.emissiveMap&&(d.emissiveMap.value=p.emissiveMap),p.bumpMap&&(d.bumpMap.value=p.bumpMap,d.bumpScale.value=p.bumpScale,1===p.side&&(d.bumpScale.value*=-1)),p.normalMap&&(d.normalMap.value=p.normalMap,d.normalScale.value.copy(p.normalScale),1===p.side&&d.normalScale.value.negate()),p.displacementMap&&(d.displacementMap.value=p.displacementMap,d.displacementScale.value=p.displacementScale,d.displacementBias.value=p.displacementBias)):n.isMeshStandardMaterial?(t(r,n),n.isMeshPhysicalMaterial?(m=r,f=n,g=o,i(m,f),m.ior.value=f.ior,f.sheen>0&&(m.sheenColor.value.copy(f.sheenColor).multiplyScalar(f.sheen),m.sheenRoughness.value=f.sheenRoughness,f.sheenColorMap&&(m.sheenColorMap.value=f.sheenColorMap),f.sheenRoughnessMap&&(m.sheenRoughnessMap.value=f.sheenRoughnessMap)),f.clearcoat>0&&(m.clearcoat.value=f.clearcoat,m.clearcoatRoughness.value=f.clearcoatRoughness,f.clearcoatMap&&(m.clearcoatMap.value=f.clearcoatMap),f.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=f.clearcoatRoughnessMap),f.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(f.clearcoatNormalScale),m.clearcoatNormalMap.value=f.clearcoatNormalMap,1===f.side&&m.clearcoatNormalScale.value.negate())),f.transmission>0&&(m.transmission.value=f.transmission,m.transmissionSamplerMap.value=g.texture,m.transmissionSamplerSize.value.set(g.width,g.height),f.transmissionMap&&(m.transmissionMap.value=f.transmissionMap),m.thickness.value=f.thickness,f.thicknessMap&&(m.thicknessMap.value=f.thicknessMap),m.attenuationDistance.value=f.attenuationDistance,m.attenuationColor.value.copy(f.attenuationColor)),m.specularIntensity.value=f.specularIntensity,m.specularColor.value.copy(f.specularColor),f.specularIntensityMap&&(m.specularIntensityMap.value=f.specularIntensityMap),f.specularColorMap&&(m.specularColorMap.value=f.specularColorMap)):i(r,n)):n.isMeshMatcapMaterial?(t(r,n),$=r,(x=n).matcap&&($.matcap.value=x.matcap),x.bumpMap&&($.bumpMap.value=x.bumpMap,$.bumpScale.value=x.bumpScale,1===x.side&&($.bumpScale.value*=-1)),x.normalMap&&($.normalMap.value=x.normalMap,$.normalScale.value.copy(x.normalScale),1===x.side&&$.normalScale.value.negate()),x.displacementMap&&($.displacementMap.value=x.displacementMap,$.displacementScale.value=x.displacementScale,$.displacementBias.value=x.displacementBias)):n.isMeshDepthMaterial?(t(r,n),v=r,(y=n).displacementMap&&(v.displacementMap.value=y.displacementMap,v.displacementScale.value=y.displacementScale,v.displacementBias.value=y.displacementBias)):n.isMeshDistanceMaterial?(t(r,n),b=r,(w=n).displacementMap&&(b.displacementMap.value=w.displacementMap,b.displacementScale.value=w.displacementScale,b.displacementBias.value=w.displacementBias),b.referencePosition.value.copy(w.referencePosition),b.nearDistance.value=w.nearDistance,b.farDistance.value=w.farDistance):n.isMeshNormalMaterial?(t(r,n),_=r,(E=n).bumpMap&&(_.bumpMap.value=E.bumpMap,_.bumpScale.value=E.bumpScale,1===E.side&&(_.bumpScale.value*=-1)),E.normalMap&&(_.normalMap.value=E.normalMap,_.normalScale.value.copy(E.normalScale),1===E.side&&_.normalScale.value.negate()),E.displacementMap&&(_.displacementMap.value=E.displacementMap,_.displacementScale.value=E.displacementScale,_.displacementBias.value=E.displacementBias)):n.isLineBasicMaterial?(T=r,S=n,T.diffuse.value.copy(S.color),T.opacity.value=S.opacity,n.isLineDashedMaterial&&(M=r,A=n,M.dashSize.value=A.dashSize,M.totalSize.value=A.dashSize+A.gapSize,M.scale.value=A.scale)):n.isPointsMaterial?(R=r,L=n,C=a,P=s,R.diffuse.value.copy(L.color),R.opacity.value=L.opacity,R.size.value=L.size*C,R.scale.value=.5*P,L.map&&(R.map.value=L.map),L.alphaMap&&(R.alphaMap.value=L.alphaMap),L.alphaTest>0&&(R.alphaTest.value=L.alphaTest),L.map?F=L.map:L.alphaMap&&(F=L.alphaMap),void 0!==F&&(!0===F.matrixAutoUpdate&&F.updateMatrix(),R.uvTransform.value.copy(F.matrix))):n.isSpriteMaterial?(D=r,I=n,D.diffuse.value.copy(I.color),D.opacity.value=I.opacity,D.rotation.value=I.rotation,I.map&&(D.map.value=I.map),I.alphaMap&&(D.alphaMap.value=I.alphaMap),I.alphaTest>0&&(D.alphaTest.value=I.alphaTest),I.map?N=I.map:I.alphaMap&&(N=I.alphaMap),void 0!==N&&(!0===N.matrixAutoUpdate&&N.updateMatrix(),D.uvTransform.value.copy(N.matrix))):n.isShadowMaterial?(r.color.value.copy(n.color),r.opacity.value=n.opacity):n.isShaderMaterial&&(n.uniformsNeedUpdate=!1)}}}function nu(e={}){let t=void 0!==e.canvas?e.canvas:function e(){let t=_("canvas");return t.style.display="block",t}(),i=void 0!==e.context?e.context:null,r=void 0!==e.alpha&&e.alpha,n=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",u=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c=null,d=null,p=[],m=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;let f=this,g=!1,$=0,x=0,v=null,y=-1,b=null,w=new R,E=new R,T=null,S=t.width,M=t.height,A=1,C=null,D=null,F=new R(0,0,S,M),N=new R(0,0,S,M),U=!1,B=[],O=new t3,z=!1,H=!1,G=null,V=new ec,k=new I,W={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function X(){return null===v?A:1}let j=i;function q(e,i){for(let r=0;r<e.length;r++){let n=e[r],a=t.getContext(n,i);if(null!==a)return a}return null}try{if("setAttribute"in t&&t.setAttribute("data-engine","three.js r136"),t.addEventListener("webglcontextlost",ew,!1),t.addEventListener("webglcontextrestored",e_,!1),null===j){let Y=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&Y.shift(),j=q(Y,{alpha:r,depth:n,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u}),null===j){if(q(Y))throw Error("Error creating WebGL context with your selected attributes.");throw Error("Error creating WebGL context.")}}void 0===j.getShaderPrecisionFormat&&(j.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(Z){throw console.error("THREE.WebGLRenderer: "+Z.message),Z}let J,K,Q,ee,et,ei,er,en,ea,es,eo,el,eh,eu,ed,ep,em,ef,eg,e$,ex,ev,ey;function e8(){J=new iw(j),K=new tJ(j,J,e),J.init(K),ev=new ni(j,J,K),Q=new ne(j,J,K),B[0]=j.BACK,ee=new iT(j),et=new r3,ei=new nt(j,J,Q,et,K,ev,ee),er=new tQ(f),en=new ib(f),ea=new t4(j,K),ey=new tY(j,J,ea,K),es=new i_(j,ea,ee,ey),eo=new iC(j,es,ea,ee),eg=new iL(j,K,ei),ep=new tK(et),el=new rW(f,er,en,J,K,ey,ep),eh=new nh(et),eu=new rj,ed=new rJ(J,K),ef=new tq(f,er,Q,eo,o),em=new r9(f,eo,K),e$=new tZ(j,J,ee,K),ex=new iE(j,J,ee,K),ee.programs=el.programs,f.capabilities=K,f.extensions=J,f.properties=et,f.renderLists=eu,f.shadowMap=em,f.state=Q,f.info=ee}e8();let eb=new nl(f,j);function ew(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function e_(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;let e=ee.autoReset,t=em.enabled,i=em.autoUpdate,r=em.needsUpdate,n=em.type;e8(),ee.autoReset=e,em.enabled=t,em.autoUpdate=i,em.needsUpdate=r,em.type=n}function eE(e){var t;let i=e.target;i.removeEventListener("dispose",eE),function e(t){let i=et.get(t).programs;void 0!==i&&(i.forEach(function(e){el.releaseProgram(e)}),t.isShaderMaterial&&el.releaseShaderCache(t))}(t=i),et.remove(t)}this.xr=eb,this.getContext=function(){return j},this.getContextAttributes=function(){return j.getContextAttributes()},this.forceContextLoss=function(){let e=J.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){let e=J.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(e){void 0!==e&&(A=e,this.setSize(S,M,!1))},this.getSize=function(e){return e.set(S,M)},this.setSize=function(e,i,r){if(eb.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=e,M=i,t.width=Math.floor(e*A),t.height=Math.floor(i*A),!1!==r&&(t.style.width=e+"px",t.style.height=i+"px"),this.setViewport(0,0,e,i)},this.getDrawingBufferSize=function(e){return e.set(S*A,M*A).floor()},this.setDrawingBufferSize=function(e,i,r){S=e,M=i,A=r,t.width=Math.floor(e*r),t.height=Math.floor(i*r),this.setViewport(0,0,e,i)},this.getCurrentViewport=function(e){return e.copy(w)},this.getViewport=function(e){return e.copy(F)},this.setViewport=function(e,t,i,r){e.isVector4?F.set(e.x,e.y,e.z,e.w):F.set(e,t,i,r),Q.viewport(w.copy(F).multiplyScalar(A).floor())},this.getScissor=function(e){return e.copy(N)},this.setScissor=function(e,t,i,r){e.isVector4?N.set(e.x,e.y,e.z,e.w):N.set(e,t,i,r),Q.scissor(E.copy(N).multiplyScalar(A).floor())},this.getScissorTest=function(){return U},this.setScissorTest=function(e){Q.setScissorTest(U=e)},this.setOpaqueSort=function(e){C=e},this.setTransparentSort=function(e){D=e},this.getClearColor=function(e){return e.copy(ef.getClearColor())},this.setClearColor=function(){ef.setClearColor.apply(ef,arguments)},this.getClearAlpha=function(){return ef.getClearAlpha()},this.setClearAlpha=function(){ef.setClearAlpha.apply(ef,arguments)},this.clear=function(e,t,i){let r=0;(void 0===e||e)&&(r|=j.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=j.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=j.STENCIL_BUFFER_BIT),j.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ew,!1),t.removeEventListener("webglcontextrestored",e_,!1),eu.dispose(),ed.dispose(),et.dispose(),er.dispose(),en.dispose(),eo.dispose(),ey.dispose(),el.dispose(),eb.dispose(),eb.removeEventListener("sessionstart",eS),eb.removeEventListener("sessionend",eM),G&&(G.dispose(),G=null),eA.stop()},this.renderBufferDirect=function(e,t,i,r,n,a){null===t&&(t=W);let s=n.isMesh&&0>n.matrixWorld.determinant(),o=function e(t,i,r,n,a){var s,o;!0!==i.isScene&&(i=W),ei.resetTextureUnits();let l=i.fog,h=n.isMeshStandardMaterial?i.environment:null,u=null===v?f.outputEncoding:v.texture.encoding,c=(n.isMeshStandardMaterial?en:er).get(n.envMap||h),p=!0===n.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,m=!!n.normalMap&&!!r.attributes.tangent,g=!!r.morphAttributes.position,$=!!r.morphAttributes.normal,x=r.morphAttributes.position?r.morphAttributes.position.length:0,w=n.toneMapped?f.toneMapping:0,_=et.get(n),E=d.state.lights;if(!0===z&&(!0===H||t!==b)){let T=t===b&&n.id===y;ep.setState(n,t,T)}let S=!1;n.version===_.__version?_.needsLights&&_.lightsStateVersion!==E.state.version?S=!0:_.outputEncoding!==u?S=!0:a.isInstancedMesh&&!1===_.instancing?S=!0:a.isInstancedMesh||!0!==_.instancing?a.isSkinnedMesh&&!1===_.skinning?S=!0:a.isSkinnedMesh||!0!==_.skinning?_.envMap!==c?S=!0:n.fog&&_.fog!==l?S=!0:void 0!==_.numClippingPlanes&&(_.numClippingPlanes!==ep.numPlanes||_.numIntersection!==ep.numIntersection)?S=!0:_.vertexAlphas!==p?S=!0:_.vertexTangents!==m?S=!0:_.morphTargets!==g?S=!0:_.morphNormals!==$?S=!0:_.toneMapping!==w?S=!0:!0===K.isWebGL2&&_.morphTargetsCount!==x&&(S=!0):S=!0:S=!0:(S=!0,_.__version=n.version);let R=_.currentProgram;!0===S&&(R=e0(n,i,a));let L=!1,C=!1,P=!1,D=R.getUniforms(),I=_.uniforms;if(Q.useProgram(R.program)&&(L=!0,C=!0,P=!0),n.id!==y&&(y=n.id,C=!0),L||b!==t){if(D.setValue(j,"projectionMatrix",t.projectionMatrix),K.logarithmicDepthBuffer&&D.setValue(j,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),b!==t&&(b=t,C=!0,P=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){let F=D.map.cameraPosition;void 0!==F&&F.setValue(j,k.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&D.setValue(j,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||a.isSkinnedMesh)&&D.setValue(j,"viewMatrix",t.matrixWorldInverse)}if(a.isSkinnedMesh){D.setOptional(j,a,"bindMatrix"),D.setOptional(j,a,"bindMatrixInverse");let N=a.skeleton;N&&(K.floatVertexTextures?(null===N.boneTexture&&N.computeBoneTexture(),D.setValue(j,"boneTexture",N.boneTexture,ei),D.setValue(j,"boneTextureSize",N.boneTextureSize)):D.setOptional(j,N,"boneMatrices"))}return r&&(void 0!==r.morphAttributes.position||void 0!==r.morphAttributes.normal)&&eg.update(a,r,n,R),(C||_.receiveShadow!==a.receiveShadow)&&(_.receiveShadow=a.receiveShadow,D.setValue(j,"receiveShadow",a.receiveShadow)),C&&(D.setValue(j,"toneMappingExposure",f.toneMappingExposure),_.needsLights&&(s=I,o=P,s.ambientLightColor.needsUpdate=o,s.lightProbe.needsUpdate=o,s.directionalLights.needsUpdate=o,s.directionalLightShadows.needsUpdate=o,s.pointLights.needsUpdate=o,s.pointLightShadows.needsUpdate=o,s.spotLights.needsUpdate=o,s.spotLightShadows.needsUpdate=o,s.rectAreaLights.needsUpdate=o,s.hemisphereLights.needsUpdate=o),l&&n.fog&&eh.refreshFogUniforms(I,l),eh.refreshMaterialUniforms(I,n,A,M,G),rS.upload(j,_.uniformsList,I,ei)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(rS.upload(j,_.uniformsList,I,ei),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&D.setValue(j,"center",a.center),D.setValue(j,"modelViewMatrix",a.modelViewMatrix),D.setValue(j,"normalMatrix",a.normalMatrix),D.setValue(j,"modelMatrix",a.matrixWorld),R}(e,t,i,r,n);Q.setMaterial(r,s);let l=i.index,h=i.attributes.position;if(null===l){if(void 0===h||0===h.count)return}else if(0===l.count)return;let u=1;!0===r.wireframe&&(l=es.getWireframeAttribute(i),u=2),ey.setup(n,r,o,i,l);let c,p=e$;null!==l&&(c=ea.get(l),(p=ex).setIndex(c));let m=null!==l?l.count:h.count,g=i.drawRange.start*u,$=i.drawRange.count*u,x=null!==a?a.start*u:0,w=null!==a?a.count*u:1/0,_=Math.max(g,x),E=Math.max(0,Math.min(m,g+$,x+w)-1-_+1);if(0!==E){if(n.isMesh)!0===r.wireframe?(Q.setLineWidth(r.wireframeLinewidth*X()),p.setMode(j.LINES)):p.setMode(j.TRIANGLES);else if(n.isLine){let T=r.linewidth;void 0===T&&(T=1),Q.setLineWidth(T*X()),n.isLineSegments?p.setMode(j.LINES):n.isLineLoop?p.setMode(j.LINE_LOOP):p.setMode(j.LINE_STRIP)}else n.isPoints?p.setMode(j.POINTS):n.isSprite&&p.setMode(j.TRIANGLES);if(n.isInstancedMesh)p.renderInstances(_,E,n.count);else if(i.isInstancedBufferGeometry){let S=Math.min(i.instanceCount,i._maxInstanceCount);p.renderInstances(_,E,S)}else p.render(_,E)}},this.compile=function(e,t){(d=ed.get(e)).init(),m.push(d),e.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(d.pushLight(e),e.castShadow&&d.pushShadow(e))}),d.setupLights(f.physicallyCorrectLights),e.traverse(function(t){let i=t.material;if(i){if(Array.isArray(i))for(let r=0;r<i.length;r++){let n=i[r];e0(n,e,t)}else e0(i,e,t)}}),m.pop(),d=null};let eT=null;function eS(){eA.stop()}function eM(){eA.start()}let eA=new t6;function eR(e,t,i,r){let n=e.opaque,a=e.transmissive,o=e.transparent;d.setupLightsView(i),a.length>0&&function e(t,i,r){if(null===G){let n=!0===s&&!0===K.isWebGL2,a=n?P:L;G=new a(1024,1024,{generateMipmaps:!0,type:null!==ev.convert(1016)?1016:1009,minFilter:1008,magFilter:1003,wrapS:1001,wrapT:1001,useRenderToTexture:J.has("WEBGL_multisampled_render_to_texture")})}let o=f.getRenderTarget();f.setRenderTarget(G),f.clear();let l=f.toneMapping;f.toneMapping=0,eL(t,i,r),f.toneMapping=l,ei.updateMultisampleRenderTarget(G),ei.updateRenderTargetMipmap(G),f.setRenderTarget(o)}(n,t,i),r&&Q.viewport(w.copy(r)),n.length>0&&eL(n,t,i),a.length>0&&eL(a,t,i),o.length>0&&eL(o,t,i)}function eL(e,t,i){let r=!0===t.isScene?t.overrideMaterial:null;for(let n=0,a=e.length;n<a;n++){let s=e[n],o=s.object,l=s.geometry,h=null===r?s.material:r,u=s.group;o.layers.test(i.layers)&&eC(o,t,i,l,h,u)}}function eC(e,t,i,r,n,a){e.onBeforeRender(f,t,i,r,n,a),e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),n.onBeforeRender(f,t,i,r,e,a),!0===n.transparent&&2===n.side?(n.side=1,n.needsUpdate=!0,f.renderBufferDirect(i,t,r,n,e,a),n.side=0,n.needsUpdate=!0,f.renderBufferDirect(i,t,r,n,e,a),n.side=2):f.renderBufferDirect(i,t,r,n,e,a),e.onAfterRender(f,t,i,r,n,a)}function e0(e,t,i){var r;!0!==t.isScene&&(t=W);let n=et.get(e),a=d.state.lights,s=d.state.shadowsArray,o=a.state.version,l=el.getParameters(e,a.state,s,t,i),h=el.getProgramCacheKey(l),u=n.programs;n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?en:er).get(e.envMap||n.environment),void 0===u&&(e.addEventListener("dispose",eE),u=new Map,n.programs=u);let c=u.get(h);if(void 0!==c){if(n.currentProgram===c&&n.lightsStateVersion===o)return eP(e,l),c}else l.uniforms=el.getUniforms(e),e.onBuild(i,l,f),e.onBeforeCompile(l,f),c=el.acquireProgram(l,h),u.set(h,c),n.uniforms=l.uniforms;let p=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(p.clippingPlanes=ep.uniform),eP(e,l),n.needsLights=(r=e,r.isMeshLambertMaterial||r.isMeshToonMaterial||r.isMeshPhongMaterial||r.isMeshStandardMaterial||r.isShadowMaterial||r.isShaderMaterial&&!0===r.lights),n.lightsStateVersion=o,n.needsLights&&(p.ambientLightColor.value=a.state.ambient,p.lightProbe.value=a.state.probe,p.directionalLights.value=a.state.directional,p.directionalLightShadows.value=a.state.directionalShadow,p.spotLights.value=a.state.spot,p.spotLightShadows.value=a.state.spotShadow,p.rectAreaLights.value=a.state.rectArea,p.ltc_1.value=a.state.rectAreaLTC1,p.ltc_2.value=a.state.rectAreaLTC2,p.pointLights.value=a.state.point,p.pointLightShadows.value=a.state.pointShadow,p.hemisphereLights.value=a.state.hemi,p.directionalShadowMap.value=a.state.directionalShadowMap,p.directionalShadowMatrix.value=a.state.directionalShadowMatrix,p.spotShadowMap.value=a.state.spotShadowMap,p.spotShadowMatrix.value=a.state.spotShadowMatrix,p.pointShadowMap.value=a.state.pointShadowMap,p.pointShadowMatrix.value=a.state.pointShadowMatrix);let m=c.getUniforms(),g=rS.seqWithValue(m.seq,p);return n.currentProgram=c,n.uniformsList=g,c}function eP(e,t){let i=et.get(e);i.outputEncoding=t.outputEncoding,i.instancing=t.instancing,i.skinning=t.skinning,i.morphTargets=t.morphTargets,i.morphNormals=t.morphNormals,i.morphTargetsCount=t.morphTargetsCount,i.numClippingPlanes=t.numClippingPlanes,i.numIntersection=t.numClipIntersection,i.vertexAlphas=t.vertexAlphas,i.vertexTangents=t.vertexTangents,i.toneMapping=t.toneMapping}eA.setAnimationLoop(function e(t){eT&&eT(t)}),"undefined"!=typeof window&&eA.setContext(window),this.setAnimationLoop=function(e){eT=e,eb.setAnimationLoop(e),null===e?eA.stop():eA.start()},eb.addEventListener("sessionstart",eS),eb.addEventListener("sessionend",eM),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(!0===g)return;!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===eb.enabled&&!0===eb.isPresenting&&(!0===eb.cameraAutoUpdate&&eb.updateCamera(t),t=eb.getCamera()),!0===e.isScene&&e.onBeforeRender(f,e,t,v),(d=ed.get(e,m.length)).init(),m.push(d),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),O.setFromProjectionMatrix(V),H=this.localClippingEnabled,z=ep.init(this.clippingPlanes,H,t),(c=eu.get(e,p.length)).init(),p.push(c),function e(t,i,r,n){if(!1===t.visible)return;let a=t.layers.test(i.layers);if(a){if(t.isGroup)r=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(i);else if(t.isLight)d.pushLight(t),t.castShadow&&d.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||O.intersectsSprite(t)){n&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);let s=eo.update(t),o=t.material;o.visible&&c.push(t,s,o,r,k.z,null)}}else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==ee.render.frame&&(t.skeleton.update(),t.skeleton.frame=ee.render.frame),!t.frustumCulled||O.intersectsObject(t))){n&&k.setFromMatrixPosition(t.matrixWorld).applyMatrix4(V);let l=eo.update(t),h=t.material;if(Array.isArray(h)){let u=l.groups;for(let p=0,m=u.length;p<m;p++){let f=u[p],g=h[f.materialIndex];g&&g.visible&&c.push(t,l,g,r,k.z,f)}}else h.visible&&c.push(t,l,h,r,k.z,null)}}let $=t.children;for(let x=0,v=$.length;x<v;x++)e($[x],i,r,n)}(e,t,0,f.sortObjects),c.finish(),!0===f.sortObjects&&c.sort(C,D),!0===z&&ep.beginShadows();let i=d.state.shadowsArray;if(em.render(i,e,t),!0===z&&ep.endShadows(),!0===this.info.autoReset&&this.info.reset(),ef.render(c,e),d.setupLights(f.physicallyCorrectLights),t.isArrayCamera){let r=t.cameras;for(let n=0,a=r.length;n<a;n++){let s=r[n];eR(c,e,s,s.viewport)}}else eR(c,e,t);null!==v&&(ei.updateMultisampleRenderTarget(v),ei.updateRenderTargetMipmap(v)),!0===e.isScene&&e.onAfterRender(f,e,t),Q.buffers.depth.setTest(!0),Q.buffers.depth.setMask(!0),Q.buffers.color.setMask(!0),Q.setPolygonOffset(!1),ey.resetDefaultState(),y=-1,b=null,m.pop(),d=m.length>0?m[m.length-1]:null,p.pop(),c=p.length>0?p[p.length-1]:null},this.getActiveCubeFace=function(){return $},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return v},this.setRenderTargetTextures=function(e,t,i){et.get(e.texture).__webglTexture=t,et.get(e.depthTexture).__webglTexture=i;let r=et.get(e);r.__hasExternalTextures=!0,r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=void 0===i,!r.__autoAllocateDepthBuffer&&e.useRenderToTexture&&(console.warn("render-to-texture extension was disabled because an external texture was provided"),e.useRenderToTexture=!1,e.useRenderbuffer=!0))},this.setRenderTargetFramebuffer=function(e,t){let i=et.get(e);i.__webglFramebuffer=t,i.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,i=0){v=e,$=t,x=i;let r=!0;if(e){let n=et.get(e);void 0!==n.__useDefaultFramebuffer?(Q.bindFramebuffer(j.FRAMEBUFFER,null),r=!1):void 0===n.__webglFramebuffer?ei.setupRenderTarget(e):n.__hasExternalTextures&&ei.rebindTextures(e,et.get(e.texture).__webglTexture,et.get(e.depthTexture).__webglTexture)}let a=null,s=!1,o=!1;if(e){let l=e.texture;(l.isDataTexture3D||l.isDataTexture2DArray)&&(o=!0);let h=et.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(a=h[t],s=!0):a=e.useRenderbuffer?et.get(e).__webglMultisampledFramebuffer:h,w.copy(e.viewport),E.copy(e.scissor),T=e.scissorTest}else w.copy(F).multiplyScalar(A).floor(),E.copy(N).multiplyScalar(A).floor(),T=U;let u=Q.bindFramebuffer(j.FRAMEBUFFER,a);if(u&&K.drawBuffers&&r){let c=!1;if(e){if(e.isWebGLMultipleRenderTargets){let d=e.texture;if(B.length!==d.length||B[0]!==j.COLOR_ATTACHMENT0){for(let p=0,m=d.length;p<m;p++)B[p]=j.COLOR_ATTACHMENT0+p;B.length=d.length,c=!0}}else(1!==B.length||B[0]!==j.COLOR_ATTACHMENT0)&&(B[0]=j.COLOR_ATTACHMENT0,B.length=1,c=!0)}else(1!==B.length||B[0]!==j.BACK)&&(B[0]=j.BACK,B.length=1,c=!0);c&&(K.isWebGL2?j.drawBuffers(B):J.get("WEBGL_draw_buffers").drawBuffersWEBGL(B))}if(Q.viewport(w),Q.scissor(E),Q.setScissorTest(T),s){let f=et.get(e.texture);j.framebufferTexture2D(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,j.TEXTURE_CUBE_MAP_POSITIVE_X+t,f.__webglTexture,i)}else if(o){let g=et.get(e.texture);j.framebufferTextureLayer(j.FRAMEBUFFER,j.COLOR_ATTACHMENT0,g.__webglTexture,i||0,t||0)}y=-1},this.readRenderTargetPixels=function(e,t,i,r,n,a,s){if(!(e&&e.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let o=et.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){Q.bindFramebuffer(j.FRAMEBUFFER,o);try{let l=e.texture,h=l.format,u=l.type;if(1023!==h&&ev.convert(h)!==j.getParameter(j.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let c=1016===u&&(J.has("EXT_color_buffer_half_float")||K.isWebGL2&&J.has("EXT_color_buffer_float"));if(1009!==u&&ev.convert(u)!==j.getParameter(j.IMPLEMENTATION_COLOR_READ_TYPE)&&!(1015===u&&(K.isWebGL2||J.has("OES_texture_float")||J.has("WEBGL_color_buffer_float")))&&!c){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}j.checkFramebufferStatus(j.FRAMEBUFFER)===j.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-r&&i>=0&&i<=e.height-n&&j.readPixels(t,i,r,n,ev.convert(h),ev.convert(u),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{let d=null!==v?et.get(v).__webglFramebuffer:null;Q.bindFramebuffer(j.FRAMEBUFFER,d)}}},this.copyFramebufferToTexture=function(e,t,i=0){if(!0!==t.isFramebufferTexture){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}let r=Math.pow(2,-i),n=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r);ei.setTexture2D(t,0),j.copyTexSubImage2D(j.TEXTURE_2D,i,0,0,e.x,e.y,n,a),Q.unbindTexture()},this.copyTextureToTexture=function(e,t,i,r=0){let n=t.image.width,a=t.image.height,s=ev.convert(i.format),o=ev.convert(i.type);ei.setTexture2D(i,0),j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,i.flipY),j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),j.pixelStorei(j.UNPACK_ALIGNMENT,i.unpackAlignment),t.isDataTexture?j.texSubImage2D(j.TEXTURE_2D,r,e.x,e.y,n,a,s,o,t.image.data):t.isCompressedTexture?j.compressedTexSubImage2D(j.TEXTURE_2D,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):j.texSubImage2D(j.TEXTURE_2D,r,e.x,e.y,s,o,t.image),0===r&&i.generateMipmaps&&j.generateMipmap(j.TEXTURE_2D),Q.unbindTexture()},this.copyTextureToTexture3D=function(e,t,i,r,n=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,l=ev.convert(r.format),h=ev.convert(r.type),u;if(r.isDataTexture3D)ei.setTexture3D(r,0),u=j.TEXTURE_3D;else if(r.isDataTexture2DArray)ei.setTexture2DArray(r,0),u=j.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}j.pixelStorei(j.UNPACK_FLIP_Y_WEBGL,r.flipY),j.pixelStorei(j.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),j.pixelStorei(j.UNPACK_ALIGNMENT,r.unpackAlignment);let c=j.getParameter(j.UNPACK_ROW_LENGTH),d=j.getParameter(j.UNPACK_IMAGE_HEIGHT),p=j.getParameter(j.UNPACK_SKIP_PIXELS),m=j.getParameter(j.UNPACK_SKIP_ROWS),g=j.getParameter(j.UNPACK_SKIP_IMAGES),$=i.isCompressedTexture?i.mipmaps[0]:i.image;j.pixelStorei(j.UNPACK_ROW_LENGTH,$.width),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,$.height),j.pixelStorei(j.UNPACK_SKIP_PIXELS,e.min.x),j.pixelStorei(j.UNPACK_SKIP_ROWS,e.min.y),j.pixelStorei(j.UNPACK_SKIP_IMAGES,e.min.z),i.isDataTexture||i.isDataTexture3D?j.texSubImage3D(u,n,t.x,t.y,t.z,a,s,o,l,h,$.data):i.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),j.compressedTexSubImage3D(u,n,t.x,t.y,t.z,a,s,o,l,$.data)):j.texSubImage3D(u,n,t.x,t.y,t.z,a,s,o,l,h,$),j.pixelStorei(j.UNPACK_ROW_LENGTH,c),j.pixelStorei(j.UNPACK_IMAGE_HEIGHT,d),j.pixelStorei(j.UNPACK_SKIP_PIXELS,p),j.pixelStorei(j.UNPACK_SKIP_ROWS,m),j.pixelStorei(j.UNPACK_SKIP_IMAGES,g),0===n&&r.generateMipmaps&&j.generateMipmap(u),Q.unbindTexture()},this.initTexture=function(e){ei.setTexture2D(e,0),Q.unbindTexture()},this.resetState=function(){$=0,x=0,v=null,Q.reset(),ey.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}nu.prototype.isWebGLRenderer=!0;class nc extends nu{}nc.prototype.isWebGL1Renderer=!0;class nd{constructor(e,t=25e-5){this.name="",this.color=new e7(e),this.density=t}clone(){return new nd(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}nd.prototype.isFogExp2=!0;class np{constructor(e,t=1,i=1e3){this.name="",this.color=new e7(e),this.near=t,this.far=i}clone(){return new np(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}np.prototype.isFog=!0;class nm extends eD{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){let t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}nm.prototype.isScene=!0;class nf{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=l()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let r=0,n=this.stride;r<n;r++)this.array[e+r]=t.array[i+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=l()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);let t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=l()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}nf.prototype.isInterleavedBuffer=!0;let ng=new I;class n${constructor(e,t,i,r=!1){this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)ng.x=this.getX(t),ng.y=this.getY(t),ng.z=this.getZ(t),ng.applyMatrix4(e),this.setXYZ(t,ng.x,ng.y,ng.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)ng.x=this.getX(t),ng.y=this.getY(t),ng.z=this.getZ(t),ng.applyNormalMatrix(e),this.setXYZ(t,ng.x,ng.y,ng.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)ng.x=this.getX(t),ng.y=this.getY(t),ng.z=this.getZ(t),ng.transformDirection(e),this.setXYZ(t,ng.x,ng.y,ng.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=n,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new n$(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let r=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[r+n])}return new eJ(new this.array.constructor(t),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");let t=[];for(let i=0;i<this.count;i++){let r=i*this.data.stride+this.offset;for(let n=0;n<this.itemSize;n++)t.push(this.data.array[r+n])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}}}n$.prototype.isInterleavedBufferAttribute=!0;class nx extends eW{constructor(e){super(),this.type="SpriteMaterial",this.color=new e7(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}nx.prototype.isSpriteMaterial=!0;let nv,ny=new I,n8=new I,nb=new I,nw=new x,n_=new x,nE=new ec,nT=new I,nS=new I,nM=new I,nA=new x,nR=new x,nL=new x;class nC extends eD{constructor(e){if(super(),this.type="Sprite",void 0===nv){nv=new tm;let t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new nf(t,5);nv.setIndex([0,1,2,0,2,3]),nv.setAttribute("position",new n$(i,3,0,!1)),nv.setAttribute("uv",new n$(i,2,3,!1))}this.geometry=nv,this.material=void 0!==e?e:new nx,this.center=new x(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),n8.setFromMatrixScale(this.matrixWorld),nE.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),nb.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&n8.multiplyScalar(-nb.z);let i=this.material.rotation,r,n;0!==i&&(n=Math.cos(i),r=Math.sin(i));let a=this.center;n0(nT.set(-.5,-.5,0),nb,a,n8,r,n),n0(nS.set(.5,-.5,0),nb,a,n8,r,n),n0(nM.set(.5,.5,0),nb,a,n8,r,n),nA.set(0,0),nR.set(1,0),nL.set(1,1);let s=e.ray.intersectTriangle(nT,nS,nM,!1,ny);if(null===s&&(n0(nS.set(-.5,.5,0),nb,a,n8,r,n),nR.set(0,1),null===(s=e.ray.intersectTriangle(nT,nM,nS,!1,ny))))return;let o=e.ray.origin.distanceTo(ny);o<e.near||o>e.far||t.push({distance:o,point:ny.clone(),uv:eV.getUV(ny,nT,nS,nM,nA,nR,nL,new x),face:null,object:this})}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function n0(e,t,i,r,n,a){nw.subVectors(e,i).addScalar(.5).multiply(r),void 0!==n?(n_.x=a*nw.x-n*nw.y,n_.y=n*nw.x+a*nw.y):n_.copy(nw),e.copy(t),e.x+=n_.x,e.y+=n_.y,e.applyMatrix4(nE)}nC.prototype.isSprite=!0;let nP=new I,n1=new I;class nD extends eD{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);let t=e.levels;for(let i=0,r=t.length;i<r;i++){let n=t[i];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);let i=this.levels,r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){let t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r&&!(e<t[i].distance);i++);return t[i-1].object}return null}raycast(e,t){let i=this.levels;if(i.length>0){nP.setFromMatrixPosition(this.matrixWorld);let r=e.ray.origin.distanceTo(nP);this.getObjectForDistance(r).raycast(e,t)}}update(e){let t=this.levels;if(t.length>1){nP.setFromMatrixPosition(e.matrixWorld),n1.setFromMatrixPosition(this.matrixWorld);let i=nP.distanceTo(n1)/e.zoom;t[0].object.visible=!0;let r,n;for(r=1,n=t.length;r<n;r++)if(i>=t[r].distance)t[r-1].object.visible=!1,t[r].object.visible=!0;else break;for(this._currentLevel=r-1;r<n;r++)t[r].object.visible=!1}}toJSON(e){let t=super.toJSON(e);!1===this.autoUpdate&&(t.object.autoUpdate=!1),t.object.levels=[];let i=this.levels;for(let r=0,n=i.length;r<n;r++){let a=i[r];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}let nI=new I,nF=new R,nN=new R,nU=new I,nB=new ec;class nO extends tC{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ec,this.bindMatrixInverse=new ec}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){let e=new R,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.w=t.getW(i);let n=1/e.manhattanLength();n!==1/0?e.multiplyScalar(n):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){let i=this.skeleton,r=this.geometry;nF.fromBufferAttribute(r.attributes.skinIndex,e),nN.fromBufferAttribute(r.attributes.skinWeight,e),nI.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let n=0;n<4;n++){let a=nN.getComponent(n);if(0!==a){let s=nF.getComponent(n);nB.multiplyMatrices(i.bones[s].matrixWorld,i.boneInverses[s]),t.addScaledVector(nU.copy(nI).applyMatrix4(nB),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}nO.prototype.isSkinnedMesh=!0;class nz extends eD{constructor(){super(),this.type="Bone"}}nz.prototype.isBone=!0;class nH extends M{constructor(e=null,t=1,i=1,r,n,a,s,o,l=1003,h=1003,u,c){super(null,a,s,o,l,h,r,n,u,c),this.image={data:e,width:t,height:i},this.magFilter=l,this.minFilter=h,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}nH.prototype.isDataTexture=!0;let nG=new ec,n2=new ec;class nV{constructor(e=[],t=[]){this.uuid=l(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){let e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new ec)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){let i=new ec;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){let i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let r=0,n=this.bones.length;r<n;r++){let a=this.bones[r];a&&(a.parent&&a.parent.isBone?(a.matrix.copy(a.parent.matrixWorld).invert(),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))}}update(){let e=this.bones,t=this.boneInverses,i=this.boneMatrices,r=this.boneTexture;for(let n=0,a=e.length;n<a;n++){let s=e[n]?e[n].matrixWorld:n2;nG.multiplyMatrices(s,t[n]),nG.toArray(i,16*n)}null!==r&&(r.needsUpdate=!0)}clone(){return new nV(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(4*this.bones.length);e=Math.max(e=f(e),4);let t=new Float32Array(e*e*4);t.set(this.boneMatrices);let i=new nH(t,e,e,1023,1015);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){let r=this.bones[t];if(r.name===e)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,r=e.bones.length;i<r;i++){let n=e.bones[i],a=t[n];void 0===a&&(console.warn("THREE.Skeleton: No bone found with UUID:",n),a=new nz),this.bones.push(a),this.boneInverses.push(new ec().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){let e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;let t=this.bones,i=this.boneInverses;for(let r=0,n=t.length;r<n;r++){let a=t[r];e.bones.push(a.uuid);let s=i[r];e.boneInverses.push(s.toArray())}return e}}class nk extends eJ{constructor(e,t,i,r=1){"number"==typeof i&&(r=i,i=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,i),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){let e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}nk.prototype.isInstancedBufferAttribute=!0;let nW=new ec,n3=new ec,n6=[],n4=new tC;class nX extends tC{constructor(e,t,i){super(e,t),this.instanceMatrix=new nk(new Float32Array(16*i),16),this.instanceColor=null,this.count=i,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,t){let i=this.matrixWorld,r=this.count;if(n4.geometry=this.geometry,n4.material=this.material,void 0!==n4.material)for(let n=0;n<r;n++){this.getMatrixAt(n,nW),n3.multiplyMatrices(i,nW),n4.matrixWorld=n3,n4.raycast(e,n6);for(let a=0,s=n6.length;a<s;a++){let o=n6[a];o.instanceId=n,o.object=this,t.push(o)}n6.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new nk(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}nX.prototype.isInstancedMesh=!0;class nj extends eW{constructor(e){super(),this.type="LineBasicMaterial",this.color=new e7(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}nj.prototype.isLineBasicMaterial=!0;let n5=new I,n7=new I,nq=new ec,nY=new eu,nZ=new ei;class nJ extends eD{constructor(e=new tm,t=new nj){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[0];for(let r=1,n=t.count;r<n;r++)n5.fromBufferAttribute(t,r-1),n7.fromBufferAttribute(t,r),i[r]=i[r-1],i[r]+=n5.distanceTo(n7);e.setAttribute("lineDistance",new ta(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){let i=this.geometry,r=this.matrixWorld,n=e.params.Line.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),nZ.copy(i.boundingSphere),nZ.applyMatrix4(r),nZ.radius+=n,!1===e.ray.intersectsSphere(nZ))return;nq.copy(r).invert(),nY.copy(e.ray).applyMatrix4(nq);let s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,l=new I,h=new I,u=new I,c=new I,d=this.isLineSegments?2:1;if(i.isBufferGeometry){let p=i.index,m=i.attributes,f=m.position;if(null!==p){let g=Math.max(0,a.start),$=Math.min(p.count,a.start+a.count);for(let x=g,v=$-1;x<v;x+=d){let y=p.getX(x),b=p.getX(x+1);l.fromBufferAttribute(f,y),h.fromBufferAttribute(f,b);let w=nY.distanceSqToSegment(l,h,c,u);if(w>o)continue;c.applyMatrix4(this.matrixWorld);let _=e.ray.origin.distanceTo(c);_<e.near||_>e.far||t.push({distance:_,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{let E=Math.max(0,a.start),T=Math.min(f.count,a.start+a.count);for(let S=E,M=T-1;S<M;S+=d){l.fromBufferAttribute(f,S),h.fromBufferAttribute(f,S+1);let A=nY.distanceSqToSegment(l,h,c,u);if(A>o)continue;c.applyMatrix4(this.matrixWorld);let R=e.ray.origin.distanceTo(c);R<e.near||R>e.far||t.push({distance:R,point:u.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}else i.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let r=t[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=r.length;n<a;n++){let s=r[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=n}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}nJ.prototype.isLine=!0;let nK=new I,nQ=new I;class n9 extends nJ{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){let e=this.geometry;if(e.isBufferGeometry){if(null===e.index){let t=e.attributes.position,i=[];for(let r=0,n=t.count;r<n;r+=2)nK.fromBufferAttribute(t,r),nQ.fromBufferAttribute(t,r+1),i[r]=0===r?0:i[r-1],i[r+1]=i[r]+nK.distanceTo(nQ);e.setAttribute("lineDistance",new ta(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.")}else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}n9.prototype.isLineSegments=!0;class ae extends nJ{constructor(e,t){super(e,t),this.type="LineLoop"}}ae.prototype.isLineLoop=!0;class at extends eW{constructor(e){super(),this.type="PointsMaterial",this.color=new e7(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}at.prototype.isPointsMaterial=!0;let ai=new ec,ar=new eu,an=new ei,aa=new I;class as extends eD{constructor(e=new tm,t=new at){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){let i=this.geometry,r=this.matrixWorld,n=e.params.Points.threshold,a=i.drawRange;if(null===i.boundingSphere&&i.computeBoundingSphere(),an.copy(i.boundingSphere),an.applyMatrix4(r),an.radius+=n,!1===e.ray.intersectsSphere(an))return;ai.copy(r).invert(),ar.copy(e.ray).applyMatrix4(ai);let s=n/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s;if(i.isBufferGeometry){let l=i.index,h=i.attributes,u=h.position;if(null!==l){let c=Math.max(0,a.start),d=Math.min(l.count,a.start+a.count);for(let p=c,m=d;p<m;p++){let f=l.getX(p);aa.fromBufferAttribute(u,f),ao(aa,f,o,r,e,t,this)}}else{let g=Math.max(0,a.start),$=Math.min(u.count,a.start+a.count);for(let x=g,v=$;x<v;x++)aa.fromBufferAttribute(u,x),ao(aa,x,o,r,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){let e=this.geometry;if(e.isBufferGeometry){let t=e.morphAttributes,i=Object.keys(t);if(i.length>0){let r=t[i[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let n=0,a=r.length;n<a;n++){let s=r[n].name||String(n);this.morphTargetInfluences.push(0),this.morphTargetDictionary[s]=n}}}}else{let o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function ao(e,t,i,r,n,a,s){let o=ar.distanceSqToPoint(e);if(o<i){let l=new I;ar.closestPointToPoint(e,l),l.applyMatrix4(r);let h=n.ray.origin.distanceTo(l);if(h<n.near||h>n.far)return;a.push({distance:h,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}as.prototype.isPoints=!0;class al extends M{constructor(e,t,i,r,n,a,s,o,l){super(e,t,i,r,n,a,s,o,l),this.format=void 0!==s?s:1022,this.minFilter=void 0!==a?a:1006,this.magFilter=void 0!==n?n:1006,this.generateMipmaps=!1;let h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){let e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}al.prototype.isVideoTexture=!0;class ah extends M{constructor(e,t,i){super({width:e,height:t}),this.format=i,this.magFilter=1003,this.minFilter=1003,this.generateMipmaps=!1,this.needsUpdate=!0}}ah.prototype.isFramebufferTexture=!0;class au extends M{constructor(e,t,i,r,n,a,s,o,l,h,u,c){super(null,a,s,o,l,h,r,n,u,c),this.image={width:t,height:i},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}au.prototype.isCompressedTexture=!0;class ac extends M{constructor(e,t,i,r,n,a,s,o,l){super(e,t,i,r,n,a,s,o,l),this.needsUpdate=!0}}ac.prototype.isCanvasTexture=!0;class ad extends tm{constructor(e=1,t=8,i=0,r=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},t=Math.max(3,t);let n=[],a=[],s=[],o=[],l=new I,h=new x;a.push(0,0,0),s.push(0,0,1),o.push(.5,.5);for(let u=0,c=3;u<=t;u++,c+=3){let d=i+u/t*r;l.x=e*Math.cos(d),l.y=e*Math.sin(d),a.push(l.x,l.y,l.z),s.push(0,0,1),h.x=(a[c]/e+1)/2,h.y=(a[c+1]/e+1)/2,o.push(h.x,h.y)}for(let p=1;p<=t;p++)n.push(p,p+1,0);this.setIndex(n),this.setAttribute("position",new ta(a,3)),this.setAttribute("normal",new ta(s,3)),this.setAttribute("uv",new ta(o,2))}static fromJSON(e){return new ad(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class ap extends tm{constructor(e=1,t=1,i=1,r=8,n=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:n,openEnded:a,thetaStart:s,thetaLength:o};let l=this;r=Math.floor(r),n=Math.floor(n);let h=[],u=[],c=[],d=[],p=0,m=[],f=i/2,g=0;function $(i){let n=p,a=new x,m=new I,$=0,v=!0===i?e:t,y=!0===i?1:-1;for(let b=1;b<=r;b++)u.push(0,f*y,0),c.push(0,y,0),d.push(.5,.5),p++;let w=p;for(let _=0;_<=r;_++){let E=_/r,T=E*o+s,S=Math.cos(T),M=Math.sin(T);m.x=v*M,m.y=f*y,m.z=v*S,u.push(m.x,m.y,m.z),c.push(0,y,0),a.x=.5*S+.5,a.y=.5*M*y+.5,d.push(a.x,a.y),p++}for(let A=0;A<r;A++){let R=n+A,L=w+A;!0===i?h.push(L,L+1,R):h.push(L+1,L,R),$+=3}l.addGroup(g,$,!0===i?1:2),g+=$}(function a(){let $=new I,x=new I,v=0,y=(t-e)/i;for(let b=0;b<=n;b++){let w=[],_=b/n,E=_*(t-e)+e;for(let T=0;T<=r;T++){let S=T/r,M=S*o+s,A=Math.sin(M),R=Math.cos(M);x.x=E*A,x.y=-_*i+f,x.z=E*R,u.push(x.x,x.y,x.z),$.set(A,y,R).normalize(),c.push($.x,$.y,$.z),d.push(S,1-_),w.push(p++)}m.push(w)}for(let L=0;L<r;L++)for(let C=0;C<n;C++){let P=m[C][L],D=m[C+1][L],F=m[C+1][L+1],N=m[C][L+1];h.push(P,D,N),h.push(D,F,N),v+=6}l.addGroup(g,v,0),g+=v})(),!1===a&&(e>0&&$(!0),t>0&&$(!1)),this.setIndex(h),this.setAttribute("position",new ta(u,3)),this.setAttribute("normal",new ta(c,3)),this.setAttribute("uv",new ta(d,2))}static fromJSON(e){return new ap(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class am extends ap{constructor(e=1,t=1,i=8,r=1,n=!1,a=0,s=2*Math.PI){super(0,e,t,i,r,n,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:i,heightSegments:r,openEnded:n,thetaStart:a,thetaLength:s}}static fromJSON(e){return new am(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class af extends tm{constructor(e=[],t=[],i=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r};let n=[],a=[];function s(e,t,i,r){let n=r+1,a=[];for(let s=0;s<=n;s++){a[s]=[];let l=e.clone().lerp(i,s/n),h=t.clone().lerp(i,s/n),u=n-s;for(let c=0;c<=u;c++)0===c&&s===n?a[s][c]=l:a[s][c]=l.clone().lerp(h,c/u)}for(let d=0;d<n;d++)for(let p=0;p<2*(n-d)-1;p++){let m=Math.floor(p/2);p%2==0?(o(a[d][m+1]),o(a[d+1][m]),o(a[d][m])):(o(a[d][m+1]),o(a[d+1][m+1]),o(a[d+1][m]))}}function o(e){n.push(e.x,e.y,e.z)}function l(t,i){let r=3*t;i.x=e[r+0],i.y=e[r+1],i.z=e[r+2]}function h(e,t,i,r){r<0&&1===e.x&&(a[t]=e.x-1),0===i.x&&0===i.z&&(a[t]=r/2/Math.PI+.5)}function u(e){return Math.atan2(e.z,-e.x)}function c(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(function e(i){let r=new I,n=new I,a=new I;for(let o=0;o<t.length;o+=3)l(t[o+0],r),l(t[o+1],n),l(t[o+2],a),s(r,n,a,i)})(r),function e(t){let i=new I;for(let r=0;r<n.length;r+=3)i.x=n[r+0],i.y=n[r+1],i.z=n[r+2],i.normalize().multiplyScalar(t),n[r+0]=i.x,n[r+1]=i.y,n[r+2]=i.z}(i),function e(){let t=new I;for(let i=0;i<n.length;i+=3){t.x=n[i+0],t.y=n[i+1],t.z=n[i+2];let r=u(t)/2/Math.PI+.5,s=c(t)/Math.PI+.5;a.push(r,1-s)}(function e(){let t=new I,i=new I,r=new I,s=new I,o=new x,l=new x,c=new x;for(let d=0,p=0;d<n.length;d+=9,p+=6){t.set(n[d+0],n[d+1],n[d+2]),i.set(n[d+3],n[d+4],n[d+5]),r.set(n[d+6],n[d+7],n[d+8]),o.set(a[p+0],a[p+1]),l.set(a[p+2],a[p+3]),c.set(a[p+4],a[p+5]),s.copy(t).add(i).add(r).divideScalar(3);let m=u(s);h(o,p+0,t,m),h(l,p+2,i,m),h(c,p+4,r,m)}})(),function e(){for(let t=0;t<a.length;t+=6){let i=a[t+0],r=a[t+2],n=a[t+4],s=Math.max(i,r,n),o=Math.min(i,r,n);s>.9&&o<.1&&(i<.2&&(a[t+0]+=1),r<.2&&(a[t+2]+=1),n<.2&&(a[t+4]+=1))}}()}(),this.setAttribute("position",new ta(n,3)),this.setAttribute("normal",new ta(n.slice(),3)),this.setAttribute("uv",new ta(a,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new af(e.vertices,e.indices,e.radius,e.details)}}class ag extends af{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2,r=1/i;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ag(e.radius,e.detail)}}let a$=new I,ax=new I,av=new I,ay=new eV;class a8 extends tm{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){let i=Math.cos(s*t),r=e.getIndex(),n=e.getAttribute("position"),a=r?r.count:n.count,o=[0,0,0],l=["a","b","c"],h=[,,,],u={},c=[];for(let d=0;d<a;d+=3){r?(o[0]=r.getX(d),o[1]=r.getX(d+1),o[2]=r.getX(d+2)):(o[0]=d,o[1]=d+1,o[2]=d+2);let{a:p,b:m,c:f}=ay;if(p.fromBufferAttribute(n,o[0]),m.fromBufferAttribute(n,o[1]),f.fromBufferAttribute(n,o[2]),ay.getNormal(av),h[0]=`${Math.round(1e4*p.x)},${Math.round(1e4*p.y)},${Math.round(1e4*p.z)}`,h[1]=`${Math.round(1e4*m.x)},${Math.round(1e4*m.y)},${Math.round(1e4*m.z)}`,h[2]=`${Math.round(1e4*f.x)},${Math.round(1e4*f.y)},${Math.round(1e4*f.z)}`,h[0]!==h[1]&&h[1]!==h[2]&&h[2]!==h[0])for(let g=0;g<3;g++){let $=(g+1)%3,x=h[g],v=h[$],y=ay[l[g]],b=ay[l[$]],w=`${x}_${v}`,_=`${v}_${x}`;_ in u&&u[_]?(av.dot(u[_].normal)<=i&&(c.push(y.x,y.y,y.z),c.push(b.x,b.y,b.z)),u[_]=null):w in u||(u[w]={index0:o[g],index1:o[$],normal:av.clone()})}}for(let E in u)if(u[E]){let{index0:T,index1:S}=u[E];a$.fromBufferAttribute(n,T),ax.fromBufferAttribute(n,S),c.push(a$.x,a$.y,a$.z),c.push(ax.x,ax.y,ax.z)}this.setAttribute("position",new ta(c,3))}}}class ab{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){let i=this.getUtoTmapping(e);return this.getPoint(i,t)}getPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return t}getSpacedPoints(e=5){let t=[];for(let i=0;i<=e;i++)t.push(this.getPointAt(i/e));return t}getLength(){let e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;let t=[],i,r=this.getPoint(0),n=0;t.push(0);for(let a=1;a<=e;a++)n+=(i=this.getPoint(a/e)).distanceTo(r),t.push(n),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){let i=this.getLengths(),r=0,n=i.length,a;a=t||e*i[n-1];let s=0,o=n-1,l;for(;s<=o;)if((l=i[r=Math.floor(s+(o-s)/2)]-a)<0)s=r+1;else if(l>0)o=r-1;else{o=r;break}if(i[r=o]===a)return r/(n-1);let h=i[r],u=i[r+1],c=(a-h)/(u-h),d=(r+c)/(n-1);return d}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);let n=this.getPoint(i),a=this.getPoint(r),s=t||(n.isVector2?new x:new I);return s.copy(a).sub(n).normalize(),s}getTangentAt(e,t){let i=this.getUtoTmapping(e);return this.getTangent(i,t)}computeFrenetFrames(e,t){let i=new I,r=[],n=[],a=[],s=new I,o=new ec;for(let l=0;l<=e;l++){let u=l/e;r[l]=this.getTangentAt(u,new I)}n[0]=new I,a[0]=new I;let c=Number.MAX_VALUE,d=Math.abs(r[0].x),p=Math.abs(r[0].y),m=Math.abs(r[0].z);d<=c&&(c=d,i.set(1,0,0)),p<=c&&(c=p,i.set(0,1,0)),m<=c&&i.set(0,0,1),s.crossVectors(r[0],i).normalize(),n[0].crossVectors(r[0],s),a[0].crossVectors(r[0],n[0]);for(let f=1;f<=e;f++){if(n[f]=n[f-1].clone(),a[f]=a[f-1].clone(),s.crossVectors(r[f-1],r[f]),s.length()>Number.EPSILON){s.normalize();let g=Math.acos(h(r[f-1].dot(r[f]),-1,1));n[f].applyMatrix4(o.makeRotationAxis(s,g))}a[f].crossVectors(r[f],n[f])}if(!0===t){let $=Math.acos(h(n[0].dot(n[e]),-1,1));$/=e,r[0].dot(s.crossVectors(n[0],n[e]))>0&&($=-$);for(let x=1;x<=e;x++)n[x].applyMatrix4(o.makeRotationAxis(r[x],$*x)),a[x].crossVectors(r[x],n[x])}return{tangents:r,normals:n,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){let e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class aw extends ab{constructor(e=0,t=0,i=1,r=1,n=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){let i=t||new x,r=2*Math.PI,n=this.aEndAngle-this.aStartAngle,a=Math.abs(n)<Number.EPSILON;for(;n<0;)n+=r;for(;n>r;)n-=r;n<Number.EPSILON&&(n=a?0:r),!0!==this.aClockwise||a||(n===r?n=-r:n-=r);let s=this.aStartAngle+e*n,o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){let h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),c=o-this.aX,d=l-this.aY;o=c*h-d*u+this.aX,l=c*u+d*h+this.aY}return i.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){let e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}aw.prototype.isEllipseCurve=!0;class a_ extends aw{constructor(e,t,i,r,n,a){super(e,t,i,i,r,n,a),this.type="ArcCurve"}}function aE(){let e=0,t=0,i=0,r=0;function n(n,a,s,o){e=n,t=s,i=-3*n+3*a-2*s-o,r=2*n-2*a+s+o}return{initCatmullRom:function(e,t,i,r,a){n(t,i,a*(i-e),a*(r-t))},initNonuniformCatmullRom:function(e,t,i,r,a,s,o){let l=(t-e)/a-(i-e)/(a+s)+(i-t)/s,h=(i-t)/s-(r-t)/(s+o)+(r-i)/o;n(t,i,l*=s,h*=s)},calc:function(n){let a=n*n;return e+t*n+i*a+r*(a*n)}}}a_.prototype.isArcCurve=!0;let aT=new I,aS=new aE,aM=new aE,aA=new aE;class aR extends ab{constructor(e=[],t=!1,i="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=i,this.tension=r}getPoint(e,t=new I){let i=t,r=this.points,n=r.length,a=(n-(this.closed?0:1))*e,s=Math.floor(a),o=a-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/n)+1)*n:0===o&&s===n-1&&(s=n-2,o=1);let l,h;this.closed||s>0?l=r[(s-1)%n]:(aT.subVectors(r[0],r[1]).add(r[0]),l=aT);let u=r[s%n],c=r[(s+1)%n];if(this.closed||s+2<n?h=r[(s+2)%n]:(aT.subVectors(r[n-1],r[n-2]).add(r[n-1]),h=aT),"centripetal"===this.curveType||"chordal"===this.curveType){let d="chordal"===this.curveType?.5:.25,p=Math.pow(l.distanceToSquared(u),d),m=Math.pow(u.distanceToSquared(c),d),f=Math.pow(c.distanceToSquared(h),d);m<1e-4&&(m=1),p<1e-4&&(p=m),f<1e-4&&(f=m),aS.initNonuniformCatmullRom(l.x,u.x,c.x,h.x,p,m,f),aM.initNonuniformCatmullRom(l.y,u.y,c.y,h.y,p,m,f),aA.initNonuniformCatmullRom(l.z,u.z,c.z,h.z,p,m,f)}else"catmullrom"===this.curveType&&(aS.initCatmullRom(l.x,u.x,c.x,h.x,this.tension),aM.initCatmullRom(l.y,u.y,c.y,h.y,this.tension),aA.initCatmullRom(l.z,u.z,c.z,h.z,this.tension));return i.set(aS.calc(o),aM.calc(o),aA.calc(o)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let r=e.points[t];this.points.push(new I().fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function aL(e,t,i,r,n){let a=(r-t)*.5,s=(n-i)*.5,o=e*e;return(2*i-2*r+a+s)*(e*o)+(-3*i+3*r-2*a-s)*o+a*e+i}function aC(e,t){return e*e*t}function a0(e,t,i,r){var n,a,s,o;return function e(t,i){let r=1-t;return r*r*i}(e,t)+(n=e,2*(1-n)*n*(a=i))+(s=e,s*s*(o=r))}function aP(e,t,i,r,n){var a,s,o,l;return function e(t,i){let r=1-t;return r*r*r*i}(e,t)+function e(t,i){let r=1-t;return 3*r*r*t*i}(e,i)+(a=e,3*(1-a)*a*a*(s=r))+(o=e,o*o*o*(l=n))}aR.prototype.isCatmullRomCurve3=!0;class a1 extends ab{constructor(e=new x,t=new x,i=new x,r=new x){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new x){let i=t,r=this.v0,n=this.v1,a=this.v2,s=this.v3;return i.set(aP(e,r.x,n.x,a.x,s.x),aP(e,r.y,n.y,a.y,s.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}a1.prototype.isCubicBezierCurve=!0;class aD extends ab{constructor(e=new I,t=new I,i=new I,r=new I){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=i,this.v3=r}getPoint(e,t=new I){let i=t,r=this.v0,n=this.v1,a=this.v2,s=this.v3;return i.set(aP(e,r.x,n.x,a.x,s.x),aP(e,r.y,n.y,a.y,s.y),aP(e,r.z,n.z,a.z,s.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}aD.prototype.isCubicBezierCurve3=!0;class aI extends ab{constructor(e=new x,t=new x){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new x){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){let i=t||new x;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}aI.prototype.isLineCurve=!0;class aF extends ab{constructor(e=new I,t=new I){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new I){let i=t;return 1===e?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(e).add(this.v1)),i}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class aN extends ab{constructor(e=new x,t=new x,i=new x){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new x){let i=t,r=this.v0,n=this.v1,a=this.v2;return i.set(a0(e,r.x,n.x,a.x),a0(e,r.y,n.y,a.y)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}aN.prototype.isQuadraticBezierCurve=!0;class aU extends ab{constructor(e=new I,t=new I,i=new I){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=i}getPoint(e,t=new I){let i=t,r=this.v0,n=this.v1,a=this.v2;return i.set(a0(e,r.x,n.x,a.x),a0(e,r.y,n.y,a.y),a0(e,r.z,n.z,a.z)),i}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){let e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}aU.prototype.isQuadraticBezierCurve3=!0;class aB extends ab{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new x){let i=t,r=this.points,n=(r.length-1)*e,a=Math.floor(n),s=n-a,o=r[0===a?a:a-1],l=r[a],h=r[a>r.length-2?r.length-1:a+1],u=r[a>r.length-3?r.length-1:a+2];return i.set(aL(s,o.x,l.x,h.x,u.x),aL(s,o.y,l.y,h.y,u.y)),i}copy(e){super.copy(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let r=e.points[t];this.points.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.points=[];for(let t=0,i=this.points.length;t<i;t++){let r=this.points[t];e.points.push(r.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,i=e.points.length;t<i;t++){let r=e.points[t];this.points.push(new x().fromArray(r))}return this}}aB.prototype.isSplineCurve=!0;var aO=Object.freeze({__proto__:null,ArcCurve:a_,CatmullRomCurve3:aR,CubicBezierCurve:a1,CubicBezierCurve3:aD,EllipseCurve:aw,LineCurve:aI,LineCurve3:aF,QuadraticBezierCurve:aN,QuadraticBezierCurve3:aU,SplineCurve:aB});class az extends ab{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){let e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new aI(t,e))}getPoint(e,t){let i=e*this.getLength(),r=this.getCurveLengths(),n=0;for(;n<r.length;){if(r[n]>=i){let a=r[n]-i,s=this.curves[n],o=s.getLength(),l=0===o?0:1-a/o;return s.getPointAt(l,t)}n++}return null}getLength(){let e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;let e=[],t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){let t=[];for(let i=0;i<=e;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){let t=[],i;for(let r=0,n=this.curves;r<n.length;r++){let a=n[r],s=a&&a.isEllipseCurve?2*e:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?e*a.points.length:e,o=a.getPoints(s);for(let l=0;l<o.length;l++){let h=o[l];i&&i.equals(h)||(t.push(h),i=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}toJSON(){let e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,i=this.curves.length;t<i;t++){let r=this.curves[t];e.curves.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,i=e.curves.length;t<i;t++){let r=e.curves[t];this.curves.push(new aO[r.type]().fromJSON(r))}return this}}class aH extends az{constructor(e){super(),this.type="Path",this.currentPoint=new x,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,i=e.length;t<i;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){let i=new aI(this.currentPoint.clone(),new x(e,t));return this.curves.push(i),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,i,r){let n=new aN(this.currentPoint.clone(),new x(e,t),new x(i,r));return this.curves.push(n),this.currentPoint.set(i,r),this}bezierCurveTo(e,t,i,r,n,a){let s=new a1(this.currentPoint.clone(),new x(e,t),new x(i,r),new x(n,a));return this.curves.push(s),this.currentPoint.set(n,a),this}splineThru(e){let t=[this.currentPoint.clone()].concat(e),i=new aB(t);return this.curves.push(i),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,i,r,n,a){let s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,i,r,n,a),this}absarc(e,t,i,r,n,a){return this.absellipse(e,t,i,i,r,n,a),this}ellipse(e,t,i,r,n,a,s,o){let l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,i,r,n,a,s,o),this}absellipse(e,t,i,r,n,a,s,o){let l=new aw(e,t,i,r,n,a,s,o);if(this.curves.length>0){let h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);let u=l.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){let e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class aG extends aH{constructor(e){super(e),this.uuid=l(),this.type="Shape",this.holes=[]}getPointsHoles(e){let t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let r=e.holes[t];this.holes.push(r.clone())}return this}toJSON(){let e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,i=this.holes.length;t<i;t++){let r=this.holes[t];e.holes.push(r.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,i=e.holes.length;t<i;t++){let r=e.holes[t];this.holes.push(new aH().fromJSON(r))}return this}}let a2={triangulate:function(e,t,i=2){let r=t&&t.length,n=r?t[0]*i:e.length,a=aV(e,0,n,i,!0),s=[];if(!a||a.next===a.prev)return s;let o,l,h,u,c,d,p;if(r&&(a=function e(t,i,r,n){let a=[],s,o,l,h,u;for(s=0,o=i.length;s<o;s++)l=i[s]*n,h=s<o-1?i[s+1]*n:t.length,(u=aV(t,l,h,n,!1))===u.next&&(u.steiner=!0),a.push(aY(u));for(a.sort(aj),s=0;s<a.length;s++)a5(a[s],r),r=ak(r,r.next);return r}(e,t,a,i)),e.length>80*i){o=h=e[0],l=u=e[1];for(let m=i;m<n;m+=i)c=e[m],d=e[m+1],c<o&&(o=c),d<l&&(l=d),c>h&&(h=c),d>u&&(u=d);p=0!==(p=Math.max(h-o,u-l))?1/p:0}return aW(a,s,i,o,l,p),s}};function aV(e,t,i,r,n){let a,s;if(n===function e(t,i,r,n){let a=0;for(let s=i,o=r-n;s<r;s+=n)a+=(t[o]-t[s])*(t[s+1]+t[o+1]),o=s;return a}(e,t,i,r)>0)for(a=t;a<i;a+=r)s=sn(a,e[a],e[a+1],s);else for(a=i-r;a>=t;a-=r)s=sn(a,e[a],e[a+1],s);return s&&aQ(s,s.next)&&(sa(s),s=s.next),s}function ak(e,t){if(!e)return e;t||(t=e);let i=e,r;do if(r=!1,!i.steiner&&(aQ(i,i.next)||0===aK(i.prev,i,i.next))){if(sa(i),(i=t=i.prev)===i.next)break;r=!0}else i=i.next;while(r||i!==t);return t}function aW(e,t,i,r,n,a,s){if(!e)return;!s&&a&&function e(t,i,r,n){let a=t;do null===a.z&&(a.z=aq(a.x,a.y,i,r,n)),a.prevZ=a.prev,a.nextZ=a.next,a=a.next;while(a!==t);a.prevZ.nextZ=null,a.prevZ=null,function e(t){let i,r,n,a,s,o,l,h,u=1;do{for(r=t,t=null,s=null,o=0;r;){for(o++,n=r,l=0,i=0;i<u&&(l++,n=n.nextZ);i++);for(h=u;l>0||h>0&&n;)0!==l&&(0===h||!n||r.z<=n.z)?(a=r,r=r.nextZ,l--):(a=n,n=n.nextZ,h--),s?s.nextZ=a:t=a,a.prevZ=s,s=a;r=n}s.nextZ=null,u*=2}while(o>1);return t}(a)}(e,r,n,a);let o=e,l,h;for(;e.prev!==e.next;){if(l=e.prev,h=e.next,a?a6(e,r,n,a):a3(e)){t.push(l.i/i),t.push(e.i/i),t.push(h.i/i),sa(e),e=h.next,o=h.next;continue}if((e=h)===o){s?1===s?aW(e=a4(ak(e),t,i),t,i,r,n,a,2):2===s&&aX(e,t,i,r,n,a):aW(ak(e),t,i,r,n,a,1);break}}}function a3(e){let t=e.prev,i=e,r=e.next;if(aK(t,i,r)>=0)return!1;let n=e.next.next;for(;n!==e.prev;){if(aZ(t.x,t.y,i.x,i.y,r.x,r.y,n.x,n.y)&&aK(n.prev,n,n.next)>=0)return!1;n=n.next}return!0}function a6(e,t,i,r){let n=e.prev,a=e,s=e.next;if(aK(n,a,s)>=0)return!1;let o=n.x<a.x?n.x<s.x?n.x:s.x:a.x<s.x?a.x:s.x,l=n.y<a.y?n.y<s.y?n.y:s.y:a.y<s.y?a.y:s.y,h=n.x>a.x?n.x>s.x?n.x:s.x:a.x>s.x?a.x:s.x,u=n.y>a.y?n.y>s.y?n.y:s.y:a.y>s.y?a.y:s.y,c=aq(o,l,t,i,r),d=aq(h,u,t,i,r),p=e.prevZ,m=e.nextZ;for(;p&&p.z>=c&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&aZ(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&aK(p.prev,p,p.next)>=0||(p=p.prevZ,m!==e.prev&&m!==e.next&&aZ(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&aK(m.prev,m,m.next)>=0))return!1;m=m.nextZ}for(;p&&p.z>=c;){if(p!==e.prev&&p!==e.next&&aZ(n.x,n.y,a.x,a.y,s.x,s.y,p.x,p.y)&&aK(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&aZ(n.x,n.y,a.x,a.y,s.x,s.y,m.x,m.y)&&aK(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function a4(e,t,i){let r=e;do{let n=r.prev,a=r.next.next;!aQ(n,a)&&a9(n,r,r.next,a)&&si(n,a)&&si(a,n)&&(t.push(n.i/i),t.push(r.i/i),t.push(a.i/i),sa(r),sa(r.next),r=e=a),r=r.next}while(r!==e);return ak(r)}function aX(e,t,i,r,n,a){let s=e;do{let o=s.next.next;for(;o!==s.prev;){if(s.i!==o.i&&aJ(s,o)){let l=sr(s,o);s=ak(s,s.next),l=ak(l,l.next),aW(s,t,i,r,n,a),aW(l,t,i,r,n,a);return}o=o.next}s=s.next}while(s!==e)}function aj(e,t){return e.x-t.x}function a5(e,t){if(t=function e(t,i){let r=i,n=t.x,a=t.y,s=-1/0,o;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){let l=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(l<=n&&l>s){if(s=l,l===n){if(a===r.y)return r;if(a===r.next.y)return r.next}o=r.x<r.next.x?r:r.next}}r=r.next}while(r!==i);if(!o)return null;if(n===s)return o;let h=o,u=o.x,c=o.y,d=1/0,p;r=o;do n>=r.x&&r.x>=u&&n!==r.x&&aZ(a<c?n:s,a,u,c,a<c?s:n,a,r.x,r.y)&&(p=Math.abs(a-r.y)/(n-r.x),si(r,t)&&(p<d||p===d&&(r.x>o.x||r.x===o.x&&a7(o,r)))&&(o=r,d=p)),r=r.next;while(r!==h);return o}(e,t)){let i=sr(t,e);ak(t,t.next),ak(i,i.next)}}function a7(e,t){return 0>aK(e.prev,e,t.prev)&&0>aK(t.next,e,e.next)}function aq(e,t,i,r,n){return(e=((e=((e=((e=((e=32767*(e-i)*n)|e<<8)&16711935)|e<<4)&252645135)|e<<2)&858993459)|e<<1)&1431655765)|(t=((t=((t=((t=((t=32767*(t-r)*n)|t<<8)&16711935)|t<<4)&252645135)|t<<2)&858993459)|t<<1)&1431655765)<<1}function aY(e){let t=e,i=e;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==e);return i}function aZ(e,t,i,r,n,a,s,o){return(n-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(r-o)-(i-s)*(t-o)>=0&&(i-s)*(a-o)-(n-s)*(r-o)>=0}function aJ(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function e(t,i){let r=t;do{if(r.i!==t.i&&r.next.i!==t.i&&r.i!==i.i&&r.next.i!==i.i&&a9(r,r.next,t,i))return!0;r=r.next}while(r!==t);return!1}(e,t)&&(si(e,t)&&si(t,e)&&function e(t,i){let r=t,n=!1,a=(t.x+i.x)/2,s=(t.y+i.y)/2;do r.y>s!=r.next.y>s&&r.next.y!==r.y&&a<(r.next.x-r.x)*(s-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next;while(r!==t);return n}(e,t)&&(aK(e.prev,e,t.prev)||aK(e,t.prev,t))||aQ(e,t)&&aK(e.prev,e,e.next)>0&&aK(t.prev,t,t.next)>0)}function aK(e,t,i){return(t.y-e.y)*(i.x-t.x)-(t.x-e.x)*(i.y-t.y)}function aQ(e,t){return e.x===t.x&&e.y===t.y}function a9(e,t,i,r){let n=st(aK(e,t,i)),a=st(aK(e,t,r)),s=st(aK(i,r,e)),o=st(aK(i,r,t));return!!(n!==a&&s!==o||0===n&&se(e,i,t)||0===a&&se(e,r,t)||0===s&&se(i,e,r)||0===o&&se(i,t,r))}function se(e,t,i){return t.x<=Math.max(e.x,i.x)&&t.x>=Math.min(e.x,i.x)&&t.y<=Math.max(e.y,i.y)&&t.y>=Math.min(e.y,i.y)}function st(e){return e>0?1:e<0?-1:0}function si(e,t){return 0>aK(e.prev,e,e.next)?aK(e,t,e.next)>=0&&aK(e,e.prev,t)>=0:0>aK(e,t,e.prev)||0>aK(e,e.next,t)}function sr(e,t){let i=new ss(e.i,e.x,e.y),r=new ss(t.i,t.x,t.y),n=e.next,a=t.prev;return e.next=t,t.prev=e,i.next=n,n.prev=i,r.next=i,i.prev=r,a.next=r,r.prev=a,r}function sn(e,t,i,r){let n=new ss(e,t,i);return r?(n.next=r.next,n.prev=r,r.next.prev=n,r.next=n):(n.prev=n,n.next=n),n}function sa(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function ss(e,t,i){this.i=e,this.x=t,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class so{static area(e){let t=e.length,i=0;for(let r=t-1,n=0;n<t;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return .5*i}static isClockWise(e){return 0>so.area(e)}static triangulateShape(e,t){let i=[],r=[],n=[];sl(e),sh(i,e);let a=e.length;t.forEach(sl);for(let s=0;s<t.length;s++)r.push(a),a+=t[s].length,sh(i,t[s]);let o=a2.triangulate(i,r);for(let l=0;l<o.length;l+=3)n.push(o.slice(l,l+3));return n}}function sl(e){let t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function sh(e,t){for(let i=0;i<t.length;i++)e.push(t[i].x),e.push(t[i].y)}class su extends tm{constructor(e=new aG([new x(.5,.5),new x(-.5,.5),new x(-.5,-.5),new x(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];let i=this,r=[],n=[];for(let a=0,s=e.length;a<s;a++){let o=e[a];l(o)}function l(e){let a=[],s=void 0!==t.curveSegments?t.curveSegments:12,o=void 0!==t.steps?t.steps:1,l=void 0!==t.depth?t.depth:1,h=void 0===t.bevelEnabled||t.bevelEnabled,u=void 0!==t.bevelThickness?t.bevelThickness:.2,c=void 0!==t.bevelSize?t.bevelSize:u-.1,d=void 0!==t.bevelOffset?t.bevelOffset:0,p=void 0!==t.bevelSegments?t.bevelSegments:3,m=t.extrudePath,f=void 0!==t.UVGenerator?t.UVGenerator:sc;void 0!==t.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),l=t.amount);let g,$=!1,v,y,b,w;m&&(g=m.getSpacedPoints(o),$=!0,h=!1,v=m.computeFrenetFrames(o,!1),y=new I,b=new I,w=new I),h||(p=0,u=0,c=0,d=0);let _=e.extractPoints(s),E=_.shape,T=_.holes,S=!so.isClockWise(E);if(S){E=E.reverse();for(let M=0,A=T.length;M<A;M++){let R=T[M];so.isClockWise(R)&&(T[M]=R.reverse())}}let L=so.triangulateShape(E,T),C=E;for(let P=0,D=T.length;P<D;P++){let F=T[P];E=E.concat(F)}function N(e,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(i).add(e)}let U=E.length,B=L.length;function O(e,t,i){let r,n,a,s=e.x-t.x,o=e.y-t.y,l=i.x-e.x,h=i.y-e.y,u=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){let c=Math.sqrt(u),d=Math.sqrt(l*l+h*h),p=t.x-o/c,m=t.y+s/c,f=i.x-h/d,g=i.y+l/d,$=((f-p)*h-(g-m)*l)/(s*h-o*l);r=p+s*$-e.x,n=m+o*$-e.y;let v=r*r+n*n;if(v<=2)return new x(r,n);a=Math.sqrt(v/2)}else{let y=!1;s>Number.EPSILON?l>Number.EPSILON&&(y=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(y=!0):Math.sign(o)===Math.sign(h)&&(y=!0),y?(r=-o,n=s,a=Math.sqrt(u)):(r=s,n=o,a=Math.sqrt(u/2))}return new x(r/a,n/a)}let z=[];for(let H=0,G=C.length,V=G-1,k=H+1;H<G;H++,V++,k++)V===G&&(V=0),k===G&&(k=0),z[H]=O(C[H],C[V],C[k]);let W=[],X,j=z.concat();for(let q=0,Y=T.length;q<Y;q++){let Z=T[q];X=[];for(let J=0,K=Z.length,Q=K-1,ee=J+1;J<K;J++,Q++,ee++)Q===K&&(Q=0),ee===K&&(ee=0),X[J]=O(Z[J],Z[Q],Z[ee]);W.push(X),j=j.concat(X)}for(let et=0;et<p;et++){let ei=et/p,er=u*Math.cos(ei*Math.PI/2),en=c*Math.sin(ei*Math.PI/2)+d;for(let ea=0,es=C.length;ea<es;ea++){let eo=N(C[ea],z[ea],en);eP(eo.x,eo.y,-er)}for(let el=0,eh=T.length;el<eh;el++){let eu=T[el];X=W[el];for(let ec=0,ed=eu.length;ec<ed;ec++){let ep=N(eu[ec],X[ec],en);eP(ep.x,ep.y,-er)}}}let em=c+d;for(let ef=0;ef<U;ef++){let eg=h?N(E[ef],j[ef],em):E[ef];$?(b.copy(v.normals[0]).multiplyScalar(eg.x),y.copy(v.binormals[0]).multiplyScalar(eg.y),w.copy(g[0]).add(b).add(y),eP(w.x,w.y,w.z)):eP(eg.x,eg.y,0)}for(let e$=1;e$<=o;e$++)for(let ex=0;ex<U;ex++){let ev=h?N(E[ex],j[ex],em):E[ex];$?(b.copy(v.normals[e$]).multiplyScalar(ev.x),y.copy(v.binormals[e$]).multiplyScalar(ev.y),w.copy(g[e$]).add(b).add(y),eP(w.x,w.y,w.z)):eP(ev.x,ev.y,l/o*e$)}for(let ey=p-1;ey>=0;ey--){let e8=ey/p,eb=u*Math.cos(e8*Math.PI/2),ew=c*Math.sin(e8*Math.PI/2)+d;for(let e_=0,eE=C.length;e_<eE;e_++){let eT=N(C[e_],z[e_],ew);eP(eT.x,eT.y,l+eb)}for(let eS=0,eM=T.length;eS<eM;eS++){let eA=T[eS];X=W[eS];for(let eR=0,eL=eA.length;eR<eL;eR++){let eC=N(eA[eR],X[eR],ew);$?eP(eC.x,eC.y+g[o-1].y,g[o-1].x+eb):eP(eC.x,eC.y,l+eb)}}}function e0(e,t){let i=e.length;for(;--i>=0;){let r=i,n=i-1;n<0&&(n=e.length-1);for(let a=0,s=o+2*p;a<s;a++){let l=U*a,h=U*(a+1),u=t+r+l,c=t+n+l,d=t+n+h,m=t+r+h;eD(u,c,d,m)}}}function eP(e,t,i){a.push(e),a.push(t),a.push(i)}function e1(e,t,n){eI(e),eI(t),eI(n);let a=r.length/3,s=f.generateTopUV(i,r,a-3,a-2,a-1);eF(s[0]),eF(s[1]),eF(s[2])}function eD(e,t,n,a){eI(e),eI(t),eI(a),eI(t),eI(n),eI(a);let s=r.length/3,o=f.generateSideWallUV(i,r,s-6,s-3,s-2,s-1);eF(o[0]),eF(o[1]),eF(o[3]),eF(o[1]),eF(o[2]),eF(o[3])}function eI(e){r.push(a[3*e+0]),r.push(a[3*e+1]),r.push(a[3*e+2])}function eF(e){n.push(e.x),n.push(e.y)}(function e(){let t=r.length/3;if(h){let n=0,a=U*n;for(let s=0;s<B;s++){let l=L[s];e1(l[2]+a,l[1]+a,l[0]+a)}a=U*(n=o+2*p);for(let u=0;u<B;u++){let c=L[u];e1(c[0]+a,c[1]+a,c[2]+a)}}else{for(let d=0;d<B;d++){let m=L[d];e1(m[2],m[1],m[0])}for(let f=0;f<B;f++){let g=L[f];e1(g[0]+U*o,g[1]+U*o,g[2]+U*o)}}i.addGroup(t,r.length/3-t,0)})(),function e(){let t=r.length/3,n=0;e0(C,n),n+=C.length;for(let a=0,s=T.length;a<s;a++){let o=T[a];e0(o,n),n+=o.length}i.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new ta(r,3)),this.setAttribute("uv",new ta(n,2)),this.computeVertexNormals()}toJSON(){let e=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return function e(t,i,r){if(r.shapes=[],Array.isArray(t))for(let n=0,a=t.length;n<a;n++){let s=t[n];r.shapes.push(s.uuid)}else r.shapes.push(t.uuid);return void 0!==i.extrudePath&&(r.options.extrudePath=i.extrudePath.toJSON()),r}(t,i,e)}static fromJSON(e,t){let i=[];for(let r=0,n=e.shapes.length;r<n;r++){let a=t[e.shapes[r]];i.push(a)}let s=e.options.extrudePath;return void 0!==s&&(e.options.extrudePath=new aO[s.type]().fromJSON(s)),new su(i,e.options)}}let sc={generateTopUV:function(e,t,i,r,n){let a=t[3*i],s=t[3*i+1],o=t[3*r],l=t[3*r+1],h=t[3*n],u=t[3*n+1];return[new x(a,s),new x(o,l),new x(h,u)]},generateSideWallUV:function(e,t,i,r,n,a){let s=t[3*i],o=t[3*i+1],l=t[3*i+2],h=t[3*r],u=t[3*r+1],c=t[3*r+2],d=t[3*n],p=t[3*n+1],m=t[3*n+2],f=t[3*a],g=t[3*a+1],$=t[3*a+2];return Math.abs(o-u)<Math.abs(s-h)?[new x(s,1-l),new x(h,1-c),new x(d,1-m),new x(f,1-$)]:[new x(o,1-l),new x(u,1-c),new x(p,1-m),new x(g,1-$)]}};class sd extends af{constructor(e=1,t=0){let i=(1+Math.sqrt(5))/2;super([-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sd(e.radius,e.detail)}}class sp extends tm{constructor(e=[new x(0,.5),new x(.5,0),new x(0,-.5)],t=12,i=0,r=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t),r=h(r,0,2*Math.PI);let n=[],a=[],s=[],o=[],l=[],u=1/t,c=new I,d=new x,p=new I,m=new I,f=new I,g=0,$=0;for(let v=0;v<=e.length-1;v++)switch(v){case 0:g=e[v+1].x-e[v].x,$=e[v+1].y-e[v].y,p.x=1*$,p.y=-g,p.z=0*$,f.copy(p),p.normalize(),o.push(p.x,p.y,p.z);break;case e.length-1:o.push(f.x,f.y,f.z);break;default:g=e[v+1].x-e[v].x,$=e[v+1].y-e[v].y,p.x=1*$,p.y=-g,p.z=0*$,m.copy(p),p.x+=f.x,p.y+=f.y,p.z+=f.z,p.normalize(),o.push(p.x,p.y,p.z),f.copy(m)}for(let y=0;y<=t;y++){let b=i+y*u*r,w=Math.sin(b),_=Math.cos(b);for(let E=0;E<=e.length-1;E++){c.x=e[E].x*w,c.y=e[E].y,c.z=e[E].x*_,a.push(c.x,c.y,c.z),d.x=y/t,d.y=E/(e.length-1),s.push(d.x,d.y);let T=o[3*E+0]*w,S=o[3*E+1],M=o[3*E+0]*_;l.push(T,S,M)}}for(let A=0;A<t;A++)for(let R=0;R<e.length-1;R++){let L=R+A*e.length,C=L,P=L+e.length,D=L+e.length+1,F=L+1;n.push(C,P,F),n.push(P,D,F)}this.setIndex(n),this.setAttribute("position",new ta(a,3)),this.setAttribute("uv",new ta(s,2)),this.setAttribute("normal",new ta(l,3))}static fromJSON(e){return new sp(e.points,e.segments,e.phiStart,e.phiLength)}}class sm extends af{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sm(e.radius,e.detail)}}class sf extends tm{constructor(e=.5,t=1,i=8,r=1,n=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:a},i=Math.max(3,i),r=Math.max(1,r);let s=[],o=[],l=[],h=[],u=e,c=(t-e)/r,d=new I,p=new x;for(let m=0;m<=r;m++){for(let f=0;f<=i;f++){let g=n+f/i*a;d.x=u*Math.cos(g),d.y=u*Math.sin(g),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}u+=c}for(let $=0;$<r;$++){let v=$*(i+1);for(let y=0;y<i;y++){let b=y+v,w=b,_=b+i+1,E=b+i+2,T=b+1;s.push(w,_,T),s.push(_,E,T)}}this.setIndex(s),this.setAttribute("position",new ta(o,3)),this.setAttribute("normal",new ta(l,3)),this.setAttribute("uv",new ta(h,2))}static fromJSON(e){return new sf(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class sg extends tm{constructor(e=new aG([new x(0,.5),new x(-.5,-.5),new x(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};let i=[],r=[],n=[],a=[],s=0,o=0;if(!1===Array.isArray(e))h(e);else for(let l=0;l<e.length;l++)h(e[l]),this.addGroup(s,o,l),s+=o,o=0;function h(e){let s=r.length/3,l=e.extractPoints(t),h=l.shape,u=l.holes;!1===so.isClockWise(h)&&(h=h.reverse());for(let c=0,d=u.length;c<d;c++){let p=u[c];!0===so.isClockWise(p)&&(u[c]=p.reverse())}let m=so.triangulateShape(h,u);for(let f=0,g=u.length;f<g;f++){let $=u[f];h=h.concat($)}for(let x=0,v=h.length;x<v;x++){let y=h[x];r.push(y.x,y.y,0),n.push(0,0,1),a.push(y.x,y.y)}for(let b=0,w=m.length;b<w;b++){let _=m[b],E=_[0]+s,T=_[1]+s,S=_[2]+s;i.push(E,T,S),o+=3}}this.setIndex(i),this.setAttribute("position",new ta(r,3)),this.setAttribute("normal",new ta(n,3)),this.setAttribute("uv",new ta(a,2))}toJSON(){let e=super.toJSON(),t=this.parameters.shapes;return function e(t,i){if(i.shapes=[],Array.isArray(t))for(let r=0,n=t.length;r<n;r++){let a=t[r];i.shapes.push(a.uuid)}else i.shapes.push(t.uuid);return i}(t,e)}static fromJSON(e,t){let i=[];for(let r=0,n=e.shapes.length;r<n;r++){let a=t[e.shapes[r]];i.push(a)}return new sg(i,e.curveSegments)}}class s$ extends tm{constructor(e=1,t=32,i=16,r=0,n=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:n,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));let o=Math.min(a+s,Math.PI),l=0,h=[],u=new I,c=new I,d=[],p=[],m=[],f=[];for(let g=0;g<=i;g++){let $=[],x=g/i,v=0;0==g&&0==a?v=.5/t:g==i&&o==Math.PI&&(v=-.5/t);for(let y=0;y<=t;y++){let b=y/t;u.x=-e*Math.cos(r+b*n)*Math.sin(a+x*s),u.y=e*Math.cos(a+x*s),u.z=e*Math.sin(r+b*n)*Math.sin(a+x*s),p.push(u.x,u.y,u.z),c.copy(u).normalize(),m.push(c.x,c.y,c.z),f.push(b+v,1-x),$.push(l++)}h.push($)}for(let w=0;w<i;w++)for(let _=0;_<t;_++){let E=h[w][_+1],T=h[w][_],S=h[w+1][_],M=h[w+1][_+1];(0!==w||a>0)&&d.push(E,T,M),(w!==i-1||o<Math.PI)&&d.push(T,S,M)}this.setIndex(d),this.setAttribute("position",new ta(p,3)),this.setAttribute("normal",new ta(m,3)),this.setAttribute("uv",new ta(f,2))}static fromJSON(e){return new s$(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class sx extends af{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new sx(e.radius,e.detail)}}class sv extends tm{constructor(e=1,t=.4,i=8,r=6,n=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:n},i=Math.floor(i),r=Math.floor(r);let a=[],s=[],o=[],l=[],h=new I,u=new I,c=new I;for(let d=0;d<=i;d++)for(let p=0;p<=r;p++){let m=p/r*n,f=d/i*Math.PI*2;u.x=(e+t*Math.cos(f))*Math.cos(m),u.y=(e+t*Math.cos(f))*Math.sin(m),u.z=t*Math.sin(f),s.push(u.x,u.y,u.z),h.x=e*Math.cos(m),h.y=e*Math.sin(m),c.subVectors(u,h).normalize(),o.push(c.x,c.y,c.z),l.push(p/r),l.push(d/i)}for(let g=1;g<=i;g++)for(let $=1;$<=r;$++){let x=(r+1)*g+$-1,v=(r+1)*(g-1)+$-1,y=(r+1)*(g-1)+$,b=(r+1)*g+$;a.push(x,v,b),a.push(v,y,b)}this.setIndex(a),this.setAttribute("position",new ta(s,3)),this.setAttribute("normal",new ta(o,3)),this.setAttribute("uv",new ta(l,2))}static fromJSON(e){return new sv(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class sy extends tm{constructor(e=1,t=.4,i=64,r=8,n=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:n,q:a},i=Math.floor(i),r=Math.floor(r);let s=[],o=[],l=[],h=[],u=new I,c=new I,d=new I,p=new I,m=new I,f=new I,g=new I;for(let $=0;$<=i;++$){let x=$/i*n*Math.PI*2;R(x,n,a,e,d),R(x+.01,n,a,e,p),f.subVectors(p,d),g.addVectors(p,d),m.crossVectors(f,g),g.crossVectors(m,f),m.normalize(),g.normalize();for(let v=0;v<=r;++v){let y=v/r*Math.PI*2,b=-t*Math.cos(y),w=t*Math.sin(y);u.x=d.x+(b*g.x+w*m.x),u.y=d.y+(b*g.y+w*m.y),u.z=d.z+(b*g.z+w*m.z),o.push(u.x,u.y,u.z),c.subVectors(u,d).normalize(),l.push(c.x,c.y,c.z),h.push($/i),h.push(v/r)}}for(let _=1;_<=i;_++)for(let E=1;E<=r;E++){let T=(r+1)*(_-1)+(E-1),S=(r+1)*_+(E-1),M=(r+1)*_+E,A=(r+1)*(_-1)+E;s.push(T,S,A),s.push(S,M,A)}function R(e,t,i,r,n){let a=i/t*e,s=Math.cos(a);n.x=r*(2+s)*.5*Math.cos(e),n.y=r*(2+s)*Math.sin(e)*.5,n.z=r*Math.sin(a)*.5}this.setIndex(s),this.setAttribute("position",new ta(o,3)),this.setAttribute("normal",new ta(l,3)),this.setAttribute("uv",new ta(h,2))}static fromJSON(e){return new sy(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class s8 extends tm{constructor(e=new aU(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,i=1,r=8,n=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:i,radialSegments:r,closed:n};let a=e.computeFrenetFrames(t,n);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;let s=new I,o=new I,l=new x,h=new I,u=[],c=[],d=[],p=[];function m(n){h=e.getPointAt(n/t,h);let l=a.normals[n],d=a.binormals[n];for(let p=0;p<=r;p++){let m=p/r*Math.PI*2,f=Math.sin(m),g=-Math.cos(m);o.x=g*l.x+f*d.x,o.y=g*l.y+f*d.y,o.z=g*l.z+f*d.z,o.normalize(),c.push(o.x,o.y,o.z),s.x=h.x+i*o.x,s.y=h.y+i*o.y,s.z=h.z+i*o.z,u.push(s.x,s.y,s.z)}}(function e(){for(let i=0;i<t;i++)m(i);m(!1===n?t:0),function e(){for(let i=0;i<=t;i++)for(let n=0;n<=r;n++)l.x=i/t,l.y=n/r,d.push(l.x,l.y)}(),function e(){for(let i=1;i<=t;i++)for(let n=1;n<=r;n++){let a=(r+1)*(i-1)+(n-1),s=(r+1)*i+(n-1),o=(r+1)*i+n,l=(r+1)*(i-1)+n;p.push(a,s,l),p.push(s,o,l)}}()})(),this.setIndex(p),this.setAttribute("position",new ta(u,3)),this.setAttribute("normal",new ta(c,3)),this.setAttribute("uv",new ta(d,2))}toJSON(){let e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new s8(new aO[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class sb extends tm{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){let t=[],i=new Set,r=new I,n=new I;if(null!==e.index){let a=e.attributes.position,s=e.index,o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let l=0,h=o.length;l<h;++l){let u=o[l],c=u.start,d=u.count;for(let p=c,m=c+d;p<m;p+=3)for(let f=0;f<3;f++){let g=s.getX(p+f),$=s.getX(p+(f+1)%3);r.fromBufferAttribute(a,g),n.fromBufferAttribute(a,$),!0===sw(r,n,i)&&(t.push(r.x,r.y,r.z),t.push(n.x,n.y,n.z))}}}else{let x=e.attributes.position;for(let v=0,y=x.count/3;v<y;v++)for(let b=0;b<3;b++){let w=3*v+b,_=3*v+(b+1)%3;r.fromBufferAttribute(x,w),n.fromBufferAttribute(x,_),!0===sw(r,n,i)&&(t.push(r.x,r.y,r.z),t.push(n.x,n.y,n.z))}}this.setAttribute("position",new ta(t,3))}}}function sw(e,t,i){let r=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,n=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==i.has(r)&&!0!==i.has(n)&&(i.add(r,n),!0)}var s_=Object.freeze({__proto__:null,BoxGeometry:tP,BoxBufferGeometry:tP,CircleGeometry:ad,CircleBufferGeometry:ad,ConeGeometry:am,ConeBufferGeometry:am,CylinderGeometry:ap,CylinderBufferGeometry:ap,DodecahedronGeometry:ag,DodecahedronBufferGeometry:ag,EdgesGeometry:a8,ExtrudeGeometry:su,ExtrudeBufferGeometry:su,IcosahedronGeometry:sd,IcosahedronBufferGeometry:sd,LatheGeometry:sp,LatheBufferGeometry:sp,OctahedronGeometry:sm,OctahedronBufferGeometry:sm,PlaneGeometry:tX,PlaneBufferGeometry:tX,PolyhedronGeometry:af,PolyhedronBufferGeometry:af,RingGeometry:sf,RingBufferGeometry:sf,ShapeGeometry:sg,ShapeBufferGeometry:sg,SphereGeometry:s$,SphereBufferGeometry:s$,TetrahedronGeometry:sx,TetrahedronBufferGeometry:sx,TorusGeometry:sv,TorusBufferGeometry:sv,TorusKnotGeometry:sy,TorusKnotBufferGeometry:sy,TubeGeometry:s8,TubeBufferGeometry:s8,WireframeGeometry:sb});class sE extends eW{constructor(e){super(),this.type="ShadowMaterial",this.color=new e7(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}sE.prototype.isShadowMaterial=!0;class sT extends eW{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new e7(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new e7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}sT.prototype.isMeshStandardMaterial=!0;class sS extends sT{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new x(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return h(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new e7(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new e7(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new e7(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}sS.prototype.isMeshPhysicalMaterial=!0;class sM extends eW{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new e7(16777215),this.specular=new e7(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new e7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}sM.prototype.isMeshPhongMaterial=!0;class sA extends eW{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new e7(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new e7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}sA.prototype.isMeshToonMaterial=!0;class sR extends eW{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}sR.prototype.isMeshNormalMaterial=!0;class sL extends eW{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new e7(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new e7(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}sL.prototype.isMeshLambertMaterial=!0;class sC extends eW{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new e7(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new x(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}sC.prototype.isMeshMatcapMaterial=!0;class s0 extends nj{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}s0.prototype.isLineDashedMaterial=!0;var sP=Object.freeze({__proto__:null,ShadowMaterial:sE,SpriteMaterial:nx,RawShaderMaterial:ie,ShaderMaterial:tF,PointsMaterial:at,MeshPhysicalMaterial:sS,MeshStandardMaterial:sT,MeshPhongMaterial:sM,MeshToonMaterial:sA,MeshNormalMaterial:sR,MeshLambertMaterial:sL,MeshDepthMaterial:rK,MeshDistanceMaterial:rQ,MeshBasicMaterial:eq,MeshMatcapMaterial:sC,LineDashedMaterial:s0,LineBasicMaterial:nj,Material:eW});let s1={arraySlice:function(e,t,i){return s1.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==i?i:e.length)):e.slice(t,i)},convertArray:function(e,t,i){return e&&(i||e.constructor!==t)?"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e):e},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){let t=e.length,i=Array(t);for(let r=0;r!==t;++r)i[r]=r;return i.sort(function t(i,r){return e[i]-e[r]}),i},sortedArray:function(e,t,i){let r=e.length,n=new e.constructor(r);for(let a=0,s=0;s!==r;++a){let o=i[a]*t;for(let l=0;l!==t;++l)n[s++]=e[o+l]}return n},flattenJSON:function(e,t,i,r){let n=1,a=e[0];for(;void 0!==a&&void 0===a[r];)a=e[n++];if(void 0===a)return;let s=a[r];if(void 0!==s){if(Array.isArray(s))do void 0!==(s=a[r])&&(t.push(a.time),i.push.apply(i,s)),a=e[n++];while(void 0!==a);else if(void 0!==s.toArray)do void 0!==(s=a[r])&&(t.push(a.time),s.toArray(i,i.length)),a=e[n++];while(void 0!==a);else do void 0!==(s=a[r])&&(t.push(a.time),i.push(s)),a=e[n++];while(void 0!==a)}},subclip:function(e,t,i,r,n=30){let a=e.clone();a.name=t;let s=[];for(let o=0;o<a.tracks.length;++o){let l=a.tracks[o],h=l.getValueSize(),u=[],c=[];for(let d=0;d<l.times.length;++d){let p=l.times[d]*n;if(!(p<i)&&!(p>=r)){u.push(l.times[d]);for(let m=0;m<h;++m)c.push(l.values[d*h+m])}}0!==u.length&&(l.times=s1.convertArray(u,l.times.constructor),l.values=s1.convertArray(c,l.values.constructor),s.push(l))}a.tracks=s;let f=1/0;for(let g=0;g<a.tracks.length;++g)f>a.tracks[g].times[0]&&(f=a.tracks[g].times[0]);for(let $=0;$<a.tracks.length;++$)a.tracks[$].shift(-1*f);return a.resetDuration(),a},makeClipAdditive:function(e,t=0,i=e,r=30){r<=0&&(r=30);let n=i.tracks.length,a=t/r;for(let s=0;s<n;++s){let o=i.tracks[s],l=o.ValueTypeName;if("bool"===l||"string"===l)continue;let h=e.tracks.find(function(e){return e.name===o.name&&e.ValueTypeName===l});if(void 0===h)continue;let u=0,c=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=c/3);let d=0,p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=o.times.length-1,f;if(a<=o.times[0]){let g=u,$=c-u;f=s1.arraySlice(o.values,g,$)}else if(a>=o.times[m]){let x=m*c+u,v=x+c-u;f=s1.arraySlice(o.values,x,v)}else{let y=o.createInterpolant(),b=u,w=c-u;y.evaluate(a),f=s1.arraySlice(y.resultBuffer,b,w)}if("quaternion"===l){let _=new D().fromArray(f).normalize().conjugate();_.toArray(f)}let E=h.times.length;for(let T=0;T<E;++T){let S=T*p+d;if("quaternion"===l)D.multiplyQuaternionsFlat(h.values,S,f,0,h.values,S);else{let M=p-2*d;for(let A=0;A<M;++A)h.values[S+A]-=f[A]}}}return e.blendMode=2501,e}};class sD{constructor(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){let t=this.parameterPositions,i=this._cachedIndex,r=t[i],n=t[i-1];validate_interval:{seek:{let a;linear_scan:{forward_scan:if(!(e<r)){for(let s=i+2;;){if(void 0===r){if(e<n)break forward_scan;return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,e,n)}if(i===s)break;if(n=r,e<(r=t[++i]))break seek}a=t.length;break linear_scan}if(!(e>=n)){let o=t[1];e<o&&(i=2,n=o);for(let l=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===l)break;if(r=n,e>=(n=t[--i-1]))break seek}a=i,i=0;break linear_scan}break validate_interval}for(;i<a;){let h=i+a>>>1;e<t[h]?a=h:i=h+1}if(r=t[i],void 0===(n=t[i-1]))return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return i=t.length,this._cachedIndex=i,this.afterEnd_(i-1,n,e)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){let t=this.resultBuffer,i=this.sampleValues,r=this.valueSize,n=e*r;for(let a=0;a!==r;++a)t[a]=i[n+a];return t}interpolate_(){throw Error("call to abstract method")}intervalChanged_(){}}sD.prototype.beforeStart_=sD.prototype.copySampleValue_,sD.prototype.afterEnd_=sD.prototype.copySampleValue_;class sI extends sD{constructor(e,t,i,r){super(e,t,i,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,i){let r=this.parameterPositions,n=e-2,a=e+1,s=r[n],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:n=e,s=2*t-i;break;case 2402:s=t+r[n=r.length-2]-r[n+1];break;default:n=e,s=i}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*i-t;break;case 2402:a=1,o=i+r[1]-r[0];break;default:a=e-1,o=t}let l=(i-t)*.5,h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-i),this._offsetPrev=n*h,this._offsetNext=a*h}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,u=this._offsetNext,c=this._weightPrev,d=this._weightNext,p=(i-t)/(r-t),m=p*p,f=m*p,g=-c*f+2*c*m-c*p,$=(1+c)*f+(-1.5-2*c)*m+(-.5+c)*p+1,x=(-1-d)*f+(1.5+d)*m+.5*p,v=d*f-d*m;for(let y=0;y!==s;++y)n[y]=g*a[h+y]+$*a[l+y]+x*a[o+y]+v*a[u+y];return n}}class sF extends sD{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(i-t)/(r-t),u=1-h;for(let c=0;c!==s;++c)n[c]=a[l+c]*u+a[o+c]*h;return n}}class sN extends sD{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class sU{constructor(e,t,i,r){if(void 0===e)throw Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=s1.convertArray(t,this.TimeBufferType),this.values=s1.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){let t=e.constructor,i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:s1.convertArray(e.times,Array),values:s1.convertArray(e.values,Array)};let r=e.getInterpolation();r!==e.DefaultInterpolation&&(i.interpolation=r)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new sN(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new sF(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new sI(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case 2300:t=this.InterpolantFactoryMethodDiscrete;break;case 2301:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw Error(i)}return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){let t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=e}return this}scale(e){if(1!==e){let t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=e}return this}trim(e,t){let i=this.times,r=i.length,n=0,a=r-1;for(;n!==r&&i[n]<e;)++n;for(;-1!==a&&i[a]>t;)--a;if(++a,0!==n||a!==r){n>=a&&(n=(a=Math.max(a,1))-1);let s=this.getValueSize();this.times=s1.arraySlice(i,n,a),this.values=s1.arraySlice(this.values,n*s,a*s)}return this}validate(){let e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);let i=this.times,r=this.values,n=i.length;0===n&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let s=0;s!==n;s++){let o=i[s];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,s,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,s,o,a),e=!1;break}a=o}if(void 0!==r&&s1.isTypedArray(r))for(let l=0,h=r.length;l!==h;++l){let u=r[l];if(isNaN(u)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,u),e=!1;break}}return e}optimize(){let e=s1.arraySlice(this.times),t=s1.arraySlice(this.values),i=this.getValueSize(),r=2302===this.getInterpolation(),n=e.length-1,a=1;for(let s=1;s<n;++s){let o=!1,l=e[s],h=e[s+1];if(l!==h&&(1!==s||l!==e[0])){if(r)o=!0;else{let u=s*i,c=u-i,d=u+i;for(let p=0;p!==i;++p){let m=t[u+p];if(m!==t[c+p]||m!==t[d+p]){o=!0;break}}}}if(o){if(s!==a){e[a]=e[s];let f=s*i,g=a*i;for(let $=0;$!==i;++$)t[g+$]=t[f+$]}++a}}if(n>0){e[a]=e[n];for(let x=n*i,v=a*i,y=0;y!==i;++y)t[v+y]=t[x+y];++a}return a!==e.length?(this.times=s1.arraySlice(e,0,a),this.values=s1.arraySlice(t,0,a*i)):(this.times=e,this.values=t),this}clone(){let e=s1.arraySlice(this.times,0),t=s1.arraySlice(this.values,0),i=this.constructor,r=new i(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}sU.prototype.TimeBufferType=Float32Array,sU.prototype.ValueBufferType=Float32Array,sU.prototype.DefaultInterpolation=2301;class sB extends sU{}sB.prototype.ValueTypeName="bool",sB.prototype.ValueBufferType=Array,sB.prototype.DefaultInterpolation=2300,sB.prototype.InterpolantFactoryMethodLinear=void 0,sB.prototype.InterpolantFactoryMethodSmooth=void 0;class sO extends sU{}sO.prototype.ValueTypeName="color";class sz extends sU{}sz.prototype.ValueTypeName="number";class sH extends sD{constructor(e,t,i,r){super(e,t,i,r)}interpolate_(e,t,i,r){let n=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(i-t)/(r-t),l=e*s;for(let h=l+s;l!==h;l+=4)D.slerpFlat(n,0,a,l-s,a,l,o);return n}}class sG extends sU{InterpolantFactoryMethodLinear(e){return new sH(this.times,this.values,this.getValueSize(),e)}}sG.prototype.ValueTypeName="quaternion",sG.prototype.DefaultInterpolation=2301,sG.prototype.InterpolantFactoryMethodSmooth=void 0;class s2 extends sU{}s2.prototype.ValueTypeName="string",s2.prototype.ValueBufferType=Array,s2.prototype.DefaultInterpolation=2300,s2.prototype.InterpolantFactoryMethodLinear=void 0,s2.prototype.InterpolantFactoryMethodSmooth=void 0;class sV extends sU{}sV.prototype.ValueTypeName="vector";class sk{constructor(e,t=-1,i,r=2500){this.name=e,this.tracks=i,this.duration=t,this.blendMode=r,this.uuid=l(),this.duration<0&&this.resetDuration()}static parse(e){let t=[],i=e.tracks,r=1/(e.fps||1);for(let n=0,a=i.length;n!==a;++n)t.push(sW(i[n]).scale(r));let s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){let t=[],i=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let n=0,a=i.length;n!==a;++n)t.push(sU.toJSON(i[n]));return r}static CreateFromMorphTargetSequence(e,t,i,r){let n=t.length,a=[];for(let s=0;s<n;s++){let o=[],l=[];o.push((s+n-1)%n,s,(s+1)%n),l.push(0,1,0);let h=s1.getKeyframeOrder(o);o=s1.sortedArray(o,1,h),l=s1.sortedArray(l,1,h),r||0!==o[0]||(o.push(n),l.push(l[0])),a.push(new sz(".morphTargetInfluences["+t[s].name+"]",o,l).scale(1/i))}return new this(e,-1,a)}static findByName(e,t){let i=e;if(!Array.isArray(e)){let r=e;i=r.geometry&&r.geometry.animations||r.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){let r={},n=/^([\w-]*?)([\d]+)$/;for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.name.match(n);if(l&&l.length>1){let h=l[1],u=r[h];u||(r[h]=u=[]),u.push(o)}}let c=[];for(let d in r)c.push(this.CreateFromMorphTargetSequence(d,r[d],t,i));return c}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;let i=function(e,t,i,r,n){if(0!==i.length){let a=[],s=[];s1.flattenJSON(i,a,s,r),0!==a.length&&n.push(new e(t,a,s))}},r=[],n=e.name||"default",a=e.fps||30,s=e.blendMode,o=e.length||-1,l=e.hierarchy||[];for(let h=0;h<l.length;h++){let u=l[h].keys;if(u&&0!==u.length){if(u[0].morphTargets){let c={},d;for(d=0;d<u.length;d++)if(u[d].morphTargets)for(let p=0;p<u[d].morphTargets.length;p++)c[u[d].morphTargets[p]]=-1;for(let m in c){let f=[],g=[];for(let $=0;$!==u[d].morphTargets.length;++$){let x=u[d];f.push(x.time),g.push(x.morphTarget===m?1:0)}r.push(new sz(".morphTargetInfluence["+m+"]",f,g))}o=c.length*(a||1)}else{let v=".bones["+t[h].name+"]";i(sV,v+".position",u,"pos",r),i(sG,v+".quaternion",u,"rot",r),i(sV,v+".scale",u,"scl",r)}}}if(0===r.length)return null;let y=new this(n,o,r,s);return y}resetDuration(){let e=this.tracks,t=0;for(let i=0,r=e.length;i!==r;++i){let n=this.tracks[i];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){let e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function sW(e){if(void 0===e.type)throw Error("THREE.KeyframeTrack: track type undefined, can not parse");let t=function e(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return sz;case"vector":case"vector2":case"vector3":case"vector4":return sV;case"color":return sO;case"quaternion":return sG;case"bool":case"boolean":return sB;case"string":return s2}throw Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(e.type);if(void 0===e.times){let i=[],r=[];s1.flattenJSON(e.keys,i,r,"value"),e.times=i,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}let s3={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class s6{constructor(e,t,i){let r=this,n=!1,a=0,s=0,o,l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){s++,!1===n&&void 0!==r.onStart&&r.onStart(e,a,s),n=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,s),a===s&&(n=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){let t=l.indexOf(e);return -1!==t&&l.splice(t,2),this},this.getHandler=function(e){for(let t=0,i=l.length;t<i;t+=2){let r=l[t],n=l[t+1];if(r.global&&(r.lastIndex=0),r.test(e))return n}return null}}}let s4=new s6;class sX{constructor(e){this.manager=void 0!==e?e:s4,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){let i=this;return new Promise(function(r,n){i.load(e,r,t,n)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}let sj={};class s5 extends sX{constructor(e){super(e)}load(e,t,i,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let n=s3.get(e);if(void 0!==n)return this.manager.itemStart(e),setTimeout(()=>{t&&t(n),this.manager.itemEnd(e)},0),n;if(void 0!==sj[e]){sj[e].push({onLoad:t,onProgress:i,onError:r});return}sj[e]=[],sj[e].push({onLoad:t,onProgress:i,onError:r});let a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});fetch(a).then(t=>{if(200===t.status||0===t.status){if(0===t.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===t.body.getReader)return t;let i=sj[e],r=t.body.getReader(),n=t.headers.get("Content-Length"),a=n?parseInt(n):0,s=0!==a,o=0,l=new ReadableStream({start(e){(function t(){r.read().then(({done:r,value:n})=>{if(r)e.close();else{o+=n.byteLength;let l=new ProgressEvent("progress",{lengthComputable:s,loaded:o,total:a});for(let h=0,u=i.length;h<u;h++){let c=i[h];c.onProgress&&c.onProgress(l)}e.enqueue(n),t()}})})()}});return new Response(l)}throw Error(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`)}).then(e=>{switch(this.responseType){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{let t=new DOMParser;return t.parseFromString(e,this.mimeType)});case"json":return e.json();default:return e.text()}}).then(t=>{s3.add(e,t);let i=sj[e];delete sj[e];for(let r=0,n=i.length;r<n;r++){let a=i[r];a.onLoad&&a.onLoad(t)}}).catch(t=>{let i=sj[e];if(void 0===i)throw this.manager.itemError(e),t;delete sj[e];for(let r=0,n=i.length;r<n;r++){let a=i[r];a.onError&&a.onError(t)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class s7 extends sX{constructor(e){super(e)}load(e,t,i,r){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let n=this,a=s3.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;let s=_("img");function o(){h(),s3.add(e,this),t&&t(this),n.manager.itemEnd(e)}function l(t){h(),r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}function h(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),n.manager.itemStart(e),s.src=e,s}}class sq extends sX{constructor(e){super(e)}load(e,t,i,r){let n=new tO,a=new s7(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let s=0;function o(i){a.load(e[i],function(e){n.images[i]=e,6==++s&&(n.needsUpdate=!0,t&&t(n))},void 0,r)}for(let l=0;l<e.length;++l)o(l);return n}}class sY extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new nH,s=new s5(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(n.withCredentials),s.load(e,function(e){let i=n.parse(e);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:1001,a.wrapT=void 0!==i.wrapT?i.wrapT:1001,a.magFilter=void 0!==i.magFilter?i.magFilter:1006,a.minFilter=void 0!==i.minFilter?i.minFilter:1006,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.encoding&&(a.encoding=i.encoding),void 0!==i.flipY&&(a.flipY=i.flipY),void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps,a.minFilter=1008),1===i.mipmapCount&&(a.minFilter=1006),void 0!==i.generateMipmaps&&(a.generateMipmaps=i.generateMipmaps),a.needsUpdate=!0,t&&t(a,i))},i,r),a}}class sZ extends sX{constructor(e){super(e)}load(e,t,i,r){let n=new M,a=new s7(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){n.image=e,n.needsUpdate=!0,void 0!==t&&t(n)},i,r),n}}class sJ extends eD{constructor(e,t=1){super(),this.type="Light",this.color=new e7(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){let t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}sJ.prototype.isLight=!0;class sK extends sJ{constructor(e,t,i){super(e,i),this.type="HemisphereLight",this.position.copy(eD.DefaultUp),this.updateMatrix(),this.groundColor=new e7(t)}copy(e){return sJ.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}sK.prototype.isHemisphereLight=!0;let sQ=new ec,s9=new I,oe=new I;class ot{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new x(512,512),this.map=null,this.mapPass=null,this.matrix=new ec,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new t3,this._frameExtents=new x(1,1),this._viewportCount=1,this._viewports=[new R(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){let t=this.camera,i=this.matrix;s9.setFromMatrixPosition(e.matrixWorld),t.position.copy(s9),oe.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(oe),t.updateMatrixWorld(),sQ.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(sQ),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){let e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),(512!==this.mapSize.x||512!==this.mapSize.y)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class oi extends ot{constructor(){super(new tU(50,1,.5,500)),this.focus=1}updateMatrices(e){let t=this.camera,i=2*o*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;(i!==t.fov||r!==t.aspect||n!==t.far)&&(t.fov=i,t.aspect=r,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}oi.prototype.isSpotLightShadow=!0;class or extends sJ{constructor(e,t,i=0,r=Math.PI/3,n=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(eD.DefaultUp),this.updateMatrix(),this.target=new eD,this.distance=i,this.angle=r,this.penumbra=n,this.decay=a,this.shadow=new oi}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}or.prototype.isSpotLight=!0;let on=new ec,oa=new I,os=new I;class oo extends ot{constructor(){super(new tU(90,1,.5,500)),this._frameExtents=new x(4,2),this._viewportCount=6,this._viewports=[new R(2,1,1,1),new R(0,1,1,1),new R(3,1,1,1),new R(1,1,1,1),new R(3,0,1,1),new R(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){let i=this.camera,r=this.matrix,n=e.distance||i.far;n!==i.far&&(i.far=n,i.updateProjectionMatrix()),oa.setFromMatrixPosition(e.matrixWorld),i.position.copy(oa),os.copy(i.position),os.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(os),i.updateMatrixWorld(),r.makeTranslation(-oa.x,-oa.y,-oa.z),on.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(on)}}oo.prototype.isPointLightShadow=!0;class ol extends sJ{constructor(e,t,i=0,r=1){super(e,t),this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new oo}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}ol.prototype.isPointLight=!0;class oh extends ot{constructor(){super(new t9(-5,5,5,-5,.5,500))}}oh.prototype.isDirectionalLightShadow=!0;class ou extends sJ{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(eD.DefaultUp),this.updateMatrix(),this.target=new eD,this.shadow=new oh}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}ou.prototype.isDirectionalLight=!0;class oc extends sJ{constructor(e,t){super(e,t),this.type="AmbientLight"}}oc.prototype.isAmbientLight=!0;class od extends sJ{constructor(e,t,i=10,r=10){super(e,t),this.type="RectAreaLight",this.width=i,this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){let t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}od.prototype.isRectAreaLight=!0;class op{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){let i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*r),t.addScaledVector(a[2],.488603*n),t.addScaledVector(a[3],.488603*i),t.addScaledVector(a[4],1.092548*(i*r)),t.addScaledVector(a[5],1.092548*(r*n)),t.addScaledVector(a[6],.315392*(3*n*n-1)),t.addScaledVector(a[7],1.092548*(i*n)),t.addScaledVector(a[8],.546274*(i*i-r*r)),t}getIrradianceAt(e,t){let i=e.x,r=e.y,n=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*r),t.addScaledVector(a[2],1.023328*n),t.addScaledVector(a[3],1.023328*i),t.addScaledVector(a[4],.858086*i*r),t.addScaledVector(a[5],.858086*r*n),t.addScaledVector(a[6],.743125*n*n-.247708),t.addScaledVector(a[7],.858086*i*n),t.addScaledVector(a[8],.429043*(i*i-r*r)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){let i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(e,t+3*r);return this}toArray(e=[],t=0){let i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(e,t+3*r);return e}static getBasisAt(e,t){let i=e.x,r=e.y,n=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*n,t[3]=.488603*i,t[4]=1.092548*i*r,t[5]=1.092548*r*n,t[6]=.315392*(3*n*n-1),t[7]=1.092548*i*n,t[8]=.546274*(i*i-r*r)}}op.prototype.isSphericalHarmonics3=!0;class om extends sJ{constructor(e=new op,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){let t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}om.prototype.isLightProbe=!0;class of extends sX{constructor(e){super(e),this.textures={}}load(e,t,i,r){let n=this,a=new s5(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(a){r?r(a):console.error(a),n.manager.itemError(e)}},i,r)}parse(e){let t=this.textures;function i(e){return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]}let r=new sP[e.type];if(void 0!==e.uuid&&(r.uuid=e.uuid),void 0!==e.name&&(r.name=e.name),void 0!==e.color&&void 0!==r.color&&r.color.setHex(e.color),void 0!==e.roughness&&(r.roughness=e.roughness),void 0!==e.metalness&&(r.metalness=e.metalness),void 0!==e.sheen&&(r.sheen=e.sheen),void 0!==e.sheenColor&&(r.sheenColor=new e7().setHex(e.sheenColor)),void 0!==e.sheenRoughness&&(r.sheenRoughness=e.sheenRoughness),void 0!==e.emissive&&void 0!==r.emissive&&r.emissive.setHex(e.emissive),void 0!==e.specular&&void 0!==r.specular&&r.specular.setHex(e.specular),void 0!==e.specularIntensity&&(r.specularIntensity=e.specularIntensity),void 0!==e.specularColor&&void 0!==r.specularColor&&r.specularColor.setHex(e.specularColor),void 0!==e.shininess&&(r.shininess=e.shininess),void 0!==e.clearcoat&&(r.clearcoat=e.clearcoat),void 0!==e.clearcoatRoughness&&(r.clearcoatRoughness=e.clearcoatRoughness),void 0!==e.transmission&&(r.transmission=e.transmission),void 0!==e.thickness&&(r.thickness=e.thickness),void 0!==e.attenuationDistance&&(r.attenuationDistance=e.attenuationDistance),void 0!==e.attenuationColor&&void 0!==r.attenuationColor&&r.attenuationColor.setHex(e.attenuationColor),void 0!==e.fog&&(r.fog=e.fog),void 0!==e.flatShading&&(r.flatShading=e.flatShading),void 0!==e.blending&&(r.blending=e.blending),void 0!==e.combine&&(r.combine=e.combine),void 0!==e.side&&(r.side=e.side),void 0!==e.shadowSide&&(r.shadowSide=e.shadowSide),void 0!==e.opacity&&(r.opacity=e.opacity),void 0!==e.format&&(r.format=e.format),void 0!==e.transparent&&(r.transparent=e.transparent),void 0!==e.alphaTest&&(r.alphaTest=e.alphaTest),void 0!==e.depthTest&&(r.depthTest=e.depthTest),void 0!==e.depthWrite&&(r.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(r.colorWrite=e.colorWrite),void 0!==e.stencilWrite&&(r.stencilWrite=e.stencilWrite),void 0!==e.stencilWriteMask&&(r.stencilWriteMask=e.stencilWriteMask),void 0!==e.stencilFunc&&(r.stencilFunc=e.stencilFunc),void 0!==e.stencilRef&&(r.stencilRef=e.stencilRef),void 0!==e.stencilFuncMask&&(r.stencilFuncMask=e.stencilFuncMask),void 0!==e.stencilFail&&(r.stencilFail=e.stencilFail),void 0!==e.stencilZFail&&(r.stencilZFail=e.stencilZFail),void 0!==e.stencilZPass&&(r.stencilZPass=e.stencilZPass),void 0!==e.wireframe&&(r.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(r.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.wireframeLinecap&&(r.wireframeLinecap=e.wireframeLinecap),void 0!==e.wireframeLinejoin&&(r.wireframeLinejoin=e.wireframeLinejoin),void 0!==e.rotation&&(r.rotation=e.rotation),1!==e.linewidth&&(r.linewidth=e.linewidth),void 0!==e.dashSize&&(r.dashSize=e.dashSize),void 0!==e.gapSize&&(r.gapSize=e.gapSize),void 0!==e.scale&&(r.scale=e.scale),void 0!==e.polygonOffset&&(r.polygonOffset=e.polygonOffset),void 0!==e.polygonOffsetFactor&&(r.polygonOffsetFactor=e.polygonOffsetFactor),void 0!==e.polygonOffsetUnits&&(r.polygonOffsetUnits=e.polygonOffsetUnits),void 0!==e.dithering&&(r.dithering=e.dithering),void 0!==e.alphaToCoverage&&(r.alphaToCoverage=e.alphaToCoverage),void 0!==e.premultipliedAlpha&&(r.premultipliedAlpha=e.premultipliedAlpha),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.toneMapped&&(r.toneMapped=e.toneMapped),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.vertexColors&&("number"==typeof e.vertexColors?r.vertexColors=e.vertexColors>0:r.vertexColors=e.vertexColors),void 0!==e.uniforms)for(let n in e.uniforms){let a=e.uniforms[n];switch(r.uniforms[n]={},a.type){case"t":r.uniforms[n].value=i(a.value);break;case"c":r.uniforms[n].value=new e7().setHex(a.value);break;case"v2":r.uniforms[n].value=new x().fromArray(a.value);break;case"v3":r.uniforms[n].value=new I().fromArray(a.value);break;case"v4":r.uniforms[n].value=new R().fromArray(a.value);break;case"m3":r.uniforms[n].value=new v().fromArray(a.value);break;case"m4":r.uniforms[n].value=new ec().fromArray(a.value);break;default:r.uniforms[n].value=a.value}}if(void 0!==e.defines&&(r.defines=e.defines),void 0!==e.vertexShader&&(r.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(r.fragmentShader=e.fragmentShader),void 0!==e.extensions)for(let s in e.extensions)r.extensions[s]=e.extensions[s];if(void 0!==e.shading&&(r.flatShading=1===e.shading),void 0!==e.size&&(r.size=e.size),void 0!==e.sizeAttenuation&&(r.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(r.map=i(e.map)),void 0!==e.matcap&&(r.matcap=i(e.matcap)),void 0!==e.alphaMap&&(r.alphaMap=i(e.alphaMap)),void 0!==e.bumpMap&&(r.bumpMap=i(e.bumpMap)),void 0!==e.bumpScale&&(r.bumpScale=e.bumpScale),void 0!==e.normalMap&&(r.normalMap=i(e.normalMap)),void 0!==e.normalMapType&&(r.normalMapType=e.normalMapType),void 0!==e.normalScale){let o=e.normalScale;!1===Array.isArray(o)&&(o=[o,o]),r.normalScale=new x().fromArray(o)}return void 0!==e.displacementMap&&(r.displacementMap=i(e.displacementMap)),void 0!==e.displacementScale&&(r.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(r.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(r.roughnessMap=i(e.roughnessMap)),void 0!==e.metalnessMap&&(r.metalnessMap=i(e.metalnessMap)),void 0!==e.emissiveMap&&(r.emissiveMap=i(e.emissiveMap)),void 0!==e.emissiveIntensity&&(r.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(r.specularMap=i(e.specularMap)),void 0!==e.specularIntensityMap&&(r.specularIntensityMap=i(e.specularIntensityMap)),void 0!==e.specularColorMap&&(r.specularColorMap=i(e.specularColorMap)),void 0!==e.envMap&&(r.envMap=i(e.envMap)),void 0!==e.envMapIntensity&&(r.envMapIntensity=e.envMapIntensity),void 0!==e.reflectivity&&(r.reflectivity=e.reflectivity),void 0!==e.refractionRatio&&(r.refractionRatio=e.refractionRatio),void 0!==e.lightMap&&(r.lightMap=i(e.lightMap)),void 0!==e.lightMapIntensity&&(r.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(r.aoMap=i(e.aoMap)),void 0!==e.aoMapIntensity&&(r.aoMapIntensity=e.aoMapIntensity),void 0!==e.gradientMap&&(r.gradientMap=i(e.gradientMap)),void 0!==e.clearcoatMap&&(r.clearcoatMap=i(e.clearcoatMap)),void 0!==e.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=i(e.clearcoatRoughnessMap)),void 0!==e.clearcoatNormalMap&&(r.clearcoatNormalMap=i(e.clearcoatNormalMap)),void 0!==e.clearcoatNormalScale&&(r.clearcoatNormalScale=new x().fromArray(e.clearcoatNormalScale)),void 0!==e.transmissionMap&&(r.transmissionMap=i(e.transmissionMap)),void 0!==e.thicknessMap&&(r.thicknessMap=i(e.thicknessMap)),void 0!==e.sheenColorMap&&(r.sheenColorMap=i(e.sheenColorMap)),void 0!==e.sheenRoughnessMap&&(r.sheenRoughnessMap=i(e.sheenRoughnessMap)),r}setTextures(e){return this.textures=e,this}}class og{static decodeText(e){if("undefined"!=typeof TextDecoder)return new TextDecoder().decode(e);let t="";for(let i=0,r=e.length;i<r;i++)t+=String.fromCharCode(e[i]);try{return decodeURIComponent(escape(t))}catch(n){return t}}static extractUrlBase(e){let t=e.lastIndexOf("/");return -1===t?"./":e.substr(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e))?e:t+e}}class o$ extends tm{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){let e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}o$.prototype.isInstancedBufferGeometry=!0;class ox extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new s5(n.manager);a.setPath(n.path),a.setRequestHeader(n.requestHeader),a.setWithCredentials(n.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(a){r?r(a):console.error(a),n.manager.itemError(e)}},i,r)}parse(e){let t={},i={};function r(e,r){if(void 0!==t[r])return t[r];let n=e.interleavedBuffers,a=n[r],s=function e(t,r){if(void 0!==i[r])return i[r];let n=t.arrayBuffers,a=n[r],s=new Uint32Array(a).buffer;return i[r]=s,s}(e,a.buffer),o=w(a.type,s),l=new nf(o,a.stride);return l.uuid=a.uuid,t[r]=l,l}let n=e.isInstancedBufferGeometry?new o$:new tm,a=e.data.index;if(void 0!==a){let s=w(a.type,a.array);n.setIndex(new eJ(s,1))}let o=e.data.attributes;for(let l in o){let h=o[l],u;if(h.isInterleavedBufferAttribute){let c=r(e.data,h.data);u=new n$(c,h.itemSize,h.offset,h.normalized)}else{let d=w(h.type,h.array),p=h.isInstancedBufferAttribute?nk:eJ;u=new p(d,h.itemSize,h.normalized)}void 0!==h.name&&(u.name=h.name),void 0!==h.usage&&u.setUsage(h.usage),void 0!==h.updateRange&&(u.updateRange.offset=h.updateRange.offset,u.updateRange.count=h.updateRange.count),n.setAttribute(l,u)}let m=e.data.morphAttributes;if(m)for(let f in m){let g=m[f],$=[];for(let x=0,v=g.length;x<v;x++){let y=g[x],b;if(y.isInterleavedBufferAttribute){let _=r(e.data,y.data);b=new n$(_,y.itemSize,y.offset,y.normalized)}else{let E=w(y.type,y.array);b=new eJ(E,y.itemSize,y.normalized)}void 0!==y.name&&(b.name=y.name),$.push(b)}n.morphAttributes[f]=$}let T=e.data.morphTargetsRelative;T&&(n.morphTargetsRelative=!0);let S=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==S)for(let M=0,A=S.length;M!==A;++M){let R=S[M];n.addGroup(R.start,R.count,R.materialIndex)}let L=e.data.boundingSphere;if(void 0!==L){let C=new I;void 0!==L.center&&C.fromArray(L.center),n.boundingSphere=new ei(C,L.radius)}return e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}}let ov={UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307},oy={RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002},o8={NearestFilter:1003,NearestMipmapNearestFilter:1004,NearestMipmapLinearFilter:1005,LinearFilter:1006,LinearMipmapNearestFilter:1007,LinearMipmapLinearFilter:1008};class ob extends sX{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,i,r){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);let n=this,a=s3.get(e);if(void 0!==a)return n.manager.itemStart(e),setTimeout(function(){t&&t(a),n.manager.itemEnd(e)},0),a;let s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(e,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(n.options,{colorSpaceConversion:"none"}))}).then(function(i){s3.add(e,i),t&&t(i),n.manager.itemEnd(e)}).catch(function(t){r&&r(t),n.manager.itemError(e),n.manager.itemEnd(e)}),n.manager.itemStart(e)}}ob.prototype.isImageBitmapLoader=!0;let ow,o_={getContext:function(){return void 0===ow&&(ow=new(window.AudioContext||window.webkitAudioContext)),ow},setContext:function(e){ow=e}};class oE extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new s5(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{let a=i.slice(0),s=o_.getContext();s.decodeAudioData(a,function(e){t(e)})}catch(o){r?r(o):console.error(o),n.manager.itemError(e)}},i,r)}}class oT extends om{constructor(e,t,i=1){super(void 0,i);let r=new e7().set(e),n=new e7().set(t),a=new I(r.r,r.g,r.b),s=new I(n.r,n.g,n.b),o=Math.sqrt(Math.PI);this.sh.coefficients[0].copy(a).add(s).multiplyScalar(o),this.sh.coefficients[1].copy(a).sub(s).multiplyScalar(o*Math.sqrt(.75))}}oT.prototype.isHemisphereLightProbe=!0;class oS extends om{constructor(e,t=1){super(void 0,t);let i=new e7().set(e);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}oS.prototype.isAmbientLightProbe=!0;let oM=new ec,oA=new ec,oR=new ec;class oL{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=oC(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){let t=oC();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function oC(){return("undefined"==typeof performance?Date:performance).now()}let o0=new I,oP=new D,o1=new I,oD=new I;class oI extends eD{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0===this.isPlaying){console.warn("THREE.Audio: Audio is already playing.");return}if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;let t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1===this.hasPlaybackControl){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}let oF=new I,oN=new D,oU=new I,oB=new I;class oO{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0,t=this.getFrequencyData();for(let i=0;i<t.length;i++)e+=t[i];return e/t.length}}class oz{constructor(e,t,i){this.binding=e,this.valueSize=i;let r,n,a;switch(t){case"quaternion":r=this._slerp,n=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":r=this._select,n=this._select,a=this._setAdditiveIdentityOther,this.buffer=Array(5*i);break;default:r=this._lerp,n=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=n,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){let i=this.buffer,r=this.valueSize,n=e*r+r,a=this.cumulativeWeight;if(0===a){for(let s=0;s!==r;++s)i[n+s]=i[s];a=t}else{a+=t;let o=t/a;this._mixBufferRegion(i,n,0,o,r)}this.cumulativeWeight=a}accumulateAdditive(e){let t=this.buffer,i=this.valueSize,r=i*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,i),this.cumulativeWeightAdditive+=e}apply(e){let t=this.valueSize,i=this.buffer,r=e*t+t,n=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,n<1){let o=t*this._origIndex;this._mixBufferRegion(i,r,o,1-n,t)}a>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let l=t,h=t+t;l!==h;++l)if(i[l]!==i[l+t]){s.setValue(i,r);break}}saveOriginalState(){let e=this.binding,t=this.buffer,i=this.valueSize,r=i*this._origIndex;e.getValue(t,r);for(let n=i,a=r;n!==a;++n)t[n]=t[r+n%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){let e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){let e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let i=e;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){let e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[e+i]}_select(e,t,i,r,n){if(r>=.5)for(let a=0;a!==n;++a)e[t+a]=e[i+a]}_slerp(e,t,i,r){D.slerpFlat(e,t,e,t,e,i,r)}_slerpAdditive(e,t,i,r,n){let a=this._workIndex*n;D.multiplyQuaternionsFlat(e,a,e,t,e,i),D.slerpFlat(e,t,e,t,e,a,r)}_lerp(e,t,i,r,n){let a=1-r;for(let s=0;s!==n;++s){let o=t+s;e[o]=e[o]*a+e[i+s]*r}}_lerpAdditive(e,t,i,r,n){for(let a=0;a!==n;++a){let s=t+a;e[s]=e[s]+e[i+a]*r}}}let oH="\\[\\]\\.:\\/",oG=RegExp("["+oH+"]","g"),o2="[^"+oH+"]",oV="[^"+oH.replace("\\.","")+"]",ok=/((?:WC+[\/:])*)/.source.replace("WC",o2),oW=/(WCOD+)?/.source.replace("WCOD",oV),o3=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",o2),o6=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",o2),o4=RegExp("^"+ok+oW+o3+o6+"$"),oX=["material","materials","bones"];class oj{constructor(e,t,i){this.path=t,this.parsedPath=i||oj.parseTrackName(t),this.node=oj.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new oj.Composite(e,t,i):new oj(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(oG,"")}static parseTrackName(e){let t=o4.exec(e);if(!t)throw Error("PropertyBinding: Cannot parse trackName: "+e);let i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=i.nodeName&&i.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){let n=i.nodeName.substring(r+1);-1!==oX.indexOf(n)&&(i.nodeName=i.nodeName.substring(0,r),i.objectName=n)}if(null===i.propertyName||0===i.propertyName.length)throw Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){let i=e.skeleton.getBoneByName(t);if(void 0!==i)return i}if(e.children){let r=function(e){for(let i=0;i<e.length;i++){let n=e[i];if(n.name===t||n.uuid===t)return n;let a=r(n.children);if(a)return a}return null},n=r(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)e[t++]=i[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){let i=this.resolvedProperty;for(let r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node,t=this.parsedPath,i=t.objectName,r=t.propertyName,n=t.propertyIndex;if(e||(e=oj.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let a=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let s=0;s<e.length;s++)if(e[s].name===a){a=s;break}break;default:if(void 0===e[i]){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(void 0!==a){if(void 0===e[a]){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[a]}}let o=e[r];if(void 0===o){let l=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+r+" but it wasn't found.",e);return}let h=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?h=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(void 0!==n){if("morphTargetInfluences"===r){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}void 0!==e.morphTargetDictionary[n]&&(n=e.morphTargetDictionary[n])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=n}else void 0!==o.fromArray&&void 0!==o.toArray?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][h]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}oj.Composite=class e{constructor(e,t,i){let r=i||oj.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();let i=this._targetGroup.nCachedObjects_,r=this._bindings[i];void 0!==r&&r.getValue(e,t)}setValue(e,t){let i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(e,t)}bind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){let e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},oj.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},oj.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},oj.prototype.GetterByBindingType=[oj.prototype._getValue_direct,oj.prototype._getValue_array,oj.prototype._getValue_arrayElement,oj.prototype._getValue_toArray],oj.prototype.SetterByBindingTypeAndVersioning=[[oj.prototype._setValue_direct,oj.prototype._setValue_direct_setNeedsUpdate,oj.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[oj.prototype._setValue_array,oj.prototype._setValue_array_setNeedsUpdate,oj.prototype._setValue_array_setMatrixWorldNeedsUpdate],[oj.prototype._setValue_arrayElement,oj.prototype._setValue_arrayElement_setNeedsUpdate,oj.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[oj.prototype._setValue_fromArray,oj.prototype._setValue_fromArray_setNeedsUpdate,oj.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class o5{constructor(){this.uuid=l(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;let e={};this._indicesByUUID=e;for(let t=0,i=arguments.length;t!==i;++t)e[arguments[t].uuid]=t;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},this.stats={objects:{get total(){return this._objects.length},get inUse(){return this.total-this.nCachedObjects_}},get bindingsPerObject(){return this._bindings.length}}}add(){let e=this._objects,t=this._indicesByUUID,i=this._paths,r=this._parsedPaths,n=this._bindings,a=n.length,s,o=e.length,l=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){let c=arguments[h],d=c.uuid,p=t[d];if(void 0===p){p=o++,t[d]=p,e.push(c);for(let m=0,f=a;m!==f;++m)n[m].push(new oj(c,i[m],r[m]))}else if(p<l){s=e[p];let g=--l,$=e[g];t[$.uuid]=p,e[p]=$,t[d]=g,e[g]=c;for(let x=0,v=a;x!==v;++x){let y=n[x],b=y[g],w=y[p];y[p]=b,void 0===w&&(w=new oj(c,i[x],r[x])),y[g]=w}}else e[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length,n=this.nCachedObjects_;for(let a=0,s=arguments.length;a!==s;++a){let o=arguments[a],l=o.uuid,h=t[l];if(void 0!==h&&h>=n){let u=n++,c=e[u];t[c.uuid]=h,e[h]=c,t[l]=u,e[u]=o;for(let d=0,p=r;d!==p;++d){let m=i[d],f=m[u],g=m[h];m[h]=f,m[u]=g}}}this.nCachedObjects_=n}uncache(){let e=this._objects,t=this._indicesByUUID,i=this._bindings,r=i.length,n=this.nCachedObjects_,a=e.length;for(let s=0,o=arguments.length;s!==o;++s){let l=arguments[s],h=l.uuid,u=t[h];if(void 0!==u){if(delete t[h],u<n){let c=--n,d=e[c],p=--a,m=e[p];t[d.uuid]=u,e[u]=d,t[m.uuid]=c,e[c]=m,e.pop();for(let f=0,g=r;f!==g;++f){let $=i[f],x=$[c],v=$[p];$[u]=x,$[c]=v,$.pop()}}else{let y=--a,b=e[y];y>0&&(t[b.uuid]=u),e[u]=b,e.pop();for(let w=0,_=r;w!==_;++w){let E=i[w];E[u]=E[y],E.pop()}}}}this.nCachedObjects_=n}subscribe_(e,t){let i=this._bindingsIndicesByPath,r=i[e],n=this._bindings;if(void 0!==r)return n[r];let a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,u=Array(l);r=n.length,i[e]=r,a.push(e),s.push(t),n.push(u);for(let c=h,d=o.length;c!==d;++c){let p=o[c];u[c]=new oj(p,e,t)}return u}unsubscribe_(e){let t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){let r=this._paths,n=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=i,a[i]=o,a.pop(),n[i]=n[s],n.pop(),r[i]=r[s],r.pop()}}}o5.prototype.isAnimationObjectGroup=!0;class o7{constructor(e,t,i=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=i,this.blendMode=r;let n=t.tracks,a=n.length,s=Array(a),o={endingStart:2400,endingEnd:2400};for(let l=0;l!==a;++l){let h=n[l].createInterpolant(null);s[l]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){let r=this._clip.duration,n=e._clip.duration;e.warp(1,n/r,t),this.warp(r/n,1,t)}return this}crossFadeTo(e,t,i){return e.crossFadeFrom(this,t,i)}stopFading(){let e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,i){let r=this._mixer,n=r.time,a=this.timeScale,s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);let o=s.parameterPositions,l=s.sampleValues;return o[0]=n,o[1]=n+i,l[0]=e/a,l[1]=t/a,this}stopWarping(){let e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,i,r){if(!this.enabled){this._updateWeight(e);return}let n=this._startTime;if(null!==n){let a=(e-n)*i;if(a<0||0===i)return;this._startTime=null,t=i*a}t*=this._updateTimeScale(e);let s=this._updateTime(t),o=this._updateWeight(e);if(o>0){let l=this._interpolants,h=this._propertyBindings;if(2501===this.blendMode)for(let u=0,c=l.length;u!==c;++u)l[u].evaluate(s),h[u].accumulateAdditive(o);else for(let d=0,p=l.length;d!==p;++d)l[d].evaluate(s),h[d].accumulate(r,o)}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;let i=this._weightInterpolant;if(null!==i){let r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;let i=this._timeScaleInterpolant;if(null!==i){let r=i.evaluate(e)[0];t*=r,e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){let t=this._clip.duration,i=this.loop,r=this.time+e,n=this._loopCount,a=2202===i;if(0===e)return -1===n?r:a&&(1&n)==1?t-r:r;if(2200===i){-1===n&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(r>=t)r=t;else if(r<0)r=0;else{this.time=r;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===n&&(e>=0?(n=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),r>=t||r<0){let s=Math.floor(r/t);r-=t*s,n+=Math.abs(s);let o=this.repetitions-n;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=e>0?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){let l=e<0;this._setEndings(l,!l,a)}else this._setEndings(!1,!1,a);this._loopCount=n,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:s})}}else this.time=r;if(a&&(1&n)==1)return t-r}return r}_setEndings(e,t,i){let r=this._interpolantSettings;i?(r.endingStart=2401,r.endingEnd=2401):(e?r.endingStart=this.zeroSlopeAtStart?2401:2400:r.endingStart=2402,t?r.endingEnd=this.zeroSlopeAtEnd?2401:2400:r.endingEnd=2402)}_scheduleFading(e,t,i){let r=this._mixer,n=r.time,a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);let s=a.parameterPositions,o=a.sampleValues;return s[0]=n,o[0]=t,s[1]=n+e,o[1]=i,this}}class oq extends i{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){let i=e._localRoot||this._root,r=e._clip.tracks,n=r.length,a=e._propertyBindings,s=e._interpolants,o=i.uuid,l=this._bindingsByRootAndName,h=l[o];void 0===h&&(h={},l[o]=h);for(let u=0;u!==n;++u){let c=r[u],d=c.name,p=h[d];if(void 0!==p)a[u]=p;else{if(void 0!==(p=a[u])){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,o,d));continue}let m=t&&t._propertyBindings[u].binding.parsedPath;p=new oz(oj.create(i,d,m),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,o,d),a[u]=p}s[u].resultBuffer=p.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){let t=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,t)}let n=e._propertyBindings;for(let a=0,s=n.length;a!==s;++a){let o=n[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){let t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){let n=t[i];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0,this.stats={actions:{get total(){return this._actions.length},get inUse(){return this._nActiveActions}},bindings:{get total(){return this._bindings.length},get inUse(){return this._nActiveBindings}},controlInterpolants:{get total(){return this._controlInterpolants.length},get inUse(){return this._nActiveControlInterpolants}}}}_isActiveAction(e){let t=e._cacheIndex;return null!==t&&t<this._nActiveActions}_addInactiveAction(e,t,i){let r=this._actions,n=this._actionsByClip,a=n[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=a;else{let s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[i]=e}_removeInactiveAction(e){let t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;let n=e._clip.uuid,a=this._actionsByClip,s=a[n],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;let u=s.actionByRoot,c=(e._localRoot||this._root).uuid;delete u[c],0===o.length&&delete a[n],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){let t=e._propertyBindings;for(let i=0,r=t.length;i!==r;++i){let n=t[i];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){let t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackAction(e){let t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_addInactiveBinding(e,t,i){let r=this._bindingsByRootAndName,n=this._bindings,a=r[t];void 0===a&&(a={},r[t]=a),a[i]=e,e._cacheIndex=n.length,n.push(e)}_removeInactiveBinding(e){let t=this._bindings,i=e.binding,r=i.rootNode.uuid,n=i.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[n],0===Object.keys(s).length&&delete a[r]}_lendBinding(e){let t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_takeBackBinding(e){let t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n}_lendControlInterpolant(){let e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&((i=new sF(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=i),i}_takeBackControlInterpolant(e){let t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,n=t[r];e.__cacheIndex=r,t[r]=e,n.__cacheIndex=i,t[i]=n}clipAction(e,t,i){let r=t||this._root,n=r.uuid,a="string"==typeof e?sk.findByName(r,e):e,s=null!==a?a.uuid:e,o=this._actionsByClip[s],l=null;if(void 0===i&&(i=null!==a?a.blendMode:2500),void 0!==o){let h=o.actionByRoot[n];if(void 0!==h&&h.blendMode===i)return h;l=o.knownActions[0],null===a&&(a=l._clip)}if(null===a)return null;let u=new o7(this,a,t,i);return this._bindAction(u,l),this._addInactiveAction(u,s,n),u}existingAction(e,t){let i=t||this._root,r=i.uuid,n="string"==typeof e?sk.findByName(i,e):e,a=n?n.uuid:e,s=this._actionsByClip[a];return void 0!==s&&s.actionByRoot[r]||null}stopAllAction(){let e=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)e[i].stop();return this}update(e){e*=this.timeScale;let t=this._actions,i=this._nActiveActions,r=this.time+=e,n=Math.sign(e),a=this._accuIndex^=1;for(let s=0;s!==i;++s){let o=t[s];o._update(r,e,n,a)}let l=this._bindings,h=this._nActiveBindings;for(let u=0;u!==h;++u)l[u].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){let t=this._actions,i=e.uuid,r=this._actionsByClip,n=r[i];if(void 0!==n){let a=n.knownActions;for(let s=0,o=a.length;s!==o;++s){let l=a[s];this._deactivateAction(l);let h=l._cacheIndex,u=t[t.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(l)}delete r[i]}}uncacheRoot(e){let t=e.uuid,i=this._actionsByClip;for(let r in i){let n=i[r].actionByRoot,a=n[t];void 0!==a&&(this._deactivateAction(a),this._removeInactiveAction(a))}let s=this._bindingsByRootAndName,o=s[t];if(void 0!==o)for(let l in o){let h=o[l];h.restoreOriginalState(),this._removeInactiveBinding(h)}}uncacheAction(e,t){let i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}oq.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class oY{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new oY(void 0===this.value.clone?this.value:this.value.clone())}}class oZ extends nf{constructor(e,t,i=1){super(e,t),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){let t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){let t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}oZ.prototype.isInstancedInterleavedBuffer=!0;class oJ{constructor(e,t,i,r,n){this.buffer=e,this.type=t,this.itemSize=i,this.elementSize=r,this.count=n,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}function oK(e,t){return e.distance-t.distance}function oQ(e,t,i,r){if(e.layers.test(t.layers)&&e.raycast(t,i),!0===r){let n=e.children;for(let a=0,s=n.length;a<s;a++)oQ(n[a],t,i,!0)}}oJ.prototype.isGLBufferAttribute=!0;let o9=new x;class le{constructor(e=new x(Infinity,Infinity),t=new x(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){let i=o9.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=Infinity,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x)&&!(e.x>this.max.x)&&!(e.y<this.min.y)&&!(e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x)&&!(e.min.x>this.max.x)&&!(e.max.y<this.min.y)&&!(e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){let t=o9.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}le.prototype.isBox2=!0;let lt=new I,li=new I;class lr{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){lt.subVectors(e,this.start),li.subVectors(this.end,this.start);let i=li.dot(li),r=li.dot(lt),n=r/i;return t&&(n=h(n,0,1)),n}closestPointToPoint(e,t,i){let r=this.closestPointToPointParameter(e,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}let ln=new I,la=new I,ls=new ec,lo=new ec;class ll extends n9{constructor(e){let t=function e(t){let i=[];t&&t.isBone&&i.push(t);for(let r=0;r<t.children.length;r++)i.push.apply(i,e(t.children[r]));return i}(e),i=new tm,r=[],n=[],a=new e7(0,0,1),s=new e7(0,1,0);for(let o=0;o<t.length;o++){let l=t[o];l.parent&&l.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),n.push(a.r,a.g,a.b),n.push(s.r,s.g,s.b))}i.setAttribute("position",new ta(r,3)),i.setAttribute("color",new ta(n,3));let h=new nj({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,h),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){let t=this.bones,i=this.geometry,r=i.getAttribute("position");lo.copy(this.root.matrixWorld).invert();for(let n=0,a=0;n<t.length;n++){let s=t[n];s.parent&&s.parent.isBone&&(ls.multiplyMatrices(lo,s.matrixWorld),la.setFromMatrixPosition(ls),r.setXYZ(a,la.x,la.y,la.z),ls.multiplyMatrices(lo,s.parent.matrixWorld),la.setFromMatrixPosition(ls),r.setXYZ(a+1,la.x,la.y,la.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}let lh=new I,lu=new e7,lc=new e7;class ld extends n9{constructor(e=10,t=10,i=4473924,r=8947848){i=new e7(i),r=new e7(r);let n=t/2,a=e/t,s=e/2,o=[],l=[];for(let h=0,u=0,c=-s;h<=t;h++,c+=a){o.push(-s,0,c,s,0,c),o.push(c,0,-s,c,0,s);let d=h===n?i:r;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3}let p=new tm;p.setAttribute("position",new ta(o,3)),p.setAttribute("color",new ta(l,3));let m=new nj({vertexColors:!0,toneMapped:!1});super(p,m),this.type="GridHelper"}}let lp=new I,lm=new I,lf=new I,lg=new I,l$=new tN;function lx(e,t,i,r,n,a,s){lg.set(n,a,s).unproject(r);let o=t[e];if(void 0!==o){let l=i.getAttribute("position");for(let h=0,u=o.length;h<u;h++)l.setXYZ(o[h],lg.x,lg.y,lg.z)}}let lv=new U;class ly extends n9{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),n=new tm;n.setIndex(new eJ(i,1)),n.setAttribute("position",new eJ(r,3)),super(n,new nj({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&lv.setFromObject(this.object),lv.isEmpty())return;let t=lv.min,i=lv.max,r=this.geometry.attributes.position,n=r.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=t.x,n[4]=i.y,n[5]=i.z,n[6]=t.x,n[7]=t.y,n[8]=i.z,n[9]=i.x,n[10]=t.y,n[11]=i.z,n[12]=i.x,n[13]=i.y,n[14]=t.z,n[15]=t.x,n[16]=i.y,n[17]=t.z,n[18]=t.x,n[19]=t.y,n[20]=t.z,n[21]=i.x,n[22]=t.y,n[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return n9.prototype.copy.call(this,e),this.object=e.object,this}}let l8=new I,lb,lw;class l_ extends n9{constructor(e=1){let t=new tm;t.setAttribute("position",new ta([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],3)),t.setAttribute("color",new ta([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));let i=new nj({vertexColors:!0,toneMapped:!1});super(t,i),this.type="AxesHelper"}setColors(e,t,i){let r=new e7,n=this.geometry.attributes.color.array;return r.set(e),r.toArray(n,0),r.toArray(n,3),r.set(t),r.toArray(n,6),r.toArray(n,9),r.set(i),r.toArray(n,12),r.toArray(n,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}let lE=new Float32Array(1),lT=new Int32Array(lE.buffer);ab.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ab.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},aH.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},ld.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},ll.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},sX.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),og.extractUrlBase(e)},sX.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},le.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},le.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},le.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},le.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},U.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},U.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},U.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},U.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},U.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},ei.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},t3.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},lr.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},v.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},v.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},v.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},v.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},v.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ec.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},ec.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ec.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new I().setFromMatrixColumn(this,3)},ec.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},ec.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},ec.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ec.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ec.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},ec.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},ec.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ec.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},ec.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},ec.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},ec.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},ec.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},ec.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},ec.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},ec.prototype.makeFrustum=function(e,t,i,r,n,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,i,n,a)},ec.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},tV.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},D.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},D.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},eu.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},eu.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},eu.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},eV.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},eV.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},eV.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},eV.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},eV.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},eV.barycoordFromPoint=function(e,t,i,r,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),eV.getBarycoord(e,t,i,r,n)},eV.normal=function(e,t,i,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),eV.getNormal(e,t,i,r)},aG.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},aG.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new su(this,e)},aG.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new sg(this,e)},x.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},x.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},x.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},I.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},I.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},I.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},I.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},I.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},I.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},I.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},I.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},I.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},R.prototype.fromAttribute=function(e,t,i){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,i)},R.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},eD.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},eD.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},eD.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},eD.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},eD.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(eD.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),tC.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(tC.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),nO.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},tU.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(sJ.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(eJ.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),35048===this.usage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(35048)}}}),eJ.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},eJ.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},eJ.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},tm.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},tm.prototype.addAttribute=function(e,t){return(console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute)?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new eJ(arguments[1],arguments[2])))},tm.prototype.addDrawCall=function(e,t,i){void 0!==i&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},tm.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},tm.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},tm.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},tm.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(tm.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),nf.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?35048:35044),this},nf.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},su.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},su.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},su.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},nm.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},oY.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(eW.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new e7}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(tF.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),nu.prototype.clearTarget=function(e,t,i,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,i,r)},nu.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},nu.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},nu.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},nu.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},nu.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},nu.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},nu.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},nu.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},nu.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},nu.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},nu.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},nu.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},nu.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},nu.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},nu.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},nu.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},nu.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},nu.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},nu.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},nu.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},nu.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},nu.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},nu.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},nu.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(nu.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?3001:3e3}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(r9.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(L.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),oI.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");let t=this,i=new oE;return i.load(e,function(e){t.setBuffer(e)}),this},oO.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},tB.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},tB.prototype.clear=function(e,t,i,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,i,r)},T.crossOrigin=void 0,T.loadTexture=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");let n=new sZ;n.setCrossOrigin(this.crossOrigin);let a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},T.loadTextureCube=function(e,t,i,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");let n=new sq;n.setCrossOrigin(this.crossOrigin);let a=n.load(e,i,void 0,r);return t&&(a.mapping=t),a},T.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},T.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"136"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="136"),e.ACESFilmicToneMapping=4,e.AddEquation=100,e.AddOperation=2,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=2,e.AlphaFormat=1021,e.AlwaysDepth=1,e.AlwaysStencilFunc=519,e.AmbientLight=oc,e.AmbientLightProbe=oS,e.AnimationClip=sk,e.AnimationLoader=class e extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=new s5(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(i){try{t(n.parse(JSON.parse(i)))}catch(a){r?r(a):console.error(a),n.manager.itemError(e)}},i,r)}parse(e){let t=[];for(let i=0;i<e.length;i++){let r=sk.parse(e[i]);t.push(r)}return t}},e.AnimationMixer=oq,e.AnimationObjectGroup=o5,e.AnimationUtils=s1,e.ArcCurve=a_,e.ArrayCamera=nr,e.ArrowHelper=class e extends eD{constructor(e=new I(0,0,1),t=new I(0,0,0),i=1,r=16776960,n=.2*i,a=.2*n){super(),this.type="ArrowHelper",void 0===lb&&((lb=new tm).setAttribute("position",new ta([0,0,0,0,1,0],3)),(lw=new ap(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new nJ(lb,new nj({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new tC(lw,new eq({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(i,n,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{l8.set(e.z,0,-e.x).normalize();let t=Math.acos(e.y);this.quaternion.setFromAxisAngle(l8,t)}}setLength(e,t=.2*e,i=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}},e.Audio=oI,e.AudioAnalyser=oO,e.AudioContext=o_,e.AudioListener=class e extends eD{constructor(){super(),this.type="AudioListener",this.context=o_.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new oL}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);let t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(o0,oP,o1),oD.set(0,0,-1).applyQuaternion(oP),t.positionX){let r=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(o0.x,r),t.positionY.linearRampToValueAtTime(o0.y,r),t.positionZ.linearRampToValueAtTime(o0.z,r),t.forwardX.linearRampToValueAtTime(oD.x,r),t.forwardY.linearRampToValueAtTime(oD.y,r),t.forwardZ.linearRampToValueAtTime(oD.z,r),t.upX.linearRampToValueAtTime(i.x,r),t.upY.linearRampToValueAtTime(i.y,r),t.upZ.linearRampToValueAtTime(i.z,r)}else t.setPosition(o0.x,o0.y,o0.z),t.setOrientation(oD.x,oD.y,oD.z,i.x,i.y,i.z)}},e.AudioLoader=oE,e.AxesHelper=l_,e.AxisHelper=function e(t){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new l_(t)},e.BackSide=1,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=function e(t){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new sY(t)},e.Bone=nz,e.BooleanKeyframeTrack=sB,e.BoundingBoxHelper=function e(t,i){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new ly(t,i)},e.Box2=le,e.Box3=U,e.Box3Helper=class e extends n9{constructor(e,t=16776960){let i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new tm;r.setIndex(new eJ(i,1)),r.setAttribute("position",new ta([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new nj({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){let t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=tP,e.BoxGeometry=tP,e.BoxHelper=ly,e.BufferAttribute=eJ,e.BufferGeometry=tm,e.BufferGeometryLoader=ox,e.ByteType=1010,e.Cache=s3,e.Camera=tN,e.CameraHelper=class e extends n9{constructor(e){let t=new tm,i=new nj({color:16777215,vertexColors:!0,toneMapped:!1}),r=[],n=[],a={},s=new e7(16755200),o=new e7(16711680),l=new e7(43775),h=new e7(16777215),u=new e7(3355443);function c(e,t,i){d(e,i),d(t,i)}function d(e,t){r.push(0,0,0),n.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}c("n1","n2",s),c("n2","n4",s),c("n4","n3",s),c("n3","n1",s),c("f1","f2",s),c("f2","f4",s),c("f4","f3",s),c("f3","f1",s),c("n1","f1",s),c("n2","f2",s),c("n3","f3",s),c("n4","f4",s),c("p","n1",o),c("p","n2",o),c("p","n3",o),c("p","n4",o),c("u1","u2",l),c("u2","u3",l),c("u3","u1",l),c("c","t",h),c("p","c",u),c("cn1","cn2",u),c("cn3","cn4",u),c("cf1","cf2",u),c("cf3","cf4",u),t.setAttribute("position",new ta(r,3)),t.setAttribute("color",new ta(n,3)),super(t,i),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){let e=this.geometry,t=this.pointMap;l$.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),lx("c",t,e,l$,0,0,-1),lx("t",t,e,l$,0,0,1),lx("n1",t,e,l$,-1,-1,-1),lx("n2",t,e,l$,1,-1,-1),lx("n3",t,e,l$,-1,1,-1),lx("n4",t,e,l$,1,1,-1),lx("f1",t,e,l$,-1,-1,1),lx("f2",t,e,l$,1,-1,1),lx("f3",t,e,l$,-1,1,1),lx("f4",t,e,l$,1,1,1),lx("u1",t,e,l$,.7,1.1,-1),lx("u2",t,e,l$,-.7,1.1,-1),lx("u3",t,e,l$,0,2,-1),lx("cf1",t,e,l$,-1,0,1),lx("cf2",t,e,l$,1,0,1),lx("cf3",t,e,l$,0,-1,1),lx("cf4",t,e,l$,0,1,1),lx("cn1",t,e,l$,-1,0,-1),lx("cn2",t,e,l$,1,0,-1),lx("cn3",t,e,l$,0,-1,-1),lx("cn4",t,e,l$,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasRenderer=function e(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=ac,e.CatmullRomCurve3=aR,e.CineonToneMapping=3,e.CircleBufferGeometry=ad,e.CircleGeometry=ad,e.ClampToEdgeWrapping=1001,e.Clock=oL,e.Color=e7,e.ColorKeyframeTrack=sO,e.CompressedTexture=au,e.CompressedTextureLoader=class e extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=[],s=new au,o=new s5(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(n.withCredentials);let l=0;function h(h){o.load(e[h],function(e){let i=n.parse(e,!0);a[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(l+=1)&&(1===i.mipmapCount&&(s.minFilter=1006),s.image=a,s.format=i.format,s.needsUpdate=!0,t&&t(s))},i,r)}if(Array.isArray(e))for(let u=0,c=e.length;u<c;++u)h(u);else o.load(e,function(e){let i=n.parse(e,!0);if(i.isCubemap){let r=i.mipmaps.length/i.mipmapCount;for(let o=0;o<r;o++){a[o]={mipmaps:[]};for(let l=0;l<i.mipmapCount;l++)a[o].mipmaps.push(i.mipmaps[o*i.mipmapCount+l]),a[o].format=i.format,a[o].width=i.width,a[o].height=i.height}s.image=a}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=1006),s.format=i.format,s.needsUpdate=!0,t&&t(s)},i,r);return s}},e.ConeBufferGeometry=am,e.ConeGeometry=am,e.CubeCamera=tB,e.CubeReflectionMapping=301,e.CubeRefractionMapping=302,e.CubeTexture=tO,e.CubeTextureLoader=sq,e.CubeUVReflectionMapping=306,e.CubeUVRefractionMapping=307,e.CubicBezierCurve=a1,e.CubicBezierCurve3=aD,e.CubicInterpolant=sI,e.CullFaceBack=1,e.CullFaceFront=2,e.CullFaceFrontBack=3,e.CullFaceNone=0,e.Curve=ab,e.CurvePath=az,e.CustomBlending=5,e.CustomToneMapping=5,e.CylinderBufferGeometry=ap,e.CylinderGeometry=ap,e.Cylindrical=class e{constructor(e=1,t=0,i=0){return this.radius=e,this.theta=t,this.y=i,this}set(e,t,i){return this.radius=e,this.theta=t,this.y=i,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+i*i),this.theta=Math.atan2(e,i),this.y=t,this}clone(){return new this.constructor().copy(this)}},e.DataTexture=nH,e.DataTexture2DArray=iS,e.DataTexture3D=i0,e.DataTextureLoader=sY,e.DataUtils=class e{static toHalfFloat(e){e>65504&&(console.warn("THREE.DataUtils.toHalfFloat(): value exceeds 65504."),e=65504),lE[0]=e;let t=lT[0],i=t>>16&32768,r=t>>12&2047,n=t>>23&255;return n<103?i:n>142?(i|=31744,i|=(255==n?0:1)&&8388607&t):n<113?(r|=2048,i|=(r>>114-n)+(r>>113-n&1)):(i|=n-112<<10|r>>1,i+=1&r)}},e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=s4,e.DepthFormat=1026,e.DepthStencilFormat=1027,e.DepthTexture=no,e.DirectionalLight=ou,e.DirectionalLightHelper=class e extends eD{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===t&&(t=1);let r=new tm;r.setAttribute("position",new ta([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));let n=new nj({fog:!1,toneMapped:!1});this.lightPlane=new nJ(r,n),this.add(this.lightPlane),(r=new tm).setAttribute("position",new ta([0,0,0,0,0,1],3)),this.targetLine=new nJ(r,n),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){lp.setFromMatrixPosition(this.light.matrixWorld),lm.setFromMatrixPosition(this.light.target.matrixWorld),lf.subVectors(lm,lp),this.lightPlane.lookAt(lm),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(lm),this.targetLine.scale.z=lf.length()}},e.DiscreteInterpolant=sN,e.DodecahedronBufferGeometry=ag,e.DodecahedronGeometry=ag,e.DoubleSide=2,e.DstAlphaFactor=206,e.DstColorFactor=208,e.DynamicBufferAttribute=function e(t,i){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new eJ(t,i).setUsage(35048)},e.DynamicCopyUsage=35050,e.DynamicDrawUsage=35048,e.DynamicReadUsage=35049,e.EdgesGeometry=a8,e.EdgesHelper=function e(t,i){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new n9(new a8(t.geometry),new nj({color:void 0!==i?i:16777215}))},e.EllipseCurve=aw,e.EqualDepth=4,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=303,e.EquirectangularRefractionMapping=304,e.Euler=e8,e.EventDispatcher=i,e.ExtrudeBufferGeometry=su,e.ExtrudeGeometry=su,e.FaceColors=1,e.FileLoader=s5,e.FlatShading=1,e.Float16BufferAttribute=tn,e.Float32Attribute=function e(t,i){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ta(t,i)},e.Float32BufferAttribute=ta,e.Float64Attribute=function e(t,i){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new ts(t,i)},e.Float64BufferAttribute=ts,e.FloatType=1015,e.Fog=np,e.FogExp2=nd,e.Font=function e(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")},e.FontLoader=function e(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")},e.FramebufferTexture=ah,e.FrontSide=0,e.Frustum=t3,e.GLBufferAttribute=oJ,e.GLSL1="100",e.GLSL3=t,e.GreaterDepth=6,e.GreaterEqualDepth=5,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=ld,e.Group=nn,e.HalfFloatType=1016,e.HemisphereLight=sK,e.HemisphereLightHelper=class e extends eD{constructor(e,t,i){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;let r=new sm(t);r.rotateY(.5*Math.PI),this.material=new eq({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);let n=r.getAttribute("position"),a=new Float32Array(3*n.count);r.setAttribute("color",new eJ(a,3)),this.add(new tC(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){let e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{let t=e.geometry.getAttribute("color");lu.copy(this.light.color),lc.copy(this.light.groundColor);for(let i=0,r=t.count;i<r;i++){let n=i<r/2?lu:lc;t.setXYZ(i,n.r,n.g,n.b)}t.needsUpdate=!0}e.lookAt(lh.setFromMatrixPosition(this.light.matrixWorld).negate())}},e.HemisphereLightProbe=oT,e.IcosahedronBufferGeometry=sd,e.IcosahedronGeometry=sd,e.ImageBitmapLoader=ob,e.ImageLoader=s7,e.ImageUtils=T,e.ImmediateRenderObject=function e(){console.error("THREE.ImmediateRenderObject has been removed.")},e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=nk,e.InstancedBufferGeometry=o$,e.InstancedInterleavedBuffer=oZ,e.InstancedMesh=nX,e.Int16Attribute=function e(t,i){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new te(t,i)},e.Int16BufferAttribute=te,e.Int32Attribute=function e(t,i){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ti(t,i)},e.Int32BufferAttribute=ti,e.Int8Attribute=function e(t,i){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new eK(t,i)},e.Int8BufferAttribute=eK,e.IntType=1013,e.InterleavedBuffer=nf,e.InterleavedBufferAttribute=n$,e.Interpolant=sD,e.InterpolateDiscrete=2300,e.InterpolateLinear=2301,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.JSONLoader=function e(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=sU,e.LOD=nD,e.LatheBufferGeometry=sp,e.LatheGeometry=sp,e.Layers=eb,e.LensFlare=function e(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=2,e.LessEqualDepth=3,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=sJ,e.LightProbe=om,e.Line=nJ,e.Line3=lr,e.LineBasicMaterial=nj,e.LineCurve=aI,e.LineCurve3=aF,e.LineDashedMaterial=s0,e.LineLoop=ae,e.LinePieces=1,e.LineSegments=n9,e.LineStrip=0,e.LinearEncoding=3e3,e.LinearFilter=1006,e.LinearInterpolant=sF,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=1008,e.LinearMipmapNearestFilter=1007,e.LinearToneMapping=1,e.Loader=sX,e.LoaderUtils=og,e.LoadingManager=s6,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=1025,e.LuminanceFormat=1024,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=eW,e.MaterialLoader=of,e.Math=$,e.MathUtils=$,e.Matrix3=v,e.Matrix4=ec,e.MaxEquation=104,e.Mesh=tC,e.MeshBasicMaterial=eq,e.MeshDepthMaterial=rK,e.MeshDistanceMaterial=rQ,e.MeshFaceMaterial=function e(t){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),t},e.MeshLambertMaterial=sL,e.MeshMatcapMaterial=sC,e.MeshNormalMaterial=sR,e.MeshPhongMaterial=sM,e.MeshPhysicalMaterial=sS,e.MeshStandardMaterial=sT,e.MeshToonMaterial=sA,e.MinEquation=103,e.MirroredRepeatWrapping=1002,e.MixOperation=1,e.MultiMaterial=function e(t=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},e.MultiplyBlending=4,e.MultiplyOperation=0,e.NearestFilter=1003,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=1005,e.NearestMipmapNearestFilter=1004,e.NeverDepth=0,e.NeverStencilFunc=512,e.NoBlending=0,e.NoColors=0,e.NoToneMapping=0,e.NormalAnimationBlendMode=2500,e.NormalBlending=1,e.NotEqualDepth=7,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=sz,e.Object3D=eD,e.ObjectLoader=class e extends sX{constructor(e){super(e)}load(e,t,i,r){let n=this,a=""===this.path?og.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;let s=new s5(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials),s.load(e,function(i){let a=null;try{a=JSON.parse(i)}catch(s){void 0!==r&&r(s),console.error("THREE:ObjectLoader: Can't parse "+e+".",s.message);return}let o=a.metadata;if(void 0===o||void 0===o.type||"geometry"===o.type.toLowerCase()){console.error("THREE.ObjectLoader: Can't load "+e);return}n.parse(a,t)},i,r)}async loadAsync(e,t){let i=""===this.path?og.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;let r=new s5(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);let n=await r.loadAsync(e,t),a=JSON.parse(n),s=a.metadata;if(void 0===s||void 0===s.type||"geometry"===s.type.toLowerCase())throw Error("THREE.ObjectLoader: Can't load "+e);return await this.parseAsync(a)}parse(e,t){let i=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){void 0!==t&&t(l)}),s=this.parseTextures(e.textures,a),o=this.parseMaterials(e.materials,s),l=this.parseObject(e.object,n,o,s,i),h=this.parseSkeletons(e.skeletons,l);if(this.bindSkeletons(l,h),void 0!==t){let u=!1;for(let c in a)if(a[c]instanceof HTMLImageElement){u=!0;break}!1===u&&t(l)}return l}async parseAsync(e){let t=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),n=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,n),s=this.parseMaterials(e.materials,a),o=this.parseObject(e.object,r,s,a,t),l=this.parseSkeletons(e.skeletons,o);return this.bindSkeletons(o,l),o}parseShapes(e){let t={};if(void 0!==e)for(let i=0,r=e.length;i<r;i++){let n=new aG().fromJSON(e[i]);t[n.uuid]=n}return t}parseSkeletons(e,t){let i={},r={};if(t.traverse(function(e){e.isBone&&(r[e.uuid]=e)}),void 0!==e)for(let n=0,a=e.length;n<a;n++){let s=new nV().fromJSON(e[n],r);i[s.uuid]=s}return i}parseGeometries(e,t){let i={};if(void 0!==e){let r=new ox;for(let n=0,a=e.length;n<a;n++){let s,o=e[n];switch(o.type){case"BufferGeometry":case"InstancedBufferGeometry":s=r.parse(o);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:o.type in s_?s=s_[o.type].fromJSON(o,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${o.type}"`)}s.uuid=o.uuid,void 0!==o.name&&(s.name=o.name),!0===s.isBufferGeometry&&void 0!==o.userData&&(s.userData=o.userData),i[o.uuid]=s}}return i}parseMaterials(e,t){let i={},r={};if(void 0!==e){let n=new of;n.setTextures(t);for(let a=0,s=e.length;a<s;a++){let o=e[a];if("MultiMaterial"===o.type){let l=[];for(let h=0;h<o.materials.length;h++){let u=o.materials[h];void 0===i[u.uuid]&&(i[u.uuid]=n.parse(u)),l.push(i[u.uuid])}r[o.uuid]=l}else void 0===i[o.uuid]&&(i[o.uuid]=n.parse(o)),r[o.uuid]=i[o.uuid]}}return r}parseAnimations(e){let t={};if(void 0!==e)for(let i=0;i<e.length;i++){let r=e[i],n=sk.parse(r);t[n.uuid]=n}return t}parseImages(e,t){let i=this,r={},n;function a(e){if("string"==typeof e){var t;let r=e,a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r)?r:i.resourcePath+r;return t=a,i.manager.itemStart(t),n.load(t,function(){i.manager.itemEnd(t)},void 0,function(){i.manager.itemError(t),i.manager.itemEnd(t)})}return e.data?{data:w(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){let s=new s6(t);(n=new s7(s)).setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){let h=e[o],u=h.url;if(Array.isArray(u)){r[h.uuid]=[];for(let c=0,d=u.length;c<d;c++){let p=u[c],m=a(p);null!==m&&(m instanceof HTMLImageElement?r[h.uuid].push(m):r[h.uuid].push(new nH(m.data,m.width,m.height)))}}else{let f=a(h.url);null!==f&&(r[h.uuid]=f)}}}return r}async parseImagesAsync(e){let t=this,i={},r;async function n(e){if("string"==typeof e){let i=e,n=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(i)?i:t.resourcePath+i;return await r.loadAsync(n)}return e.data?{data:w(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==e&&e.length>0){(r=new s7(this.manager)).setCrossOrigin(this.crossOrigin);for(let a=0,s=e.length;a<s;a++){let o=e[a],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let h=0,u=l.length;h<u;h++){let c=l[h],d=await n(c);null!==d&&(d instanceof HTMLImageElement?i[o.uuid].push(d):i[o.uuid].push(new nH(d.data,d.width,d.height)))}}else{let p=await n(o.url);null!==p&&(i[o.uuid]=p)}}}return i}parseTextures(e,t){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}let r={};if(void 0!==e)for(let n=0,a=e.length;n<a;n++){let s=e[n];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let o,l=t[s.image];Array.isArray(l)?(o=new tO(l),6===l.length&&(o.needsUpdate=!0)):(o=l&&l.data?new nH(l.data,l.width,l.height):new M(l),l&&(o.needsUpdate=!0)),o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),void 0!==s.mapping&&(o.mapping=i(s.mapping,ov)),void 0!==s.offset&&o.offset.fromArray(s.offset),void 0!==s.repeat&&o.repeat.fromArray(s.repeat),void 0!==s.center&&o.center.fromArray(s.center),void 0!==s.rotation&&(o.rotation=s.rotation),void 0!==s.wrap&&(o.wrapS=i(s.wrap[0],oy),o.wrapT=i(s.wrap[1],oy)),void 0!==s.format&&(o.format=s.format),void 0!==s.type&&(o.type=s.type),void 0!==s.encoding&&(o.encoding=s.encoding),void 0!==s.minFilter&&(o.minFilter=i(s.minFilter,o8)),void 0!==s.magFilter&&(o.magFilter=i(s.magFilter,o8)),void 0!==s.anisotropy&&(o.anisotropy=s.anisotropy),void 0!==s.flipY&&(o.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(o.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(o.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(o.userData=s.userData),r[s.uuid]=o}return r}parseObject(e,t,i,r,n){let a;function s(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(void 0!==e){if(Array.isArray(e)){let t=[];for(let r=0,n=e.length;r<n;r++){let a=e[r];void 0===i[a]&&console.warn("THREE.ObjectLoader: Undefined material",a),t.push(i[a])}return t}return void 0===i[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e]}}function l(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let h,u;switch(e.type){case"Scene":a=new nm,void 0!==e.background&&(Number.isInteger(e.background)?a.background=new e7(e.background):a.background=l(e.background)),void 0!==e.environment&&(a.environment=l(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?a.fog=new np(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(a.fog=new nd(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new tU(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(a.focus=e.focus),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.filmGauge&&(a.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(a.filmOffset=e.filmOffset),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new t9(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(a.zoom=e.zoom),void 0!==e.view&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new oc(e.color,e.intensity);break;case"DirectionalLight":a=new ou(e.color,e.intensity);break;case"PointLight":a=new ol(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new od(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new or(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new sK(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new om().fromJSON(e);break;case"SkinnedMesh":h=s(e.geometry),u=o(e.material),a=new nO(h,u),void 0!==e.bindMode&&(a.bindMode=e.bindMode),void 0!==e.bindMatrix&&a.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(a.skeleton=e.skeleton);break;case"Mesh":h=s(e.geometry),u=o(e.material),a=new tC(h,u);break;case"InstancedMesh":h=s(e.geometry),u=o(e.material);let c=e.count,d=e.instanceMatrix,p=e.instanceColor;(a=new nX(h,u,c)).instanceMatrix=new nk(new Float32Array(d.array),16),void 0!==p&&(a.instanceColor=new nk(new Float32Array(p.array),p.itemSize));break;case"LOD":a=new nD;break;case"Line":a=new nJ(s(e.geometry),o(e.material));break;case"LineLoop":a=new ae(s(e.geometry),o(e.material));break;case"LineSegments":a=new n9(s(e.geometry),o(e.material));break;case"PointCloud":case"Points":a=new as(s(e.geometry),o(e.material));break;case"Sprite":a=new nC(o(e.material));break;case"Group":a=new nn;break;case"Bone":a=new nz;break;default:a=new eD}if(a.uuid=e.uuid,void 0!==e.name&&(a.name=e.name),void 0!==e.matrix?(a.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(void 0!==e.position&&a.position.fromArray(e.position),void 0!==e.rotation&&a.rotation.fromArray(e.rotation),void 0!==e.quaternion&&a.quaternion.fromArray(e.quaternion),void 0!==e.scale&&a.scale.fromArray(e.scale)),void 0!==e.castShadow&&(a.castShadow=e.castShadow),void 0!==e.receiveShadow&&(a.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(a.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(a.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(a.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&a.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(a.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(a.visible=e.visible),void 0!==e.frustumCulled&&(a.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(a.renderOrder=e.renderOrder),void 0!==e.userData&&(a.userData=e.userData),void 0!==e.layers&&(a.layers.mask=e.layers),void 0!==e.children){let m=e.children;for(let f=0;f<m.length;f++)a.add(this.parseObject(m[f],t,i,r,n))}if(void 0!==e.animations){let g=e.animations;for(let $=0;$<g.length;$++){let x=g[$];a.animations.push(n[x])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(a.autoUpdate=e.autoUpdate);let v=e.levels;for(let y=0;y<v.length;y++){let b=v[y],w=a.getObjectByProperty("uuid",b.object);void 0!==w&&a.addLevel(w,b.distance)}}return a}bindSkeletons(e,t){0!==Object.keys(t).length&&e.traverse(function(e){if(!0===e.isSkinnedMesh&&void 0!==e.skeleton){let i=t[e.skeleton];void 0===i?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(i,e.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=1,e.OctahedronBufferGeometry=sm,e.OctahedronGeometry=sm,e.OneFactor=201,e.OneMinusDstAlphaFactor=207,e.OneMinusDstColorFactor=209,e.OneMinusSrcAlphaFactor=205,e.OneMinusSrcColorFactor=203,e.OrthographicCamera=t9,e.PCFShadowMap=1,e.PCFSoftShadowMap=2,e.PMREMGenerator=im,e.ParametricGeometry=function e(){return console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),new tm},e.Particle=function e(t){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new nC(t)},e.ParticleBasicMaterial=function e(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new at(t)},e.ParticleSystem=function e(t,i){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new as(t,i)},e.ParticleSystemMaterial=function e(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new at(t)},e.Path=aH,e.PerspectiveCamera=tU,e.Plane=tV,e.PlaneBufferGeometry=tX,e.PlaneGeometry=tX,e.PlaneHelper=class e extends nJ{constructor(e,t=1,i=16776960){let r=i,n=new tm;n.setAttribute("position",new ta([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),n.computeBoundingSphere(),super(n,new nj({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;let a=new tm;a.setAttribute("position",new ta([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new tC(a,new eq({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;1e-8>Math.abs(t)&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?1:0,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=function e(t,i){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new as(t,i)},e.PointCloudMaterial=function e(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new at(t)},e.PointLight=ol,e.PointLightHelper=class e extends tC{constructor(e,t,i){let r=new s$(t,4,2),n=new eq({wireframe:!0,fog:!1,toneMapped:!1});super(r,n),this.light=e,this.light.updateMatrixWorld(),this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}},e.Points=as,e.PointsMaterial=at,e.PolarGridHelper=class e extends n9{constructor(e=10,t=16,i=8,r=64,n=4473924,a=8947848){n=new e7(n),a=new e7(a);let s=[],o=[];for(let l=0;l<=t;l++){let h=l/t*(2*Math.PI),u=Math.sin(h)*e,c=Math.cos(h)*e;s.push(0,0,0),s.push(u,0,c);let d=1&l?n:a;o.push(d.r,d.g,d.b),o.push(d.r,d.g,d.b)}for(let p=0;p<=i;p++){let m=1&p?n:a,f=e-e/i*p;for(let g=0;g<r;g++){let $=g/r*(2*Math.PI),x=Math.sin($)*f,v=Math.cos($)*f;s.push(x,0,v),o.push(m.r,m.g,m.b),x=Math.sin($=(g+1)/r*(2*Math.PI))*f,v=Math.cos($)*f,s.push(x,0,v),o.push(m.r,m.g,m.b)}}let y=new tm;y.setAttribute("position",new ta(s,3)),y.setAttribute("color",new ta(o,3));let b=new nj({vertexColors:!0,toneMapped:!1});super(y,b),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=af,e.PolyhedronGeometry=af,e.PositionalAudio=class e extends oI{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,i){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(oF,oN,oU),oB.set(0,0,1).applyQuaternion(oN);let t=this.panner;if(t.positionX){let i=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(oF.x,i),t.positionY.linearRampToValueAtTime(oF.y,i),t.positionZ.linearRampToValueAtTime(oF.z,i),t.orientationX.linearRampToValueAtTime(oB.x,i),t.orientationY.linearRampToValueAtTime(oB.y,i),t.orientationZ.linearRampToValueAtTime(oB.z,i)}else t.setPosition(oF.x,oF.y,oF.z),t.setOrientation(oB.x,oB.y,oB.z)}},e.PropertyBinding=oj,e.PropertyMixer=oz,e.QuadraticBezierCurve=aN,e.QuadraticBezierCurve3=aU,e.Quaternion=D,e.QuaternionKeyframeTrack=sG,e.QuaternionLinearInterpolant=sH,e.REVISION="136",e.RGBADepthPacking=3201,e.RGBAFormat=1023,e.RGBAIntegerFormat=1033,e.RGBA_ASTC_10x10_Format=37819,e.RGBA_ASTC_10x5_Format=37816,e.RGBA_ASTC_10x6_Format=37817,e.RGBA_ASTC_10x8_Format=37818,e.RGBA_ASTC_12x10_Format=37820,e.RGBA_ASTC_12x12_Format=37821,e.RGBA_ASTC_4x4_Format=37808,e.RGBA_ASTC_5x4_Format=37809,e.RGBA_ASTC_5x5_Format=37810,e.RGBA_ASTC_6x5_Format=37811,e.RGBA_ASTC_6x6_Format=37812,e.RGBA_ASTC_8x5_Format=37813,e.RGBA_ASTC_8x6_Format=37814,e.RGBA_ASTC_8x8_Format=37815,e.RGBA_BPTC_Format=36492,e.RGBA_ETC2_EAC_Format=37496,e.RGBA_PVRTC_2BPPV1_Format=35843,e.RGBA_PVRTC_4BPPV1_Format=35842,e.RGBA_S3TC_DXT1_Format=33777,e.RGBA_S3TC_DXT3_Format=33778,e.RGBA_S3TC_DXT5_Format=33779,e.RGBFormat=1022,e.RGBIntegerFormat=1032,e.RGB_ETC1_Format=36196,e.RGB_ETC2_Format=37492,e.RGB_PVRTC_2BPPV1_Format=35841,e.RGB_PVRTC_4BPPV1_Format=35840,e.RGB_S3TC_DXT1_Format=33776,e.RGFormat=1030,e.RGIntegerFormat=1031,e.RawShaderMaterial=ie,e.Ray=eu,e.Raycaster=class e{constructor(e,t,i=0,r=1/0){this.ray=new eu(e,t),this.near=i,this.far=r,this.camera=null,this.layers=new eb,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,i=[]){return oQ(e,this,i,t),i.sort(oK),i}intersectObjects(e,t=!0,i=[]){for(let r=0,n=e.length;r<n;r++)oQ(e[r],this,i,t);return i.sort(oK),i}},e.RectAreaLight=od,e.RedFormat=1028,e.RedIntegerFormat=1029,e.ReinhardToneMapping=2,e.RepeatWrapping=1e3,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=102,e.RingBufferGeometry=sf,e.RingGeometry=sf,e.SRGB8_ALPHA8_ASTC_10x10_Format=37851,e.SRGB8_ALPHA8_ASTC_10x5_Format=37848,e.SRGB8_ALPHA8_ASTC_10x6_Format=37849,e.SRGB8_ALPHA8_ASTC_10x8_Format=37850,e.SRGB8_ALPHA8_ASTC_12x10_Format=37852,e.SRGB8_ALPHA8_ASTC_12x12_Format=37853,e.SRGB8_ALPHA8_ASTC_4x4_Format=37840,e.SRGB8_ALPHA8_ASTC_5x4_Format=37841,e.SRGB8_ALPHA8_ASTC_5x5_Format=37842,e.SRGB8_ALPHA8_ASTC_6x5_Format=37843,e.SRGB8_ALPHA8_ASTC_6x6_Format=37844,e.SRGB8_ALPHA8_ASTC_8x5_Format=37845,e.SRGB8_ALPHA8_ASTC_8x6_Format=37846,e.SRGB8_ALPHA8_ASTC_8x8_Format=37847,e.Scene=nm,e.SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}},e.ShaderChunk=tj,e.ShaderLib=t7,e.ShaderMaterial=tF,e.ShadowMaterial=sE,e.Shape=aG,e.ShapeBufferGeometry=sg,e.ShapeGeometry=sg,e.ShapePath=class e{constructor(){this.type="ShapePath",this.color=new e7,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new aH,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,i,r){return this.currentPath.quadraticCurveTo(e,t,i,r),this}bezierCurveTo(e,t,i,r,n,a){return this.currentPath.bezierCurveTo(e,t,i,r,n,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function i(e){let t=[];for(let i=0,r=e.length;i<r;i++){let n=e[i],a=new aG;a.curves=n.curves,t.push(a)}return t}function r(e,t){let i=t.length,r=!1;for(let n=i-1,a=0;a<i;n=a++){let s=t[n],o=t[a],l=o.x-s.x,h=o.y-s.y;if(Math.abs(h)>Number.EPSILON){if(h<0&&(s=t[a],l=-l,o=t[n],h=-h),e.y<s.y||e.y>o.y)continue;if(e.y===s.y){if(e.x===s.x)return!0}else{let u=h*(e.x-s.x)-l*(e.y-s.y);if(0===u)return!0;if(u<0)continue;r=!r}}else{if(e.y!==s.y)continue;if(o.x<=e.x&&e.x<=s.x||s.x<=e.x&&e.x<=o.x)return!0}}return r}let n=so.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===t)return i(a);let s,o,l,h=[];if(1===a.length)return o=a[0],(l=new aG).curves=o.curves,h.push(l),h;let u=!n(a[0].getPoints());u=e?!u:u;let c=[],d=[],p=[],m=0,f;d[m]=void 0,p[m]=[];for(let g=0,$=a.length;g<$;g++)s=n(f=(o=a[g]).getPoints()),(s=e?!s:s)?(!u&&d[m]&&m++,d[m]={s:new aG,p:f},d[m].s.curves=o.curves,u&&m++,p[m]=[]):p[m].push({h:o,p:f[0]});if(!d[0])return i(a);if(d.length>1){let x=!1,v=[];for(let y=0,b=d.length;y<b;y++)c[y]=[];for(let w=0,_=d.length;w<_;w++){let E=p[w];for(let T=0;T<E.length;T++){let S=E[T],M=!0;for(let A=0;A<d.length;A++)r(S.p,d[A].p)&&(w!==A&&v.push({froms:w,tos:A,hole:T}),M?(M=!1,c[A].push(S)):x=!0);M&&c[w].push(S)}}v.length>0&&!x&&(p=c)}let R;for(let L=0,C=d.length;L<C;L++){l=d[L].s,h.push(l),R=p[L];for(let P=0,D=R.length;P<D;P++)l.holes.push(R[P].h)}return h}},e.ShapeUtils=so,e.ShortType=1011,e.Skeleton=nV,e.SkeletonHelper=ll,e.SkinnedMesh=nO,e.SmoothShading=2,e.Sphere=ei,e.SphereBufferGeometry=s$,e.SphereGeometry=s$,e.Spherical=class e{constructor(e=1,t=0,i=0){return this.radius=e,this.phi=t,this.theta=i,this}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(h(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}},e.SphericalHarmonics3=op,e.SplineCurve=aB,e.SpotLight=or,e.SpotLightHelper=class e extends eD{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;let i=new tm,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let n=0,a=1;n<32;n++,a++){let s=n/32*Math.PI*2,o=a/32*Math.PI*2;r.push(Math.cos(s),Math.sin(s),1,Math.cos(o),Math.sin(o),1)}i.setAttribute("position",new ta(r,3));let l=new nj({fog:!1,toneMapped:!1});this.cone=new n9(i,l),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();let e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),ln.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ln),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}},e.Sprite=nC,e.SpriteMaterial=nx,e.SrcAlphaFactor=204,e.SrcAlphaSaturateFactor=210,e.SrcColorFactor=202,e.StaticCopyUsage=35046,e.StaticDrawUsage=35044,e.StaticReadUsage=35045,e.StereoCamera=class e{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new tU,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new tU,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){let t=this._cache,i=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,oR.copy(e.projectionMatrix);let r=t.eyeSep/2,n=r*t.near/t.focus,a=t.near*Math.tan(s*t.fov*.5)/t.zoom,o,l;oA.elements[12]=-r,oM.elements[12]=r,o=-a*t.aspect+n,l=a*t.aspect+n,oR.elements[0]=2*t.near/(l-o),oR.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(oR),o=-a*t.aspect-n,l=a*t.aspect-n,oR.elements[0]=2*t.near/(l-o),oR.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(oR)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(oA),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(oM)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=s2,e.SubtractEquation=101,e.SubtractiveBlending=3,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=0,e.TetrahedronBufferGeometry=sx,e.TetrahedronGeometry=sx,e.TextGeometry=function e(){return console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),new tm},e.Texture=M,e.TextureLoader=sZ,e.TorusBufferGeometry=sv,e.TorusGeometry=sv,e.TorusKnotBufferGeometry=sy,e.TorusKnotGeometry=sy,e.Triangle=eV,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=s8,e.TubeGeometry=s8,e.UVMapping=300,e.Uint16Attribute=function e(t,i){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new tt(t,i)},e.Uint16BufferAttribute=tt,e.Uint32Attribute=function e(t,i){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new tr(t,i)},e.Uint32BufferAttribute=tr,e.Uint8Attribute=function e(t,i){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new eQ(t,i)},e.Uint8BufferAttribute=eQ,e.Uint8ClampedAttribute=function e(t,i){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new e9(t,i)},e.Uint8ClampedBufferAttribute=e9,e.Uniform=oY,e.UniformsLib=t5,e.UniformsUtils=tI,e.UnsignedByteType=1009,e.UnsignedInt248Type=1020,e.UnsignedIntType=1014,e.UnsignedShort4444Type=1017,e.UnsignedShort5551Type=1018,e.UnsignedShort565Type=1019,e.UnsignedShortType=1012,e.VSMShadowMap=3,e.Vector2=x,e.Vector3=I,e.Vector4=R,e.VectorKeyframeTrack=sV,e.Vertex=function e(t,i,r){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new I(t,i,r)},e.VertexColors=2,e.VideoTexture=al,e.WebGL1Renderer=nc,e.WebGLCubeRenderTarget=tz,e.WebGLMultipleRenderTargets=C,e.WebGLMultisampleRenderTarget=P,e.WebGLRenderTarget=L,e.WebGLRenderTargetCube=function e(t,i,r){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new tz(t,r)},e.WebGLRenderer=nu,e.WebGLUtils=ni,e.WireframeGeometry=sb,e.WireframeHelper=function e(t,i){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new n9(new sb(t.geometry),new nj({color:void 0!==i?i:16777215}))},e.WrapAroundEnding=2402,e.XHRLoader=function e(t){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new s5(t)},e.ZeroCurvatureEnding=2400,e.ZeroFactor=200,e.ZeroSlopeEnding=2401,e.ZeroStencilOp=0,e.sRGBEncoding=3001,Object.defineProperty(e,"__esModule",{value:!0})});